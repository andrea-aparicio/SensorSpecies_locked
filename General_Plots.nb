(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2270694,      41859]
NotebookOptionsPosition[   2268539,      41814]
NotebookOutlinePosition[   2268875,      41829]
CellTagsIndexPosition[   2268832,      41826]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[1328]:=",ExpressionUUID->"fc5f1a20-b802-4d40-80e7-5d2fdff004f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "swarmplot", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"intervalInverse", "[", 
     RowBox[{"Interval", "[", "]"}], "]"}], ":=", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"intervalInverse", "[", 
     RowBox[{"Interval", "[", "int__", "]"}], "]"}], ":=", 
    RowBox[{"Interval", "@@", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "int", "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Infinity"}], ",", "mid___", ",", "Infinity"}], 
             "}"}], "\[RuleDelayed]", 
            RowBox[{"{", "mid", "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Infinity"}], ",", "mid__"}], "}"}], 
            "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"mid", ",", "Infinity"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mid__", ",", "Infinity"}], "}"}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Infinity"}], ",", "mid"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", "mid___", "}"}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Infinity"}], ",", "mid", ",", "Infinity"}], 
             "}"}]}]}], "}"}]}], "]"}], ",", "2"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"intervalComplement", "[", 
     RowBox[{"a_Interval", ",", "b__Interval"}], "]"}], ":=", 
    RowBox[{"IntervalIntersection", "[", 
     RowBox[{"a", ",", 
      RowBox[{"intervalInverse", "@", 
       RowBox[{"IntervalUnion", "[", "b", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "data", " ", "is", " ", "assumed", " ", "to", " ", "be", " ", "a", " ", 
     "sorted", " ", "vector", " ", "of", " ", "numbers"}], "*)"}], 
   RowBox[{
    RowBox[{"beeswarm", "[", 
     RowBox[{"data_", ",", "radius_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"points", ",", "left", ",", "right", ",", "int"}], "}"}], ",", 
      
      RowBox[{
       RowBox[{"points", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"int", "=", 
           RowBox[{"Interval", "@@", 
            RowBox[{"Cases", "[", 
             RowBox[{"points", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
                RowBox[{"y", ">", 
                 RowBox[{"pt", "-", "radius"}]}]}], "\[RuleDelayed]", 
               RowBox[{"x", "+", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"radius", "^", "2"}], "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"pt", "-", "y"}], ")"}], "^", "2"}]}], 
                  "]"}]}]}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"right", "=", 
           RowBox[{"Min", "[", 
            RowBox[{"intervalComplement", "[", 
             RowBox[{
              RowBox[{"Interval", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "Infinity"}], "}"}], "]"}], ",", "int"}], 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"left", "=", 
           RowBox[{"Max", "[", 
            RowBox[{"intervalComplement", "[", 
             RowBox[{
              RowBox[{"Interval", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "Infinity"}], ",", "0"}], "}"}], "]"}], ",", 
              "int"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"points", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"right", "<", 
                 RowBox[{"-", "left"}]}], ",", "right", ",", "left"}], "]"}], 
              ",", "pt"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"pt", ",", "data"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "points"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "beeswarmPlot", "]"}], "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "Graphics", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], "}"}]}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"beeswarmPlot", ",", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"beeswarmPlot", ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"beeswarmPlot", "[", 
     RowBox[{
      RowBox[{"data_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
      RowBox[{"radius", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], "|", "Automatic"}], ")"}], ":", 
       "Automatic"}], ",", 
      RowBox[{"opt", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"beeswarmPlot", "[", 
     RowBox[{
      RowBox[{"{", "data", "}"}], ",", "radius", ",", "opt"}], "]"}]}], "\n", 
   
   RowBox[{
    RowBox[{"beeswarmPlot", "[", 
     RowBox[{
      RowBox[{"data", ":", 
       RowBox[{"{", 
        RowBox[{"__", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"VectorQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], "}"}]}], 
      ",", 
      RowBox[{"radius", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], "|", "Automatic"}], ")"}], ":", 
       "Automatic"}], ",", 
      RowBox[{"opt", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r", ",", "order", ",", "flatData", ",", "colours", ",", "colfun"}], 
       "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "generate", " ", "colour", " ", "indices", " ", "and", " ", "sort", 
        " ", "them", " ", "together", " ", "with", " ", "the", " ", "data"}], 
       "*)"}], 
      RowBox[{
       RowBox[{"flatData", "=", 
        RowBox[{"Flatten", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"order", "=", 
        RowBox[{"Ordering", "[", "flatData", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"colours", "=", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"data", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"flatData", "=", 
        RowBox[{"flatData", "[", 
         RowBox[{"[", "order", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"colours", "=", 
        RowBox[{"colours", "[", 
         RowBox[{"[", "order", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"automatic", " ", "radius", " ", "selection"}], "*)"}], 
       RowBox[{"r", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"radius", "===", "Automatic"}], ",", 
          RowBox[{"4", " ", 
           RowBox[{"Mean", "@", 
            RowBox[{"Differences", "[", "flatData", "]"}]}]}], ",", 
          RowBox[{"2", " ", "radius"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"handle", " ", "the", " ", "PlotStyle", " ", "option"}], 
        "*)"}], 
       RowBox[{"colfun", "=", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ps", "=", 
            RowBox[{"OptionValue", "[", "PlotStyle", "]"}]}], "}"}], ",", 
          RowBox[{"Switch", "[", 
           RowBox[{"ps", ",", "Automatic", ",", 
            RowBox[{"ColorData", "[", "1", "]"}], ",", "_List", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"i", ",", 
              RowBox[{"ps", "[", 
               RowBox[{"[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ps", "]"}], ",", "1"}], "]"}], 
                "]"}], "]"}]}], "]"}], ",", "_", ",", 
            RowBox[{"ps", "&"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "call", " ", "the", " ", "packing", " ", "function", " ", "and", " ", 
         "build", " ", "the", " ", "graphics", " ", "using", " ", "the", " ", 
         "result"}], "*)"}], 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"colfun", "[", "#2", "]"}], ",", 
              RowBox[{"Disk", "[", 
               RowBox[{"#1", ",", 
                RowBox[{"0.95", " ", 
                 RowBox[{"r", "/", "2"}]}]}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"beeswarm", "[", 
              RowBox[{"flatData", ",", "r"}], "]"}], ",", "colours"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opt", "}"}], ",", 
            RowBox[{"Options", "[", "Graphics", "]"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"OptionValue", "[", "Frame", "]"}]}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.819575106799369*^9, 3.819575106800942*^9}, {
  3.821205476398954*^9, 3.821205488478567*^9}, {3.8218792596892233`*^9, 
  3.821879265533944*^9}},
 CellLabel->
  "In[1214]:=",ExpressionUUID->"e2a0241e-d726-4a6a-8359-97cd9cf7fa91"],

Cell[CellGroupData[{

Cell["Import data", "Chapter",
 CellChangeTimes->{
  3.823094461911347*^9, {3.823094692811699*^9, 
   3.823094693297359*^9}},ExpressionUUID->"6baefeaf-e8ac-410c-a8ea-\
5694da8c7294"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OrderMostRepeat", "=", 
   RowBox[{"Import", "[", "\"\<General_data/OrderRepeatSP.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Detect", "=", 
   RowBox[{"Import", "[", "\"\<General_data/DetectSP.mx\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Detect0", "=", 
   RowBox[{"Import", "[", "\"\<General_data/DetectSP0.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SensorScore", "=", 
   RowBox[{"Import", "[", "\"\<General_data/SensorsRepeatSP.mx\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.823092542699543*^9, 3.8230925469806747`*^9}, {
  3.823093977023663*^9, 3.823093980648883*^9}, {3.823094055605342*^9, 
  3.823094068499606*^9}, {3.8230943157221937`*^9, 3.823094316924809*^9}, {
  3.823094364169972*^9, 3.823094465141024*^9}, {3.823094499783593*^9, 
  3.823094500653623*^9}},ExpressionUUID->"9c47ad32-dc0b-4d95-a559-\
95acc48e852c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Best EW score for different ratios R_f", "Chapter",
 CellChangeTimes->{{3.821354736456615*^9, 3.8213547384296007`*^9}, {
  3.823094472774385*^9, 3.823094482244315*^9}, {3.823094732491096*^9, 
  3.82309474885912*^9}},ExpressionUUID->"2def25d3-e572-42f0-942e-\
55eb51f77d91"],

Cell["data", "Text",
 CellChangeTimes->{{3.81921664432439*^9, 3.819216651329068*^9}, {
   3.821880325568944*^9, 3.821880331548046*^9}, 
   3.821881423176735*^9},ExpressionUUID->"43c0e326-474b-4e84-a379-\
b6159a4649d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DetectMost10", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".1"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost15", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".15"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost20", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".2"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost25", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".25"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost30", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".3"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost35", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".35"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost40", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".4"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost45", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".45"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost50", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".5"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost55", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".55"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost60", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".6"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost65", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".65"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost70", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".7"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost75", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".75"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost80", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".8"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost85", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".85"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost90", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".9"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost95", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", ".95"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost100", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Floor", "[", 
           RowBox[{"SetSize", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost105", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Ceiling", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "1.05"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DetectMost110", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"orderM", " ", "=", " ", 
       RowBox[{
        RowBox[{"OrderMostRepeat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Ceiling", "[", 
           RowBox[{
            RowBox[{"SetSize", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "1.1"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "orderM", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "OrderMostRepeat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"DetectSizeProp", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost10", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost15", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost20", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost25", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost30", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost35", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost40", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost45", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost50", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost55", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost60", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost65", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost70", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost75", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost80", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost85", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost90", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost95", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost100", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost105", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", 
         RowBox[{"DetectMost110", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], "/", 
      RowBox[{"Max", "[", 
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"Length", "[", "DetectMost10", "]"}], "-", "1"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DelInf", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"DetectSizeProp", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
       RowBox[{"-", "\[Infinity]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "21", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"pos1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"DelInf", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", ">=", " ", "1"}], "&"}], ")"}]}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"len", " ", "=", " ", 
      RowBox[{"Length", "[", "pos1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"len", ">", "11"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"DelInf", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"pos1", "[", 
           RowBox[{"[", 
            RowBox[{"11", ";;", "len"}], "]"}], "]"}], "]"}], "]"}], "=", 
        "1.04"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"len", ">", "22"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"DelInf", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"pos1", "[", 
           RowBox[{"[", 
            RowBox[{"22", ";;", "len"}], "]"}], "]"}], "]"}], "]"}], "=", 
        "1.08"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"len", ">", "32"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"DelInf", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"pos1", "[", 
           RowBox[{"[", 
            RowBox[{"32", ";;", "len"}], "]"}], "]"}], "]"}], "]"}], "=", 
        "1.12"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "11"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.818958062869203*^9, 3.8189580904298887`*^9}, {
   3.818958334200598*^9, 3.818958363760972*^9}, {3.818958407606903*^9, 
   3.818958438061285*^9}, {3.818960659231503*^9, 3.818960674548473*^9}, {
   3.818960813342667*^9, 3.818960855923562*^9}, {3.8189608940841312`*^9, 
   3.8189609117913313`*^9}, {3.818960945543976*^9, 3.818960990067911*^9}, 
   3.818961026937705*^9, 3.8189611162916317`*^9, {3.818961451829886*^9, 
   3.8189614805716887`*^9}, {3.819034894698016*^9, 3.819034955130003*^9}, 
   3.819035082587399*^9, {3.819035217701145*^9, 3.819035243490471*^9}, {
   3.819037447827283*^9, 3.819037470469224*^9}, {3.8190449200523033`*^9, 
   3.819044932339658*^9}, {3.819045386269998*^9, 3.819045405010754*^9}, {
   3.819045624367618*^9, 3.81904564703573*^9}, 3.819070656745536*^9, {
   3.8194750713519773`*^9, 3.819475113010647*^9}, {3.819496328733777*^9, 
   3.819496351664878*^9}, {3.819496400594041*^9, 3.819496472381247*^9}, {
   3.819496540735989*^9, 3.819496540867443*^9}, {3.8194967572718477`*^9, 
   3.819496765035816*^9}, {3.82188026002442*^9, 3.821880275684136*^9}},
 CellLabel->
  "In[1227]:=",ExpressionUUID->"bc27caa4-1e50-46e2-850a-20195b7764be"],

Cell["build plot", "Text",
 CellChangeTimes->{{3.821880338657147*^9, 
  3.82188034130652*^9}},ExpressionUUID->"8da20c90-90de-41d0-a779-\
cd4137ebc194"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"widthS", " ", "=", ".02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bees", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"First", "@", 
        RowBox[{"beeswarmPlot", "[", 
         RowBox[{
          RowBox[{"DelInf", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "widthS", ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"hexToRGB", "[", 
            RowBox[{"SwarmCol", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "widthS", ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "5", "]"}], "]"}], ",", "widthS", ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "6", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "6", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", "0"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "7", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "0"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "8", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "8", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"3.5", ",", "0"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "9", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "9", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "0"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "10", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "10", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"4.5", ",", "0"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Translate", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"beeswarmPlot", "[", 
           RowBox[{
            RowBox[{"DelInf", "[", 
             RowBox[{"[", "11", "]"}], "]"}], ",", "widthS", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"hexToRGB", "[", 
              RowBox[{"SwarmCol", "[", 
               RowBox[{"[", "11", "]"}], "]"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "0"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"band2", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.3", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", "LightGray", "}"}], "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"band1", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".3"}], ",", ".98"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5.3", ",", ".98"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".3"}], ",", "1.14"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5.3", ",", "1.14"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", "LightGray", "}"}], "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Opacity", "[", "0.15", "\[IndentingNewLine]", "]"}], 
           "}"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "\"\<10%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".5", ",", "\"\<20%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<30%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.5", ",", "\"\<40%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<50%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.5", ",", "\"\<60%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<70%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3.5", ",", "\"\<80%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<90%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4.5", ",", "\"\<100%\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "\"\<110%\>\""}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".2", ",", "\"\<.02\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".4", ",", "\"\<0.4\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".6", ",", "\"\<0.6\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".8", ",", "\"\<0.8\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.06", ",", "\"\<1.0\>\""}], "}"}]}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".3"}], ",", "5.3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".05"}], ",", "1.15"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BeeSwarmAll", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"band1", ",", "band2", ",", "Bees", ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "4"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", ".3"}], ",", 
       RowBox[{"-", ".05"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwlzWtI0wEUxuE5RZp0IbCm0IwwrKGNaGYEm+h0XXBCzEVhFmKuaKRGZNiS
GrnCjZqX4a2ammaNMjb7IFFCBIGtEinJahYo5kgbla5GxLL2+/fh8Hw47znv
urIqvVEsEonSo4PhMc14fnUwt3jqvzecki/43ta3gA+3O8OY/K7yD873/4rR
RvWqZfGCy6YSMNAmS0S7IWctPi/6mYEPFM6tWOo8moX1niYVmnyZOnyqrzah
pKKxAmNKnCeFvfnEaXSXDZvREFZaMOittaLjemEzpklDrUL+w1wbHmmw9Ao9
rng3Wj2XPSgrMNzHlKXGQTS3xPkwJM4awV17c97g4Ix/UnDFxDTq7a5ZzPBX
fceBPMNvnJBmi3bwX9RgRc1BlR1TSqeW7OTuwthKtL7YpMJP3S1qPFSuyMP+
oW1avJPUtR/Hs5Tn0euoqUNz55wDX4sfN+Oeb5Fr+FEi/1wQ9WbRPsFLV+a/
oqWu/gdGIpWxuqjP5MrleHfkViKa4mZXYeqBRzI8NTyZilft3enoi32iwHvS
QCYeHz2mQfVf3W6UmxwluMG7+jCuT/A7cHPHtBMXItmt6Hr7qgs3runpwabF
l7eF/qH2AQyM5l8sp6dP24idNbZ2nA95OzBsK04ykpvZkowlhYu17jPB3LP+
tHP4D6wgVqE=
  "],
 CellLabel->
  "In[1261]:=",ExpressionUUID->"1cf85238-49f3-44cd-9cc9-85ad9287bc1e"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    GraphicsComplexBox[{{-0.3, 0.98}, {5.3, 0.98}, {-0.3, 1.14}, {5.3, 
     1.14}, {-0.3, 0.98}, {5.3, 0.98}, {-0.3, 1.14}, {5.3, 
     1.14}}, {{{}, {}, {}, {}, {}, {}, 
       {Opacity[0.15], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 2, 4, 3}}]]}, {}, {}, {}}, {{}, {}, {}, 
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6], LineBox[{1, 2}]}, 
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6], LineBox[{3, 4}]}}, {
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6]}, 
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6]}}, {
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6]}, 
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6]}, {}, {}, {}}, {
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6]}, 
       {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
        1.6]}, {}, {}, {}}}], {{}, {}}}, {{}, {{{}, {}, 
      {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], LineBox[{{-0.3, 0.}, {5.3, 0.}}]}}, 
     {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {
      {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {GrayLevel[0.85], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.04, 0.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.08695652173913046}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.19047619047619052}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.28571428571428575}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.32608695652173914}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.03533820593923512, 0.3448275862068967}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0.033576929697926625, 0.3478260869565218}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.40740740740740744}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.45652173913043487}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.04, 0.45652173913043487}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.4999999999999999}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.6521739130434783}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.015874840114814232, 0.6888888888888889}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.8260869565217392}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.0174726938005451, 0.8620689655172413}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.8999999999999999}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.03986971498188483, 0.903225806451613}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 0.9473684210526314}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.04, 0.9473684210526314}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0.04, 0.9473684210526314}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.07624645071818607, 0.9642857142857142}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.04, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0.04, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0.08, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.09426005102235506, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0.12, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.13426005102235505, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{0.16, 1.}, 0.019]}, 
     {RGBColor[0.580392156862745, 0.7647058823529411, 0.22745098039215686`], 
      DiskBox[{-0.17426005102235506, 1.}, 0.019]}}, 
    GeometricTransformationBox[{
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.04, 0.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.04, 0.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.1428571428571427}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.23809523809523794}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.03288358289683696, 0.26086956521739135}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.01317825807972022, 0.27586206896551735}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.05296365146415046, 0.27999999999999997}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.014903081653604192, 0.30434782608695643}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.02342561125732414, 0.31578947368421056}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.04246828380541577, 0.3333333333333332}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.0005254933109495423, 0.3478260869565217}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.025292281358334945, 0.3783783783783783}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.0022270840709728845, 0.40740740740740744}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.033576929697926534, 0.5000000000000001}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.5238095238095237}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.65625}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.023123644438080376, 0.6888888888888889}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.004940787018946163, 0.717391304347826}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.7586206896551725}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 0.9130434782608695}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.020537728753255016, 0.9473684210526314}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.020537728753255016, 0.9473684210526314}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.06045106978409037, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.056784179471441085, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.07479777977561007, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.11479777977561006, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.15479777977561007, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.19479777977561008, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.6, 0.32156862745098036`, 0.8745098039215686], 
       DiskBox[{-0.08, 1.04}, 0.019]}}, {0.5, 0}], GeometricTransformationBox[{
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.04, 0.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.045454545454545296}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.0999999999999999}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.23809523809523794}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.01317825807972022, 0.27586206896551735}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.026607135304710018, 0.27999999999999997}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.041259597813044634, 0.30434782608695643}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.31578947368421056}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.03594736413997398, 0.3333333333333332}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.02395110456827354, 0.3478260869565218}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.4285714285714285}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.04, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.5238095238095237}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.65625}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.7931034482758622}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.8518518518518521}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.038673124884711814, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 0.9130434782608695}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.020537728753255016, 0.9473684210526314}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.020537728753255016, 0.9473684210526314}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.06045106978409037, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.056784179471441085, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.07479777977561007, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.11479777977561006, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.15479777977561007, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.19479777977561008, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.8627450980392157, 0.44313725490196076`, 0.1411764705882353],
        DiskBox[{0.16, 1.04}, 0.019]}}, {1, 0}], GeometricTransformationBox[{
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.0335769296979267, 0.021739130434782532}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.045454545454545296}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.0999999999999999}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.27586206896551735}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.3333333333333332}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.03728216855840811, 0.3478260869565218}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.4000000000000002}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.04, 0.4782608695652173}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.5238095238095237}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.039921405691942385, 0.5263157894736843}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.7931034482758622}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.03647426128774801, 0.8095238095238095}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.8437499999999999}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.03917090752804482, 0.8518518518518521}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.03555862064785581, 0.8620689655172413}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 0.9130434782608695}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.020537728753255016, 0.9473684210526314}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.019375612277580345, 0.9500000000000002}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.056737603222214814, 0.9642857142857142}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.0747512035263838, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.1147512035263838, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.1547512035263838, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.1947512035263838, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[
       0.34901960784313724`, 0.19215686274509802`, 0.5764705882352941], 
       DiskBox[{0.04, 1.08}, 0.019]}}, {1.5, 0}], 
    GeometricTransformationBox[{
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.015108205966201159, 0.03703703703703691}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.0999999999999999}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.27586206896551735}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.3695652173913044}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.025956194011476873, 0.4000000000000002}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.04, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.033576929697926694, 0.49999999999999983}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.5263157894736843}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.6578947368421051}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.7272727272727272}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.7931034482758622}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.03647426128774801, 0.8095238095238095}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.8437499999999999}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.03917090752804482, 0.8518518518518521}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.03555862064785581, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.03736199094463447, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.04, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.05537559124880345, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.08, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.09537559124880346, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.12, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.13537559124880347, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.16, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.17537559124880348, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.2, 1.}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.04, 1.08}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.08, 1.08}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.08, 1.08}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.12, 1.08}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{0.12, 1.08}, 0.019]}, 
      {RGBColor[0.33725490196078434`, 0.6941176470588235, 0.4235294117647059],
        DiskBox[{-0.16, 1.08}, 0.019]}}, {2, 0}], 
    GeometricTransformationBox[{
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.03703703703703691}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.0999999999999999}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.27586206896551735}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.43478260869565216}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.04, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.033576929697926694, 0.49999999999999983}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.04, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.6578947368421051}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.7272727272727272}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.7931034482758622}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.03647426128774801, 0.8095238095238095}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.8437499999999999}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.03555862064785581, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.03872983346207418, 0.9600000000000002}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.03736199094463447, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.05537559124880345, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.09537559124880346, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.13537559124880347, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.17537559124880348, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.04, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.08, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.08, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.12, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.12, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.16, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{0.16, 1.08}, 0.019]}, 
      {RGBColor[0.8117647058823529, 0.3529411764705882, 0.7294117647058823], 
       DiskBox[{-0.2, 1.08}, 0.019]}}, {2.5, 0}], 
    GeometricTransformationBox[{
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.03703703703703691}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.0999999999999999}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.27586206896551735}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.43478260869565216}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.04, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.033576929697926694, 0.49999999999999983}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.04, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.6578947368421051}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.7272727272727272}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.7931034482758622}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.03647426128774801, 0.8095238095238095}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.8437499999999999}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.03555862064785581, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.03872983346207418, 0.9600000000000002}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.03736199094463447, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.05537559124880345, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.09537559124880346, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.13537559124880347, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.17537559124880348, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.04, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.08, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.08, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.12, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.12, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.16, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{0.16, 1.08}, 0.019]}, 
      {RGBColor[0.396078431372549, 0.4784313725490196, 0.8705882352941177], 
       DiskBox[{-0.2, 1.08}, 0.019]}}, {3, 0}], GeometricTransformationBox[{
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.03703703703703691}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.2666666666666667}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.43478260869565216}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.04, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.033576929697926694, 0.49999999999999983}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.008973285909298358, 0.5172413793103449}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.6578947368421051}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.7272727272727272}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.8095238095238095}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.0207018812064879, 0.8437499999999999}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.014856739441367908, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.008225934563819974, 0.8947368421052632}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.03872983346207418, 0.9600000000000002}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.03736199094463447, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.0773430282125411, 0.9655172413793105}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.05537559124880345, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.09761466746316072, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.13761466746316073, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.17761466746316074, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.04, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.08, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.08, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.12, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.12, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.16, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{0.16, 1.08}, 0.019]}, 
      {RGBColor[0.6666666666666666, 0.5647058823529412, 0.25098039215686274`],
        DiskBox[{-0.2, 1.08}, 0.019]}}, {3.5, 0}], GeometricTransformationBox[{
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.03703703703703691}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.2666666666666667}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.43478260869565216}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.4782608695652173}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.033576929697926694, 0.49999999999999983}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.5789473684210525}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.6578947368421051}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.7826086956521737}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.029590144394322903, 0.8095238095238095}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.023082674005187882, 0.8947368421052632}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.03872983346207418, 0.9600000000000002}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.03736199094463447, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.0773430282125411, 0.9655172413793105}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.05537559124880345, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.09761466746316072, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.13761466746316073, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.17761466746316074, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.04, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.08, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.08, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.12, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.12, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.16, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.16, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.2, 1.08}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0, 1.12}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{-0.04, 1.12}, 0.019]}, 
      {RGBColor[0.7372549019607844, 0., 0.1764705882352941], 
       DiskBox[{0.04, 1.12}, 0.019]}}, {4, 0}], GeometricTransformationBox[{
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 0.2666666666666667}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 0.43478260869565216}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 0.49999999999999983}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.035455105018590526, 0.5185185185185185}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 0.7391304347826086}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 0.7826086956521737}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.029590144394322903, 0.8095238095238095}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 0.8620689655172413}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.03872983346207418, 0.9600000000000002}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.03736199094463447, 0.9642857142857142}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.0773430282125411, 0.9655172413793105}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.05537559124880345, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.09761466746316072, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.13761466746316073, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.17761466746316074, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.04, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.08, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.08, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.12, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.12, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.16, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.16, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.2, 1.08}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0, 1.12}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.04, 1.12}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.04, 1.12}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.08, 1.12}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.08, 1.12}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{-0.12, 1.12}, 0.019]}, 
      {RGBColor[0.5254901960784314, 0.5254901960784314, 0.807843137254902], 
       DiskBox[{0.12, 1.12}, 0.019]}}, {4.5, 0}], 
    GeometricTransformationBox[{
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 0.43478260869565216}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 0.5185185185185185}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 0.7391304347826086}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 0.7826086956521737}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.029590144394322903, 0.8095238095238095}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 0.9500000000000002}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.03872983346207418, 0.9600000000000002}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.03686753612565153, 0.9655172413793105}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.04, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.05713917537627114, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.08, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.09713917537627115, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.12, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.13713917537627116, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.16, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.17713917537627116, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.2, 1.}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.04, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.04, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.08, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.08, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.12, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.12, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.16, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.16, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.2, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.2, 1.04}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.04, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.04, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.08, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.08, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.12, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.12, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.16, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.16, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.2, 1.08}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.04, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.04, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.08, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.08, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.12, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.12, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.16, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.16, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{-0.2, 1.12}, 0.019]}, 
      {RGBColor[0.49019607843137253`, 0.24705882352941178`, 0.], 
       DiskBox[{0.2, 1.12}, 0.019]}}, {5, 0}]}},
  AspectRatio->NCache[
    Rational[1, 4], 0.25],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.3, -0.05},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{670.7578125, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.3, 5.3}, {-0.05, 1.15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["\"10%\"", TraditionalForm]}, {0.5, 
      FormBox["\"20%\"", TraditionalForm]}, {1, 
      FormBox["\"30%\"", TraditionalForm]}, {1.5, 
      FormBox["\"40%\"", TraditionalForm]}, {2, 
      FormBox["\"50%\"", TraditionalForm]}, {2.5, 
      FormBox["\"60%\"", TraditionalForm]}, {3, 
      FormBox["\"70%\"", TraditionalForm]}, {3.5, 
      FormBox["\"80%\"", TraditionalForm]}, {4, 
      FormBox["\"90%\"", TraditionalForm]}, {4.5, 
      FormBox["\"100%\"", TraditionalForm]}, {5, 
      FormBox["\"110%\"", TraditionalForm]}}, {{0, 
      FormBox["\"0.0\"", TraditionalForm]}, {0.2, 
      FormBox["\".02\"", TraditionalForm]}, {0.4, 
      FormBox["\"0.4\"", TraditionalForm]}, {0.6, 
      FormBox["\"0.6\"", TraditionalForm]}, {0.8, 
      FormBox["\"0.8\"", TraditionalForm]}, {1.06, 
      FormBox["\"1.0\"", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.823094107478429*^9},
 CellLabel->
  "Out[1265]=",ExpressionUUID->"327fcbb6-a6e2-4e5f-af17-cfbcda2f8d71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensor Score - EW Score density distribution", "Chapter",
 CellChangeTimes->{{3.823094533223138*^9, 3.823094534769237*^9}, {
  3.823094682123129*^9, 
  3.823094683577346*^9}},ExpressionUUID->"270a849c-7221-4b31-95b8-\
c0a0444664b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dScore", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Detect", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "/", 
      RowBox[{"Max", "[", 
       RowBox[{"Detect", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "Detect", "]"}]}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"EW", "-", 
    RowBox[{"score", " ", "with", " ", "full", " ", "competition"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"dScore0", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Detect0", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "/", 
      RowBox[{"Max", "[", 
       RowBox[{"Detect0", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "Detect0", "]"}]}], "}"}]}], "]"}]}], ";", " ", 
  
  RowBox[{"(*", 
   RowBox[{"EW", "-", 
    RowBox[{"score", " ", "with", " ", "no", " ", "competition"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FSensorScore", "=", 
   RowBox[{"Flatten", "[", "SensorScore", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"FDetectScore", " ", "=", " ", 
   RowBox[{"Flatten", "[", "dScore", "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"EW", "-", 
    RowBox[{"score", " ", "with", " ", "full", " ", "competition", " ", 
     RowBox[{"(", "flattened", ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"FDetectScore0", " ", "=", " ", 
   RowBox[{"Flatten", "[", "dScore0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PairDetectSensor", " ", "=", " ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"FDetectScore", ",", "FSensorScore"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PairDetectSensorm", " ", "=", " ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "*", 
       RowBox[{"Flatten", "[", "dScore", " ", "]"}]}], ",", 
      RowBox[{"Flatten", "[", "SensorScore", "]"}]}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.823094509423132*^9, 3.823094510394643*^9}},
 CellLabel->
  "In[1346]:=",ExpressionUUID->"e8931fe8-e8eb-47cd-9ffa-99a738857f3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SmoothDensityHistogram", "[", 
    RowBox[{
    "PairDetectSensorm", ",", "Automatic", ",", " ", "\"\<Intensity\>\"", ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"White", ",", "White", ",", " ", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0.85, 0.65], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0., 0.5666666666666667, 0.43333333333333335`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "0.85`", ",", "0.65`"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0.85, 0.65]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0.85, 0.65],
             Editable->False,
             Selectable->False], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0.65, 0.65], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0., 0.43333333333333335`, 0.43333333333333335`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "0.65`", ",", "0.65`"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0.65, 0.65]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0.65, 0.65],
             Editable->False,
             Selectable->False], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0.44, 0.51], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                FrameStyle->RGBColor[0., 0.29333333333333333`, 0.34],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "0.44`", ",", "0.51`"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0.44, 0.51]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0.44, 0.51],
             Editable->False,
             Selectable->False]}], "}"}], ",", 
          RowBox[{"Rescale", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "]"}], "&"}], ")"}]}],
      ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.2"}], "]"}], ",", "None"}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".9"}], ",", ".9"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".8"}], ",", ".8"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".7"}], ",", ".7"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".6"}], ",", ".6"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".5"}], ",", ".5"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".4"}], ",", ".4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".3"}], ",", ".3"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".2"}], ",", ".2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "None"}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "12"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"Mesh", "\[Rule]", "6"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"Automatic", ",", "Above"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"i", "+", ".2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"5", "/", "1.5"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"160", ",", "350"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", ".8"}], ",", 
       RowBox[{"-", ".6"}], ",", 
       RowBox[{"-", ".4"}], ",", 
       RowBox[{"-", ".2"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[1350]:=",ExpressionUUID->"7f5f7f9c-3604-4af6-919e-b697f14d5e42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[
      GraphicsComplexBox[CompressedData["
1:eJyNnQV0FFnXrnF3GGBwdx/cDi7B3QYd3F0adwju7h7cIUjhLj0ElwARknSn
u3EZ7FZV9n53p/i/xWV9a/33vaenn5YndfbZVV0ne5cBTbvFihEjxpZkMWIY
/7fT93sdv9/zaBk2V9X/t1Kd+W+n9t9Oydk+T8z6eaLkCR9ajf/QSvKLt4Wf
vy0sucrr2Op1bMnrXY/Wuh65kWM49/5w7JXcKXxqh/Cpks+Etjsd2k5ytuDi
WYKLS57wIv64F/Elv3hm/HMJ/8nBSk8OSl7/cOaahzMlx7ivv92OkjsFlGof
UEryGXviU/bEkrPdepnp1stI4V8/Oub6Uckvrsx5emWO5CqX/ql46R/J68+X
W32+nOQYZ5N/O5NccqfTxht2Cv+E8U9ytuMLMh5fIHnCkR6jj/SQ/MJ4u5Uk
V9mfusL+1JLX74lYuSfCIfxd+terSe60Y0nbHUskn9nax39rH8nZzP8recKG
dLYN6SS/WGt8wRHCX228YcnR/fKz+OVn8cvP4pefxS8/i19+Fr/8LH75Wfzy
s/jlZ/HLz+KXn8UvP4tffha//Cx++Vn88rP45Wfxy8/il5/FLz+LX34Wv/ws
fvlZ/PKz+OVn8cvP4pefxS8/i19+Fr/8LH75Wfzys/jlZ/HLz+KXn8UvP4tf
fvArTQXjhR2EX5zZL87sF2f2izP7xZn94sx+cWa/wCe/wCe/wCe/wCe/wCe/
wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/
wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/8PzRjl/+luOXv+X45W85fvlb
jl/+luOXv+X45W85fvlbjl/+luOXv+X45W85fvlbjl/+luOXv+X45W85fvlb
jl/+luOXv+X45W85fvlbjl/+luOXv+X45W85fvlbjl/+luOXv+X45W85fvlb
jl/+luOXv+X45W85fvlbjl/+luOXv+X45W85fvlbjl/+luOXP/yaH6+X/r8z
8Isz+8WZ/eLMfnFmvzizX5zZL87sF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jk
F/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jk
F/jkF/jkF/jkF/jkF/jkF/jkF56f/EptHs/Owy/O7Bdn9osz+8WZ/eLMfnFm
vzizX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CT
X+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CT
X3h+8mvpgC/6/y7BL87sF2f2izP7xZn94sx+cWa/OLNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNfeH7y60/zea7BL87sF2f2
izP7xZn94sx+cWa/OLNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNfeH7ya7X5PdyEX5zZL87sF2f2izP7xZn94sx+cWa/wCe/
wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/
wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/8PzR6nu7
pb63W+p7u6W+t1vqe7ulvrdb6nu7pb63W+p7u6W+t1vqe7ulvrdb6nu7pb63
W+p7u6W+t1vqe7ulvrdb6nu7pb63W+p7u6W+t1vqe7ulvrdb6nu7pb63W+p7
u6W+t1vqe7ulvrdb6nu7pb63W+p7u6W+t1vqe7ulvrdb6nu7pb63w6872ZIa
/4NfnNkvzuwXZ/aLM/vFmf3izH5xZr/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/A
J7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/A
J7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/w/NH6qwGW/mqApb8aYOmvBlj6qwGW/mqA
pb8aYOmvBlj6qwGW/mqApb8aYOmvBlj6qwGW/mqApb8aYOmvBlj6qwGW/mqA
pb8aYOmvBlj6qwGW/mqApb8aoKL3VwMs/dUAS381wNJfDbD0VwMs/dUAS381
wNJfDbD0VwMs/dUAS381wNJfDbD0VwMs/dUAS381AH61bGH8uwe/OLNfnNkv
zuwXZ/aLM/vFmf3izH6BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36B
T36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36B
T36BT36BT36BT37h+cmv5eZ68j784sx+cWa/OLNfnNkvzuwXZ/aLM/sFPvkF
PvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvmF5ye/Hhtf
w5qH8Isz+8WZ/eLMfnFmvzizX5zZL87sF/jkF/jkF/jkF/jkF/jkF/jkF/jk
F/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jkF/jk
F/jkF/jkF/jkF/jkF/jkF/jkF/jkF56f/MpkPs9j+MWZ/eLMfnFmvzizX5zZ
L87sF2f2C3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zy
C3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zy
C3zyC89PfnUw3+cT+MWZ/eLMfnFmvzizX5zZL87sF2f2C3zyC3zyC3zyC3zy
C3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zy
C3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC89PfkV9D8/gF2f2izP7
xZn94sx+cWa/OLNfnNkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv
8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv
8Mkv8Mkv8Mkv8MkvPD/5FWR68hx+cWa/OLNfnNkvzuwXZ/aLM/vFmf0Cn/wC
n/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wC
n/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/zC85NfC81+
6wv4xZn94sx+cWa/OLNfnNkvzuwXZ/YLfPILfPILfPILfPILfPILfPILfPIL
fPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPIL
fPILfPILfPILfPILfPILfPILfPILz09+HTQvqHgJvzizX5zZL87sF2f2izP7
xZn94sx+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+
gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+
gU9+4fnJr7tmPz8IfnFmvzizX5zZL87sF2f2izP7xZn9Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8wvOTXx/M6VL84sx+cWa/
OLNfnNkvzuwXZ/aLM/sFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvmF5ye/0prni4LhF2f2izP7xZn94sx+cWa/OLNfnNkv8Mkv
8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv
8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8MkvPD/5VabO
5JJ1JofAL87sF2f2izP7xZn94sx+cWa/OLNf4JNf4JNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNfeH7yq7V5PjIUfnFmvzizX5zZL87s
F2f2izP7xZn9Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8wvOTX6O65B3eJe8r+MWZ/eLMfnFmvzizX5zZL87sF2f2C3zyC3zy
C3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zy
C3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC3zyC89Pfq00z3eL
X5zZL87sF2f2izP7xZn94sx+cWa/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/
wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/wCe/
wCe/wCe/wCe/wCe/wCe/wCe/8Pzk14kxxgcXBr84s1+c2S/O7Bdn9osz+8WZ
/eLMfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFP
foFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFP
fuH5ya+n5vUU4fCLM/vFmf3izH5xZr84s1+c2S/O7Bf45Bf45Bf45Bf45Bf4
5Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf4
5Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Been/z6bv5gLQJ+cWa/OLNf
nNkvzuwXZ/aLM/vFmf0Cn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wC
n/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wC
n/wCn/wCn/wCn/zC85NfWaKeB35xZr84s1+c2S/O7Bdn9osz+8WZ/QKf/AKf
/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf
/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/MLzk18q6nXB
L87sF2f2izP7xZn94sx+cWa/OLNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf4JNf
4JNf4JNf4JNf4JNf4JNf4JNfeH7yi94n/OLMfnFmvzizX5zZL87sF2f2izP7
BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75
BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75hecn
vyZGfW7wizP7xZn94sx+cWa/OLNfnNkvzuwX+OQX+OQX+OQX+OQX+OQX+OQX
+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX
+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQXnp/82hj1PcAvzuwXZ/aLM/vFmf3i
zH5xZr84s1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/g
k1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/g
k1/gk194fvLrfNT3Cr84s1+c2S/O7Bdn9osz+8WZ/eLMfoFPfoFPfoFPfoFP
foFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFP
foFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfuH5ya+QKE/gF2f2izP7
xZn94sx+cWa/OLNfnNkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv
8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv
8Mkv8Mkv8Mkv8MkvPH+0+2P6qn36t//D8b/uJ+1ruV+mr+V+mb6W+2X6Wu6X
6Wu5X6av5X6Zvpb7Zfpa7pfpa7lfpq/lfpm+lvtl+lrul+lruV+mr+V+mb6W
+2X6Wu6X6Wu5X6av5X6Zvpb7Zfpa7pfpa7lfpi98A598Az/a/TJ9LffL9LXc
L9PXcr9MX8v9Mn0t98v0tdwv09dyv0xfy/0yfS33y/S13C/T13K/TF/L/TJ9
lWul+QLgV3Tf/Czjfhjn+7nyOOfo/72/5b/3xzjfT5HHOfO4ebnt/vMY58zj
fD8zHufM43w/Kh7nzON8PyEe5xz99dktr8+Ocb6fB49zjv75BFg+nwCM8+/p
eZwzj/PvoXmcM4/z71l5nDOP8+8ReZwzj/PvyXicM4/z74F4nDOP8+85eJwz
j/P1+DzOmcf5emoe58zjfD0sj3Pmcb6ekcc58zhfj8bjnHmcryficc48zteD
8DhnHufz+TzOmcf5fCyPc+ZxPp/G45x5nM+H8DhnHud+No9z5nHuR/I4Zx7n
fhKPc+Zx7gfwOGce5/Ucj3Pmca7HeZwzj3M9xeOceZznQx63zo+DjY9zqdRf
nHk+5MzzIWeeDznzfMiZ50POPB9y5vkQfJoPwaf5EHyaD8Gn+RB8mg/Bp/kQ
fJoPwaf5EHyaD8Gn+RB8mg/Bp/kQfJoPwaf5EHyaD8Gn+RB8mg/Bp/kQfJoP
waf5EHyaD8Gn+RB8mg/Bp/kQfJoPwaf5EHyaD8Gn+RB8mg85R5+/fFUK/d1/
OyN5YNTjkO0f+97+2FdysffVir6vJnn+m/Tz3qSX/Npt/kNuHHmhYeQFyfuM
t79ScoqwgcnCBkoeGFKrf0gtyXbj684kuZhxGHwr9dH8p8YXLvn1I/MDEP6D
oQ0eDJW8767P7rs+klOYE5vkgbeNNyz1kf2G8U9ysWsbC13bKHn+5ZGzL4+U
/Np4uw0lNz6Xq/65XJL3GV/3f1IfpThlCC55oL/xhUu2G3qPkVzscNOCh5tK
nn8g36wD+SS/3mt+wcLfbbxhyfv8jH+SU2yfkGj7BMkDt7TsvaWlZLvxdgtJ
LrY+VoH1sSTPN6dlqbei1webLPXBJkv9sc9Sf+zD+DJzPjmCcc48bmJnnsI4
5+j1yzlL/XIO483N+e4ixjnzuPl0a65gnDOPtzWPE9cxzpnHA83j8G2Mc+Zx
87BQ4V+Mc+bxd+Z8L/UXZx4vZc7ndzHOmcdHmPO11Fecefy4OR8/wDhnHv9q
zrePMM6ZxyuZL1jqK848Pt48Lj/FOGceP2vOK4EY58zjxl5DMWJIfcWZx3OY
5aiMc+bxGqaQUn9x5vGuxscxXOorzjw+raTxgUp9xZnHtxq6Z5D6ijOPXzEP
AzLOmcfD25nCYJwzjycy/hzmS33FmccLGC+3i9RXnHm8vqFDSamvOPN4X/MP
Tuorzjw+N+rvGuOceXxP1HEE45x5nI5bGOfM43ScxDhnHk8VdVzGOGceLxE1
D2CcM/6+o+Yd+fumzPMdz4c833Hm+Y4zz3eceb7jzPMdZ57vMN/SfMeZ5zvw
ab4Dn+Y78Gm+A5/mO/BpvgOf5jvwab4Dn+Y78Gm+A5/mO/BpvgOf5jvwab4D
n+Y78Gm+A5/mO/BpvgOf5jvwab4Dn+Y78Gm+A5/mO/BpvgOf5jvwab4Dn+Y7
8Gm+A5/mO87sF+q3aP0tm6WfZbP0s2yWfpbN0s+yWfpZNks/y2bpZ9ks/Syb
pZ9ls/SzbJZ+ls3Sz7JZ+lk2Sz/LZuln2Sz9LJuln2Wz9LNsln6WzdLPsln6
WTZLP8umovezbJZ+ls3Sz7JZ+lk2Sz/LZuln2Sz9LJuln2Wz9LNsln6WzdLP
sln6WTZLP8tm6WfZLP0sm4qax6SfFT37IXO/Kvq4PzL3ozhz/4kz95s4c3+J
M/eToj+fHZn7RdFfTwAy94M4c/+HM/d7OHN/hzP3czhz/4Yz92s4c3+GM/dj
OHP/hTP3Wzhzf4Uz91M4c/+EM/dLOHN/hDP3Qzhz/4Mz9zs4c3+DM/czOHP/
gjP3Kzhzf4Iz9yM4c/+Bc1S9vdXyfR5AjqqHjyFH1bcactTHfw55mPl5iE+f
zfd3FXm0+XpvIP80/91Grmb+33+Rp5j1mPh0yZyG7iInMOsl8cnHrH/Ep9mm
Xo+Qb5nzjvgUNU+KT03NeT3Q8nziU2/zD+Cl5fkl7zLnoSALT3xym/NoiIUv
PkXVAaGW1yM+Rc0/4tNi03fx6ZDpu/h03/w+xaeP5vclOb3pu/hU1vRdfGpr
+i4+2czvV3xabfrjVj1HGwdYXm941BWjfJgtOZ9Zt0qeMaTs9CFlJYcb5VIy
yXX6GwWTG3m7cXj1lxz1vUvu2d34J/mKMZ1UlJyvc6o8nVNJntHBmEBdwjfr
csl12iyu2Wax5O1G+dBbcoLmVeI2ryK5Z5O03ZqklRy1DogUfn2jYJI8o+7y
KXWXSw43ysP+kuvUMP5J3m6uOyQnUEbB4BS+8XYvSb5iTJ+rJecrMzhnmcGS
Z5h/V5LDjXIhi+Q6RY2C2CF8o1y6JjlBAaNgktzTXFdJvmKUh/Ul58th/JM8
I6tRIEUI3yiHb0lmvzi3Hm8UUHL+MHr2Q+b5MPq4PzLPh5x5PuTM8yFnng85
83wY/fnsyDwfRn89Acg8H3Lm+ZAzz4eceT7kzPMhZ54POfN8yJnnQ848H3Lm
+ZAzz4eceT7kzPMhZ54POfN8yJnnQ848H3Lm+ZAzz4eceT7kzPMhZ54POfN8
yJnnQ848H3K29uPZN67nOXM9z5nrec5cz3Pmep4z1/OcuZ7nzPU8+FTPg0/1
PPhUz4NP9Tz4VM+DT/U8+FTPg0/1PPhUz4NP9Tz4VM+DT/U8+FTPg0/1PPhU
z4NP9Tz4VM+DT/U8+FTPg0/1PPhUz4NP9Tz4VM+DT/U8+FTPg0/1PPhUz4NP
9Tz4VM//38cvmzoW9f+PnN5mPKHkkSOMf5IfGsv9BpLLGofznJKjjiOyvvts
tDduS25tTF9bJB8zPr7RktN3MyYwySOj5nnhG7p8l/Vd2faGMJKXtzU+QMmf
jT+P8ZKjjhOSjxnL/YKS0zeO+UfjmJJHGm/3gaz3Hhrtjd2SqU4Rfk1jwpb8
2WjnFJXc2piu40o+ZujyRNZ7VAcJ3yhPpkt+aPx5tJdc9i/jn+TlxRIuKpZQ
8ueoOkv4xts9LPmY0d6YJTl9HqNAkTzS+HrLSH4YVccJ35iug2W9GH0+Wo8c
1S/fbZl/DiP/bf7dnUCO6k+fRTbLhMkXkM1y9vpl5PLmf3Ad+ZR53LqFHDUd
yvxoajVc5kfz5We4i/zKrMNkfoyqGx8gR9Xfj5Cj6m2ZH6Pq66fIUfW0zI9D
zPpZ5seo+Vbmx2/m/CPzY9T8K/NhZfP9ynwYNR9LjjouyvwYddyV+fGc+fnI
fBg1X8t8GMfsf8t8mMv8/CTXiqqLkLtH1V3IVNchU92IfC2qLkV2RNW9yEmi
6mrL+UOb5fyhzXL+0GY5f2iznD+0Wc4f2iznD22W84c2y/lDm+X8oc1y/tBm
OX9os5w/tFnOH9os5w9tlvOHNsv5Q5vl/KHNcv7QZjl/aLOcP7RZzh/aLOcP
bZbzhzbL+UOb5fyhzXL+0GY5f2iznD+0Wc4f2iznD22W84c2y/lDm+X8oc1y
/tBmOX9os5w/tFnOH9p+uR4wen9p/W+v5+LH8/Htd9d3Re9HHf7t9V78eD4+
/u76L348Hz9/dz0YP56Pr7+7Powfz8ff310vxo/n4/Pvrh/jx/Px+3fXk/Hj
+fj+u+vL+PF8/P/d9Wb8eJ4ffnf9GT+e54/fXY/Gj+f55XfXp0Xv/8j50v91
vVr0ftDvr1+L3h+S86n/63q26P2i31/fxo/n+e9317tF78/+/vo3fjzPn7+7
Hi56v/f318fx43n+/d31ctH7x7+/fo4fz/P3766ni96P/v31dfx4nv9/d71d
9P62nP/9X9ff8eO5fvjd9Xj8eK4vfnd9Hj+e64/fXa/Hj+f65HfX7/HjuX75
3fV8/Hiub353fR8/nuuf313vx4/n+uh31//x47l++l/XAxaM6oPi8Zyt1wdG
7x8tshz/FmGc+/fR+08HkLl/z5n795y5f8+Z+/ecuX/Pmfv3nLl/z5n795y5
f8+Z+/ecuX/Pmfv3nLl/z5n795y5f8+Z+/fRn0/qe+7fR39+ydy/j86T+p77
99H5Ut9z/z7665F6n/v3nLl/z5n795y5f8+Z+/ecuX/Pmfv3nLl/z5n79+hn
Uv+e+xHcr+B+BGfuR3DmfgRn7kdw5n4EZ+5HoB9C/QjO3I8An/oR4FM/Anzq
R4BP/QjwqR8BPvUjwKd+BPjUjwCf+hHgUz8CfOpHgE/9CPCpHwE+9SPAp34E
+NSPAJ/6EeBTPwJ86keAT/0I8KkfAT71I8CnfgT41I8An/oR4FM/AnzqR4BP
/QjOSzMaDTvJ3F/1Nf/e8qO/ypn7q5y5v8qZ+6ucub/KmfurnLm/ypn7q+BT
fxV86q+CT/1V8Km/Cj71V8Gn/ir41F8Fn/qr4FN/FXzqr4JP/VXwqb8KPvVX
waf+KvjUXwWf+qvgU38VfOqvgk/9VfCpvwo+9VfBp/4q+NRfBZ/6q+BTfxX8
qLpA+NRfBZ/6q+BTf5WzOa2skPVi9OyHzOu96OP+yLxe48zrMc683uLM6ynO
vF6K/nx2ZF7vRH89Aci8XuHM6xHOvN7gzOsJzrxe4MzrAc5c73Pmep4z1+uc
uR7nzPU2Z66nOXO9zJnrYc5c73LmepYz16ucuR7lzPUmZ64nOXO9yJnrQc5c
73Hmeo4z12ucuR7jbL68vOLTReP/sVl8Mp++pPjU0xCgi/hklgN+4lN/4+2/
FZ9MXAXxaajxeU0Wn8YagG7ik2a83oTiU0yj/N8jPlU3BG8qPk01yqGP4tNl
4/+xUnxKaOhQWXyqZ3ydQeLTHOPrmCY+3TbebwHxyazneohP5vq6nPhk1mOJ
xR+zHnsm2azH9opPZj02UXwy67Fm4pNZj+UWf8x67JNksx67Kj6Z9dgq8cms
x/qJT2Y9VkV8MuuxVOKPWY+FSDbrsSPikzlvzxCfzLqgrfhk1mOFPMosn3Z5
NLP8/+FRZrtxkmSzbG4t2bgaoWYRyWZ7NY5k83KEx27kQ8bhep9k8zgzTfJQ
o574W/JdY3oqIbmkUU4kkLzYqCcCXcI33vchyc2NesJX8iGjnugkOY1RT5SW
PNSoJ5JINo8zQZHCN+qJY5IXG/XEXMnvjXZyV8nNjcsvyks2v7cUktOk1P+9
cgrfuNzkpOS7xnS8UHJJo3zqKdn0orLk90b5kUZyc6NcdDiEb6z3NMlpjP75
EslDDe/6SL5rtJOrSi5pfMHpJC82+uf6/Ae+0T0/L5n94rzUqH9/Sn300Sin
vOovc57xqr+OGPWvV/2V1qh/veqv4YavXvXXfcNXr/qrtOGrV/211PDVq/76
aPjqVX+1NHz1qr+OGL561V/mvOJVfw03fPWqv+4bvnrVX6UNX73qr6WGr171
l/l36lV/tTR89aq/jhi+etVfaQ1fveqv4YavXvWXeRzwqr9KG7561V9m/etV
f300fPWqv1oavnrVX0cMX73qr7SGr17113DDV6/6677hq1f9Vdrw1av+Wmr4
6lV/fTR89aq/Whq+etVfRwxfq0hOa/iaVvJww9dIqbdWG/XeT88v9ZY53Q9b
aRmX+dJcZ7bzw7i1HvvHKA9OH7T89zKfmu2Chv4Yt9Zr5vMPOINxa/1m9sOP
nse4tZ4zy4WflzBure+qGC+ozjWMW+s9sz0w/6bl9cl8vcl4ur52jFvrQbP8
SHHH8vnIfG620w4FYNxaL5qfT+t7GLfWjzuN+fTbfYxb60mX8QbWP8S4tb4s
asynNR5j3FpvDjJw4U8wbq0/zfpyzjOMW+tRs74s/hzj1vrUfD29X2DcWq+a
/eGKLzFurV/N15ssCOPWetZcd72QcWt9a76fA8EYt9a7Zn93SgjGrfWv+X5b
hmLcWg+b/dv8rzBurY/Nfu1XGbfWy2Z/9mYYxq31s9mPXReOcWs9bfZfB0Vg
3Fpfm/3W6g6MW+tts7/6hxPj1vrb7KeGybi1Hjf7p8cjMW6tzwsZ/s9yYdxa
rzc0vo72kvsbfw9FPaq+0a7RH2+255KuROZ6njPX85y5nufM9Txnruc5cz3P
met5zlzPc+Z6njPX85y5nufM9Txnruc5cz3Pmet5zlzPc+Z6njPX85y5nufM
9Txnruc5cz3Pmet5zlzPc+Z6njPX85y5nufM9Txnruc5cz3Pmet5zlzPc+Z6
njPX85y5nufM9Txnruc583wYPYtfPN9FHxe/eD7jzPMXZ56vOPP8xJnno+jP
J37xfBP99YhfPJ9w5vmDM88XnHl+4MzzAWc+/nPm4z1nPr5z5uM5Zz5+c+bj
NWc+PnPm4zFnPv5y5uMtZz6+cubjKWc+fnLm4yVnPj5y5uMhZz7+cebjHWc+
vnHm4xln6/WpXN9z/5Qz9085c/+UM/dPOXP/lDP3Tzlz/5Qz90/Bp/4p+NQ/
BZ/6p+BT/xR86p+CT/1T8Kl/Cj71T8Gn/in41D8Fn/qn4FP/FHzqn4JP/VPw
qX8KPvVPwaf+KfjUPwWf+qfgU/8UfOqfgk/9U/Cpfwo+9U/Bp/4p+NQ/BZ/6
p+BT/xR86p9yZt+4vjeP017rxSTG9T9e68W+xukbr/XiDeP6H6/1YiHj+h+v
9aI5D3itFyON85le68X6xs8hvNaLu4y367VeTKIvbxZ5rRfN3zF7rRdvGF+v
13qxkHE6w2u9OHuG/s9rvRhp6Oy1XjR/N+21XtxlXO7ktV5Mots8zmu92Nc4
XeW1XrxhXN7ltV406xSv9eJs4/cuXuvFSONyNq/1Yn3j5x9e68VdxtfrtV40
6yKv9WJf4+cuXuvFG4bOXuvFQsbpG6/14mzj9y5e68VI48/Xa71Y3zhd5bVe
3GVc3uW1XkxiNJi81ot9jdNzXv36G0bd4dWvL2T8/MOrX89+8fqQM68HOfP6
jzOv96I9foDMj7ye48zrN868XuPM6zPOvB7jzOsvzrzeivZ6Wsv8yOspzrx+
4szrJc68Poo2382R+ZHXP9Hm194yP/L6Jtp8m0zmQ16/RJt/D8j8yOuTaPNx
S5kfef3BmdcbnHl9wZnXE5x5/cCZ1wuceX3AmdcDnLn+58z1Pmeu783LKbzO
90TPfshcb0Uf90fmeosz11ucud7izPUWZ663oj+fHZnrreivJwCZ6y3OXG9x
5nqLM9dbnLne4sz1FmeutzhzvcWZ6y3OXG9x5nqLM9dbnLne4sz1Fmeutzhz
vcWZ6y3OXG9x5nqLM9dbnLne4sz1FmeutzhzvcWZ661o69UiHoxz/cXZvJwk
30rMjzx/8vzImedHzjw/cub5kTPPj5x5fsT8TPMjZ54fwaf5EXyaH8Gn+RF8
mh/Bp/kRfJofwaf5EXyaH8Gn+RF8mh/Bp/kRfJofwaf5EXyaH8Gn+RF8mh/B
p/kRfJofwaf5EXyaH8Gn+RF8mh/Bp/kRfJofwaf5EXyaH8Gn+RF8mh/BN34P
+n/0883rqd7viH4+zVf6pUWMP88M0h81j28tpB9qHj3WSP/T/PN+Jf1Oc/4r
Iv3NPMbzD5d+pnm/pI7SvzT/HGNLv9L8c9oWEJ1fT/qR5vXTHuk/rjX+g0XS
bzTXJWWkv2je3+ep9BPN+/VMkP6hef+dXNIvNM9DdZX+4B/G8am09APN8xIJ
pL/Xyng/jyWb1xXtkv7eCuP9jZN+nr9xfGos/bsnxvvNIf0483rX95IzG+//
kvTjzPl6ufTfOhqfR2/pt5nzdUXpr20wPp9k0i8z5+sXkoONz+uA9MvM+Xqq
9MdyG59fK+l/mfN1fo8yr8O77/nFL7Pe+upRmYzrrbyupzC/l12W9eIky3rR
6/ykuV70Oj9prhe9zk+a68XHlvXiPst6cZplveh1ftJcL3qdnzTnOa/zk+Z6
MdCyXjxkWS/6WtaLXucnze/B6/ykuV70Oj9prheDLOvFY5b14lzLetHr/KS5
XvQ6P2muF73OT5rrxVeW9eJJy3pxoWW96HV+0lwvep2fNNeLXucnzfWiw7Je
PGNZLy61rBf7SjbXi9Ukr1+h/0vvtV41LkR1y/Grk3HC+oJkf2N5vFKy+fOY
+7IeNH9Ovkuy+X8nSXYY82FryT7GfFhEsp8xH8aRnMiYDx/LetDsS+6TfM2Y
D6dJLmDMh39L9jXmwxKSHcZ8mECy2fcMlPWgnzEfHpKcyJgPfSX3NubDTpKv
GfNhacnmfb2SSPY15sMgWQ86jPnwmGQfYz6cK9nPmA+7SjbvI1Zecm9jPkwh
+ZoxH76S9WABYz48KdnXmA8XSjbr9J6SfYz5sLJkP2M+TCM5kTEfOmQ92NuY
D89INtcBSyUXMObDvpJ9jfmwmmSH8XOv9JJ9jNsjuOV45WfMCxckc71mlqdD
ZX1glovtZH1gHudOyfrA/P1IQ1kfmL4OkPWBefnuUVkfmOXrT1kfmJdD15b1
wSTjuDv/ZvTcV9YH5no0hawPzPL8UED0199a1gfm+/sm64MbRnm7XtYHyYzV
Rg1ZH5i/qwuX9YFZ/8+R9YFZ7xeX9cEs4/l7y/pgt1HnVpT1wU2Dl0zWAx7j
DbyQnNzgH5D1QXGjPpki64MmxutpKesD8/co+WQ9sMh4fV8lHza+r5uyPrhn
vN51sj74ZMz/g2R9kM6Y/6vL+qCc8QH+IeuBNsb8HyZ5tPH9Hpf1wSpj/p8l
64NTxhfstd58Zsz/XueTon4/VF3Wt8bn81T6G+byYZ70N8yfZzyU/ob5fff0
j57HSH/DXA5dkP5GEuPzTXIZeZ7xH7SQ/kYq4/2vkf6G6cdg6W+YfqSV/obp
h7/0N0w/Okp/w/Qj9oPo/fZt0t8w13v1pL9hru880t8w13OLpL9hrt/KSH/D
PJ/TT/obph9K+hvm+ZyU0s8w/QiRbJ7POSL9DdOPGdLfMM/ntJX+hulHIeln
mOdzfkg2/bBLf8O8Xn6j9DdMP4ZKf+Ok4Uct6W+YfqSXfsYP43jhkJzVeP8n
pb9hzutzpb/R2agbOsn+HG+S9Mk/LDBQbc8yZdG1V3L+hPv/S8NbpYuRLRD9
/21Bj9a+rR6I/n/pwsMXlh4TiP5/3RXjAm4dDET/v9Heyldfhwei/18uonfz
HJmfq/a5bn2qfN8NHp8PKPZhXv8W4c9VwRJF7g2Y6UY/gc8P7PvZ9lHDIS9w
fmDun2m/3XO+UBEZT4SuUW70G/h8wc1s+3fa2rzE+YKM9eJ8+7bnpWqwNN+n
+M9d6Efw+YOhl5vHSZ08COcPLuytdntW+yCcP0jtvFX98vYgNW2yT+I2vV3o
X2D/yKLOkZ0jg3A+4WdFz9322YJxPqHB/cV9AhsG43xC91F5Cl0bEYzzCWkK
d6q/b32wKqkaqxtbI9EP4fMLcWu3OjL/YjDOL4zrkzGofHgwzi9M3d4y7464
ITi/8Nbeo0f1P0JwfuHF9VlzF+cJwfmF0f18Y3UpG4LzC0fdp1Ps9wnB+YWU
jduvHdU2BOcXMjkHXL3aIgTnF4bOdN1wNQ3B+YUdPmun5GocgvMLH96VHObT
IATnF2qcbh23o/78fH7h5pmm9fOVDsH5hcy3ssd4lD0E5xcytlg1bnzSEJxf
qOGTNN+3z8E4v5C+5Adbw5Bg+DVs87vUaXxCVZWsPYft+ehGvyhDghpn/PZJ
Zv+LJqjZJf+FUPi+akvb0JJzQ+H7rOBBfX6MD4XvVRr029R4WCh879X/To2/
e4TC92TVC99Y0iYUPue79r7QeIPH+wH+ufTDoW6h8Pd6kSm3UunPx77mX5/L
b9aUUPiaytHzRM7FofCz9+KDTxbvDIWfH8ulPDnzSij8PJN/TbnDr0Lh49t6
a4s8iv9KlelU+nWxci70y9jP7pWqJTmXX/aXX1vrzaB/a8r+8sWvDhmeupPs
L9+5UJlUnUfL/vILt0fevLhS9pf3z5/mcIVTsr/89Zgbi/k8lf3ls6TtNaqx
55U6WrNG25j/OX/Zj31i2wkxr5wJU49L1Tk18fmv+7OvDPH0DZor+7MfsznP
lRkv+7MHXov37tRg2Z/d//yxFWO7y/7sxfqo1gPayP7stVZ0una0nuzPHpSk
Sq9MTWR/9u620s2P/i37s19OFLp2ck/Zn/19dtvzNMNkf/b2Y4pknD9Z9meP
e2lRmqfLZX/2iRGLqtU4GKZ+/pg9Zf1c1y/7oYcfLW/vGVP2Q1+YcPqgJKll
P3S1s36aZPlkP3StyqJS2yvIfuijirevdKOy7Ie+uV/DEzGqyX7oI1ckLtuq
puyHnq7dqX1DfGQ/9M6rQg5Waiz7oZcrFRBUuZbsh34n8cgtJyvIfui9l/fY
8ldx2Q/9j3nNlj3NI/uh57z2ovyqTLIffck4105lvSX70Z8/NyTnrVDZjz7y
yPrES2PKfuELi55bmS+z7Beulvmm95SW/cKzjemyUWsi+4WvaJFns18/2S/8
wf4V/lNmhavz3YpPm+ET+cv+2VUOj/JplUT2z/6g9Sr9M0j2Z++wrd+4ZPdk
f/baqT9NjXtN9mfv2eZV9jya7M9etsObngMOyf7s308dGpZwh+zPbrs/90vT
PbI/e5Ut1d82OS77s3/wzZZ65gXZn31x113J/rst+7NXPfw8ts9T2Z8948vB
EREe2Z/9RfIunasmkP2zy2wtPWxsdtk/+8b3LR/8Ksj+2dNetH34qWWE6rNg
iU/blK5f9r9+eXdT1gfbZH/1Ts+XdRt9TPZXbxdrjWPNVdlfvX+ukE41nsj+
6hkcuwOGumR/9V3hjS/UiSH7X/fbsfVV6Xiy//WI19X310wi+19v/fa45PBU
sv/16GkZ515NL/tf/3xWZ3f1bLL/9Q/b1RjnMsj+12/qVTx2Mo3sf12uyuEc
25LJ/tfa263fJySQ/a8P720fuDOW7H9d7mOdU03yy/7X9/OmGhv4TfZX31V9
Y58fLtlfPfOB/IlmvZT91WMoFd7gnuyvvuh8i601r8r+6ldrb3498JTsr95l
RoEDM87L/urZIlr2y2aX/dUPzVvewf1U9ldPueLzq3cRsr/6+1OLhpT4JPur
d6/wqFWfxLL/dcNSp1WFPA5Vquq2e9V9f93f+t26qaviDJH903d9itRqz5b9
03cnnfvzn62yf/r4PK9Hdj0r+6c/Pf13ihbPxJ83l09tyP1J9k/fuHjlgN6J
ZH/r3DuTX5qcRfa3Hu937FuJvxyq94fX6TKt89rvmj7vU9lz+YQlc6rlEY1m
Zp3z6/7Q9/+t0mrfD9l/PPPAyjsmu2X/8TSH8pTdHij7jz+uFrQl423Zf3zh
1YylG9+X/ccLno9983Go7D8+8cTQNmEfZP/xDQP8HhSM51SDU92t3z257A/N
f39fkmad8sZrf/Fu6dKePNlJ9hfv5trWbNQE+fwbvy0/Nv862V+8/YZGDWac
lv3FU2QMfBPwXPYXb7rz1pVSsZwqy4usgZ6Rkb/s3/zuWaJsserK/uCHV5fq
b+sg+4NX7Tyn8dAesj94ms2pa90ZJPuDL/p8J9vEMbI/+LxmDTdOmS77g6dP
Nu7Ki4WyP3jp8+ny1Jsn+4NnDlp08+hs2R/8/dgdLfP7yv7gKxoO7jBjuuwP
3vFMtj/vTpH9wdt9qXSz/nDZv3ltrEJfk+eR/ZJjhzbpdSqd7Jc89LC7U+Ny
sl/yuHmbqod0le+j2ogWqWctkv2SExa/VWnieadq/DBb/4nVvPZbJp8ffh3V
ol4h2e+49JMP2a62lv2ODw8YVaX5KNnveO+/t3OPXSP7Hd9pMav3Yv35K3te
ZKm8TPYv5u+/WeMUS88klP1z/cPGxuo3PlLFnn+1xvNPkb/sZxsn2dDc5d7J
fslV+i141LyF7GfbtXC+7198I9XINRUKHcrstT8uPf+dbN3ap46jrwdjVY6/
tYjrl/1LJ/3XoeXgbC514EPV03/O/3U/0x578lxqGyz701a/tiwgZgrZP7Rg
h3xNcrd0q8TLHGnSbPLaL5S+nz7dG7aMU8ut6vhcOrLh86/7d3baXWVyzz9l
/87POcMbvXbK/rAbEr8rs+207A/bZUb7+fYFsr9r5wrt50yv61bOEYP2Fx/2
636ch9udG/41i+zH2SpdpWo5/pP9Xutf/HYowz3Z79Xn4eq1ifbJfq++ZyPz
lJol+6dm6lHhjwaFPOrG2aYz49/9dX/LfwZnTfRHL9k/9ZW7zvhGI2T/1AKO
+lWqT5X9Uyf+feFnr4Wyf2oHx8QUIWtk/9QaAZviPV4q+6c28x23NGSm7J9a
pt3qopfHyP6pOzKmPHRigOyfOmDPk/+W/COf96USl3v0zedR65p0qpzn1K/7
W7581K1c/ORyvVzmLj3CP7yX/VP3L9/ysuNT2T91f9kfXeKdl/1T68b7HP/J
Vtk/1W9AkRmOmbJ/an7/zvsL9ZX9UE9Exlg7LatHVYm3b/OBmJG/7F/5LaLC
sCkJ5Xq4qWc6XTvxTvZHXZN9bJ3VL2R/1CNV/m1R+Y7sj3q/yIdnl8/L/qjb
C7o2lD0s+6PGyTiq5Z2tsj/qkNX7amZeIfujTpniqPNyoeyP2s1/8ciI2bI/
at1EWbr+N032R+3ZS2V7MUH2R52YvsauGTb5e1nSodLt97XFlxhHGr583VSu
r6y86mO+rn/L9ZUFpjc+s7mbXF/Z7ui78of6y/WVBzIcfj9iuFxf2bZaxoGF
Bsn1lVVWXXz9sYdcX1k7R9Pz6zvI9ZW1ei8um7+FXF+p8u7fVqe+XF9ZsXe9
fJ0qyfWQjXKfiztniVwP2SHJ+os1J8r1kOlarc5Rv69cD3mt2XitdSu5HnJy
j5VN09WU6yGn2D/HCfhLrifcM2NIt3WL5HrCgLOpr8ya61GFZlYoP+GJR3OP
Kd3q/sdAtSLh46KBpz1a7w6dx6YYFKhcLxfuWbTKowXbp9R5XjhQbR4xKNmo
vh5tzLMidW53ClQrI9fVTVrRo60u7n/EsT5QvStwpktoYv3vd1vAqI6BgWpk
mS5Nnz1xa4NSPHmyJMNztcHeZ2GuiW6t/ljn7EcTXqgOR9a+0fK6tdHvMsw/
3++luttxd8Zq+ueTfNnP1QVTBKmDhfa3iLXKpS2emaFt+5lBKl2ngQPa/62v
/0bPPjbjdZAq9bX0j5y59Xq8+6ObK0sEq/rJ2+ZM/TpSK/eh1buXvYJV1m+V
BoWdiNT+q52qwd7VwWrf128rns+I1OJVmtrp6tVgVXHpjBrhLfW/n4JfHPPf
BKt2FTcPHJc3UhvwfLVrcZIQtXPCxbq3vujrwzG55n3OEqJu9iua4+N1p/bh
ZpWSuUqEqCZbhxz6uUafP7b+WTasZojyWdvk3qCBTq3W2TeD17UKUflXrQlZ
XMupXT2/KW5wyxB1IWmWY3n1+WTDqEbnPzULUQ/qL0y8751Dy1O8bMyqTUJU
rdGtF1S45tAeVphe3dYwRJXZErP7tfUOLXb7Hl831gtREy7fa3FolEMbtXlg
wTiVQtRH57vgTs0cWoKX8WssLxCi9m+O3J6isEOrUbatT6b0Iaprq0GtLsdz
aJt3vz4zNm6IelLsU6ypLyK0Ep0n1jr5Nlh9uVxrQIqnbm11ylLVt/mEqiy+
rxtGhnq0Mxs3Xjv6IFTd++NwqUsXPFrKJ1/y9toZqnoOKtJ34gaPljzO1Y8H
Z4aqjjfupPoyyqNlKXZ2ceOxoepIgnq9YjT1aPU/LDmfZUioSttwVYK1BTxa
3Tklpn3vFqq2vVv3II/+99aqRt22NdqEqj2X5nx6qf99vUkUY9SkFqFq9vS+
uTpO0n0od3dE7B6h6tDZ3TvjtnBrixKePHB4hJ4HpCu3XfdlxNJHt0bPCFUV
d9SJt+eLS9vZK+WuJqtD1chGNUtfvurSOmRuvOrS8VB1eedf9vDlLu1Itfsj
Uz4NVaMyVNpfpodLy5Tk3ttRsV6p4kVyZauhH3+7rh6/rUiBV6rLXS2uFsel
NWm8KdEJn1fq1LodzZffjdT6+FTpOKDXK7U4z/bEbzdFamlXDdu5wfeVSlra
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
u9+GOtSupLGmZX3m0IKuXJ40YIJDJc5T5R9tn0N7VVVLXn22Q31O7lNvs368
zbvpRPdTCxxqc8qUd4r+7dB2zYm3+eNch6rWJ07DXSUc2uAzQ9KN1h9f4W2j
poUSOjRbinwvXTMdKuTfInH3PY/QEmz5WrXhdP3zS7QpTR79+LdidEjA28VO
tXruj/Cflz1a6id15mxu41S+i3OuOrXdozXYd+pNUE6n+lr4lu1VPLf2oHDJ
eovSO1VEgvWtGt51aakf13k8rrpTZcgcEePJWpf2vUfCPgfGOFXVF/8MWtvT
pWWY9W+6u8edat6crJMHto/UDt7o+aj9X061bKezc9X8+nyff2WHit2dyrFn
2oL0n5zavsRnG32d61ThH8O6fDrv1JYtTZB+8UmnqtGu38yqev3pTGsft6xs
pHpyJdjhO9up+Q+o12jLT6dK+PzB9QZ19fnw3aGrV8dGquACG3o9zODS3vyx
rvKByi51unrCABXbpc2afSHZ+qBItfjP62lnD3NqlSOWL95Vw6U6JhuT6EUr
p5YnTdP9X+Pp6/fIJTeSlHFqLw/8uJjsUaQq6bfhy9Xder0wct7qR03d6lGX
EXeWv3RpYfX//lRZX7//2a2GTTvt0qaXnDlvYG63GjNGDcq72qWNOHB7VbsY
bvWzdeG5fqNc2sWWrR2nH7vU8gNbV/3X0qXtmpl3WvYjLjWoXYZME0u6tHrF
UgcPme9S8ffmXXyue6T2vM2M+J/ru9W8YY6VF6pHaun7hl94kd+t4h19kqt9
tkhtU7pObx8mcKvmc/tEbvzm1H7eO+3sH+FScdOO6Od56NR65jhYM/iqS605
nKtIYb0+aPxpTOcNfi7VNq/j+hh9PTp+/+2C8Wa5VI4BcSb1uu/R/vSvWfJ+
QY/q363upgLj9fXc+eEFI3q5VbNS67fl0OvNrVvfvo89yq2aphq7qkBuj+Zb
x57i9nS36j00T/Doz27tdeO9Mwsucat7XwflzX3TrZ1c+09q+yq3Knfia//z
m/V66e6L2TsXuVWDQ9NLlRrr1rI5ms7qpv/3fkGVc+3R688SHyLPfDXWm+tL
7stSRH988YYhJ/rr4z7VC43Q/Xtzp0Sr913cqvDqLMnuHXJpNYqkv5kyv0d1
Hbata/15+nomeMXXvak8at2G9P7Pe+n1w+cFRc99daujB8u8bVPDpZVYkOtj
k1C3alKxmv1oFv3xjzKPH3DbrVb1GrBk7Be9fozoNWXqUbeKCDk5cqJej94d
kuZd17VutbrXH5M3743Uyt6evnb7FLdacfSPhiG+kVquioem/d3brV7XfVC+
ZbhTS1Nu+JSv2TyqcMislLXPObVz+TKXKJ9UXz/Gbte60mqn1mWc2tv+i1v9
nTJj/bO6f8sL7b5+MsytPJXbfbjX0KmtrLDy7zoP3epW3Flvp+Z1apnrP6p7
/ZpbJbr0VZWP4dTujA3YUvaUWxWpmiz87UOH9jPBlorz97rVnBDHmGn7HVqs
65P/2rDRrc7/2zD02kyHFpDxdILKy9yqW8em6msnvX7zeZxbLXAr94j2r7KV
dWgnz9nPDpvlVhkHbgivkdyhnX7qt+TQVLfaFPn1S/9XEdqnTmmy3BvvVm+T
Ta+dMFJ+34nfH55K22WWv9d+1VnHbyiwQ37P17vbg0R/XZHf8zXuNWrUpFPy
e74931Lt3X5Afs9XpPjA5ru3y+/5Dh9NMbzNJvk93/p7I7tmXSu/5/uveL9O
L5fr3/+Vdq6V/hFa+w7HFlQNDFaxElTdlfdUhHar+bS2R/4MU3saB1fZuS9C
2x7756HK38KV7z+V+8U+GqFt1p6kX68fbwd23956gdujDXmogmK+1I8XyRdf
HKH/93U31429Wvfx4Y9e+eZs1eerwBEBaet61OQNM5L62Dzax01JyrVp7lHF
FvXL27ShRxsUeHZpzg4e9Wlw2jzdcni0AYM3jTnaw6PqLCmzbdpHt3bqeMH7
sQZ5VPXvcQ6eve7WDm1uabs11KNylkn6+stGt1Z6eLt82/t71On240NP2dxa
su0NK17u5lGtr7x2TG/q1hxTa8a48rdHhd3dmLV1AbcWs/yXBzuaeVSRw50i
88Rya2OvDzq60MejXkw/dCDmE5cWsv7bEVXRo+x7j6Y8eStSG+obI12DOR4V
kiVGPdv2SM3V5MKDGTaPutB69J2WkyK1/jl9UxbWX2+LwF1v0v4dqdlsZ5p3
1N9f3dWd1cBS+vrraPe9i6p7VN4H3VJtTxap5ZwyfsCAvzwqX2GfBmdiObTV
ZYtrrZd61F93c7Y4+yhCqxqeZUStBR61NMG59E31zz/XvVJTus31qLIxSmTs
HuHRnr5qUSvE4VJn5la7NWK9RwuecLi8v/76N9zMu98+yKNlb598SIuWHjV/
R/eNB6rr9VixmfFXdvKoWwe2L971h0dLkXr0io299fd7uHD9mOFu7c6UmpWv
DPGo2Zec5+qe1tdTzWNOTaLn02n/U9mWubUZU9+fcPXxqH/Gd/g+VV+PtR+V
4k7Pfzyq+BvXs4913ZrP/SoprrT1qL2fagzrltOtjVfj4hZu6lEV95UZl/e7
S5vX50iHs3X0zztPOrXqoUtfX2Xp+2cFj/JzzgqYHyL7fzof539fKyhSG/Go
S4vrS3Q/bNWHfz4dqflfOP4zwVSPujxq+sLHq/T6Stua76b++vZPTLryychI
7dHm/nFrdNE/7+uRcRe0iNTqd28VNqKJR3Uv3GbKieL699f7eYb41fTX9/jp
g6NJI7U9JXYfT6h//ufXbasY6o7QKn66OPLqIo96ua7uqTuXIrTOry/neTNX
9j9vdOfb0ObP5X7Mk5fuvRE7q9yvOPWmubOHVpH7EQcf/2NF0XVy/+AU6a7+
0y+tR1U4367iuuYuLe9GZ3n3ZY+qlGhh+0t6/dQ01c2Y2iGP8v1Da3BPX5+9
azUhIO0Gj4qZcL3tY3yndvnIqUptL3pU+Pq2VQ4+cWi9T5SskE4/fvj4Jm09
bK9DG9pq6h33Ho+Kt6jF7rOTHVqV+dqaUVs96mSpul12tHZormvNaifVn29K
8ZRNFxd2aB/OJU23f5VHfV11ZFxkfNmvNP+IRhdmVHNpaW+O/zb0jEc9DPG/
ezSjS5u9avHMMfs8qt3Yglcy6PXd00Xztk1Yp/uV+s7talmc2pA0ddLnu65/
XsM3lKn50aHtTdfrdbKzHlUjKP2Phrf0/Lqqx37Eo1wzzlyvp69P1Mb81wJ2
edS3A20mHRrr0O6fa5P+xBb9eHXnS8Dx5g4tZoYeHRet96itayrtO1nQodVI
Xe3NiFVe+6WWuPGg8Xv5/ffXw+mW3/JIP/v+3v8OjwiUfvbU3ZO7zL8h/eWc
Q5NfH/if9JfHx709NcIhv7d+97VLtkzP5PfWmTa1q3/ijkfF3V/p7V+fPNqB
BBd7Oqc+V7NH56j+5T+PFit11p5rQ8LUkrOzpqT95tFKP502+a8WDlXiQ4ar
xdbL7wmt199Zr3/5lsV3m9oVoR3J1TjLlf/C1cB8MU+7jf0M+9e2N7A51Ch7
/Dmh+njRuC3W99f9zHZp25Pe7z1a+qr9z4x0hao1yw/Uzf/GoyVeGNmrW259
PbJ//85XAR4t1ySf0XM/eNSNPGsStNzn0o6Omvuxm9ujRiy+cX3WJJdWbGeD
sPFPdJ+CVp2b4e/U9p7plCOm/vnEaqDulp7j1LoF/7NqaIRHpZrUoEOXTk7t
4Zcx/dvpjy+br/uVYiWd2oma1zYMtHtU1Y/dL9VfHaE5Lvn/6Xd8myqXNHv+
dRsitJP28fOrf5L7hf/1uOiNPz6Hq91pJr98tClCqzC6WxzXKLnfd6b+xabF
1t9vnzp1u+2s5NJ2Vvu8rPhpjyr6fcLaO8ld2toHL+7H2qkfX6afeJ9F9699
3sDkWXT/fh7bM/7RG4fWqPDAsNuaPt90TXLD96I+3y9KO62Z/vfVY86jFv+s
cGiL+jlardLn24SPmkwo3t+hPXv/R4O9+nx56GKuMxmrO7RWG+LtbqTPl3+t
u7M5bnqH5nFVqunW58uZgV1O59ffT/KPJR/OmSv33/5y54940/R8cemYZBuz
yv1yVzeoGfnI49HSJjhcfnIHuV/+dv+Hx6rcl/vJr3gxt8HO1GGq1qR6vRa4
PNr2ZHtatn0o92uf1y2Ofd7X8F/qCR7f9nrnjL1jJRctffNB69Fy//CU4fvT
9NZfX99TjRNn0P1sceborNCNz9WN7Qu+HP/g0XoOunF4gEfuN70+/cEj6fQ8
Y9+3a8/1+b1dwwHv84SGqvk/4yfP9MOjtZ/c7P6DsDC1/8HEBws+erRJr2KW
/VFA7jedruD0vEH5I9T2iYEvjunvJ+OemU3vZ49QPum2Vxyp//f3a/Wcvby1
3H86y+4mf3c87FRlV2zq2l7/vLKcPfC493ansu+vmeHWV/14229o6otX5P7T
I/LPPNDkruTJ2aefnpDYoz6u2re601uPlibl2LlaMo8qPe2KvXx7uf9yiT+v
dLAXdmm1Ch6vMOyoR10tnqNXza+RWqMBsbtn26g/PmWzvyumcmobIiN8H+rH
5/AVE3KMCdaPn1cu+P444dHXJ8tLnDyk+zC1V/Xc+vHw07aXHeNMd2glRyWs
+UI/3n6c+nnZ5bYO7YzfzpcN9ePtwEq2vAuLOLTY3x4+vK0fv/6yHA/mdl2b
J+FavV4scy7BlcDtKtPS8w9vH3Fp+9vs/1z2jUc9sK/764NenzvzLEw56KVH
5frZd3QJvT5vUOL0zOL/etSSXHGCz550av++W1Lhpf73mrlBzourlji1pJny
7VsYqftaaHCncv2d2u3916cNeq7PN+ULratdy6kV7tSqUOZ7HvV42fvZ7ddE
aNnS78/zov9O9eDSijIR+uupnflA/qvXg1X48J41+xjj52K/nZ4k7Bf/Mix7
9yCB/n7Uo8wfU47R11OFGvm6dR/irB6UvMcxp9pwf2vqsZ89WsJcA6t2TeBR
jQpHuE480L+v9APvO97qn99F99llJ1xa7ltrcmZ8p89/V39Ms6/Q85+V7F1C
Par54tO+aqRLf31d0jR+4FEZ/KZXG3Taqf1xpWXWMV89qvK/C498W+XUbJOa
bQ/Rj2fldg15mn2UU7txYunBT0EeNbrZ2OR1Wji15vWc2w8+9KhnbVPM8y/m
1LaW35dl1W15/7n+P9//V8vxeQAdn6vS8flPy+dhPV7z7+VSjfkwuFG+rXK/
t9hvE0U+24W8cPge32FX5PeE/SO3l0+TWH4PuGFkufxH38vvAUuNrNN/6HD5
/V/nf4au6jhGfr+X4HrfjBvmyu8NHC0mtk58TK6fnxF8/n6HH3J9e4mB6boM
jZDr1z+3b+bsXVKuV38dei1xk7ZyvXrlfH17vLgm16cP++Fbas9ZuR79n0WP
szlieFStCmPTbX7o0bq0UUeK6d//+Q7l6ya6KL/vm/9lw/WyD+X3crlt6uCU
S/L7s/8HGhwA8g==
       "], {{{
          EdgeForm[], 
          GrayLevel[0.8], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
y47v6PYu+7mvVScHqU52q47vaer+wXO0865uV66h10Dfij4VvUYPx1tVxzdQ
T4whZPDW7sdtPFZ3cX7k1cfXubZFddQ360Zr50Edt62OOqU9WZNbVEdfY/3c
xn3hIIfbVsfau7Wv9XDdkHdPh1tWx5q6lfPq5bStPA6aua638zvpU3u5Xtet
Djmj6DLtUB1jI/W7a/39e/te+u72zqPk9/B9rJ/0ZeZi+h/lQFFLf5laHWsw
8sv1DpEFpjlExrm2OmQO5IXp1SGvIHdMqY41m+cnV8eaTXyGryN33OgQ2WRm
dcglyDi3VIcMNEZ0g99DvrNF54rOE93q68Rvch48f5uvny+6uTrkqnOc1k/U
388hW/V12NZ13Nfh9r53e9drf4f008Mc0n8HVEe/pB8NdEjfPNIh/XeI24x2
2EP0jfp2H/XtwY7v6W/o63cO8nOMm2P8HHPPsQ7pF0f7OfId6T0E/X6W649v
vqY65EvahnHO+ooswLhl/SZOOyPrMC8gCzJm6O/Inm1cL8x/rOWs4fTFn6vi
efomMgFx+taqqojTd/9z3siY2zrfK/w9fAfzKfnR5+jLzIM/VkU/JSQv5mDK
y7uvc/+iD13pPFgrrnKITHex24C6v7o65Gy+/yjRt6rzvqrzS3x9kPtHf7fn
RW5Lnr+wOtYk4hdUx1pFfKzvJT6xOuRv5O5JDnnf5W5vvnOCy8V9l1ZHe9Nu
410m4pc5bYjrFdkKuYq9/SLvFdFnoIdC/7S4pPqsyeVeVPiRnpknelz0scP5
og9Fj/naJ057QvSXnntd9IboM8WfFD0lek7xGaIbRc+LZopmiZ4STRVdL3ra
4TTRMw5vEC1wOF30rEPyWuj8bhJ97vc8LfrUZeHdH4gedVnfEN0julf0pegZ
0QLR16JnKSN9QfSK6FX6o8NlondED4keFr3rcK7oC7+TvJ4pxT0LFL6v8BG/
+z3fS3yRy8v3v+my3Cd6S3S/6AHRSocPilb4OtdecJ3dLHpFdIfof6JXHc4R
/S5aJnpN9LPoJdFS0U+iJY6vom0d/64mykSb/Cla7vb7w3kQX+13kO8vzu9l
0UrRA6IHRe+IHhI9LPre+VHet32da7/6Ocr+m8NX/b67Rfdwj77zZbfBj4ov
dlkpx12+j3LfKprt7yG8zeUivN3vud11tNh1dovzusXPPyma4v43X3SdaLLo
cdG1jlMHd/rdy1zHxH/w95H3JOpFY38E5+bir/Hzj/ra1aLHHHLtLdH9rrvf
3b9eY+yIXnc/XVQd6w3r1cLqWMOI/1Md/YZ+8Z/7Df1lZ+XVWLQG5aqOOZp1
aRenNamJ/j3DedHvWfNYS//2O8l3sZ9jbXze75/lPs7aPM19fZqff9Z5kG87
vaPicuzqd64p2l3UVLSWaE/R2qJ1RNuL6kQl0XaiRo7v5evritqL1hM1E7UV
Jb6vjajoeGtRwfFWorzje/idvG83l4VyMKb/J5oj2knxssu9g8uS1sT8V+u8
dnQa9y3zc3eKXnQ93er+eofzXeVrS+jDrtMX3bZ3ew46qKK5X/1lh0q0Pfnd
JfrKbUO9/lAdbcnz37s9iH/n/kF8Ofep7w1SXr+IX+rxw3zD2sAa8rPoJV/7
pjr6AX3qW4fk9ZPLy31/Ot/XPWeRxyTPZYSse8y1U90nlrgOZvt5wtv8PsLb
XabbXUfMy1P8PPP0ZMdZQ65zfBzfqe86LIk1BjkDGfBxh9zHHHyVv/Mxl+sa
1yVr7cWuU0LWZObmK/3MCrXlfR6Hb4rudfwNz0PEu2geX12n9URl2Ef8b+I/
Ed9B/E/iPxDfUfzP4j8U30n8L+I/Er+v+N/Ffya+s/hfxX8s/my1922NVE6F
j5eiL3yeanyVYr7/RvxC8dV6/7finyzF3P+V+BfEt1T6d+KfKMW68KX4+aVY
R74Qv5PyvbGgb6wEwR+i8ErRNPG9FV6hPI4RHSu6THS0aIjoSqcdJ5ogOl50
gmiiw6Giy30vz0+qVZ8QPVIbOn324+hBrtA7rta7DlbYTnSz+AmVIPi+Cp8q
xRr3tco8UfG7lN5P4c6MB/GTFK7WPd8yhssRJ72/wm1EN6lvnKBwie45WPd8
r3xeEt+buVn8K+LPFv+j+FfFnyN+lfhl4seI/0n8a+LPFf+z+I9KMR9zOLOi
FOvGb0p/qxRr62rxK0teY8W/X4o+8o/4d0qxPvwp/t1SrFF/iX+zFGvQr+Lf
LsW68Yf4D0rR1/4V/2Ep+uB/4t8rRd/7W/xVbgfa4I1SrGu/KP3TUqyxNSrn
5+KfYI4S/zUyB3Og+E9Ksd5Wi/9W/IfMmeK/Ef8Bc6b4c6hP9cNrFX6m9LnM
d0r/DpmPeVj89+I/Zk4U/6P4z5gDxa8S/zlzpviPS7G+V4n/SfwXzP/ifxX/
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
m/ZCJ06bDUxCX8N8OTIJnSZz9rZJ2MEwbzE3YcvH/MRZO2fuYAw477u3GPp5
7JDvLwYe6gEUfqXQE8wVX12KPfR94v+ri737Q+KrSqEzwH4ZDBU4mcOT0Psw
92OvgN0CNu7smdFPMfffrGdPLIXcNCoJfQfz1qlJ6F6Zzy5PwhaZuXB8Evod
5rwLktDRMHf2qcSesa3Cc5LQyzDPjU5C18M8x/6c8yHWH/T96MLQg7EOoRtH
P8Y7mJ84P2YfxRzN/JzXt84pxf6muedf5t5apf+vFH7b2F+xrrCm1Cj9jlL4
rd3I8yZzZlHpd5Vi37OR7Rb4h2BB6XeWYp9UJ/7eUux92eOxbrFmzaBdSoHL
BpfXh/mxEni93syz9HH2z6X4Vyz9HjwgY4I9MHhA9tzst8H9oRcp610PlGJ/
jH4EvQw6mLHW44BBYK+ITMBcO529re4fWIm9Ivog9pe0Kzgy+hT9nnMW+jL9
mLMY+ixnUoPEb1yJ/so5znOeSzgzWui5hLOqRZ5LOJ963vMT51aMFc6GjhK/
SSXOlQaL31ThtV57WHcOSeKMkPUfeZx/diJ/g/UbQv+vxPjh/IixzjgHZ0c/
vYGxqW88XOF89c98KfRJjVRX95RiXw7W71jmmUpgAI8Wv1kl9vacbaEPQBcA
1g+bEPB9xzBfIb8rz7VL0U+vE38kds9J7G+QXdjjYCsLjhhbd+wh0NOgP0K3
9Z7jYIfB3g6yfSw4VmxlWYPR9aDnwWYeTCt2s8z77AfYC5zk6+wT0Leif2I/
M9P7nOxfOoTs38AaMJ/Sx3r6nBfMMv3rZc+7zO/s/Ua43d72vMjZFXs7dOHI
7p8WQ6/Nvy4+K4bO9FSnofM+zWnsOWlz9jW0OzLThy7rcH8H+3zOsdBLo58+
0TbD2Cc3te0KY4S+z56G/r+Wxx3jD1+E6J3Guf+yV3jKfZC92yL3U/ZA9FXO
tPCXxxkXe8vvHAfTDSYau3r+Ocqen/3+bO8t2Vdi+4IuED0duHIwwmDAWd+W
ek1DfsTemnkaW30w2mAfWBvZD7E+Ileyd0G2BB8BxhybanQin7iu17bNBmME
TAzn59j1YDeO/T/24diKg6040zbn2GZji86ZNroczrOwQwarPsr252CWh9km
GVz86bbZBtd8gu29wTsPtU04NtvYh2PrDnYD+/Dpto+daVto/JYMt400/k5G
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
             "]], 
            PolygonBox[CompressedData["
1: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
z0T9+Rq5Z5f6Y1E2PbI7oC+QzQzN30idsZH3IZ8F2T3QV86d4N+5x6y0vx/8
AOhfyEZBX6rbkB3H/cdB/hD33RF8LHhs8INF5otdavvR+W0X9TP3ukmbH3xn
FVtzyP+bf7ep9a3z7bZVbB1tiHU70S9bIBtU6x/t3837Ujaytq8360vZLfX8
PbTWz87HzvdDavvhrtp+3Rh+k9pe3oHnP4bn7/L8D/D8u4FPAk/gmgy8q/q6
kd+wheOpym/RptxM+4z6R1G/pP69Xq++b+SaQcj3QX4G8smQP4N8D/Ap4InA
T4D3Ap8GngT8FHhP8KngicFPFrGnN+3Lb3T9sD/ys5FPifx55PuCzwRPDn62
iL62rwbX+v0A5Ocgnwr5C0XsmS2RbVXbT/shPwv5FMifKzI/eO2Wtb2zN/LT
kU+K/Gnt4Sq23aXQ2sg31j6AP9M1nPO39gv82dBK4PX8puBPgZYGr6/91EjZ
MrW9tAf32rO2R7SHXG/sUdtP2kOuPXav7SPtu2HwO9T2l/bUrvX6RHvpKfC+
8PvV89899Xy9fW0fbs/vGc7v6fB77uP3PFDPv7vU9o3z6/590fHP1POpbe3/
/+bbffpyjyc7WX/5LfmOXO8Mo/2jab+i/ftpf6MqfXMGtLzjv0rf2GcrgodU
6UvngIHgdav0lTbzUrV96be8XW0/au/6W+wD7dsNwKc30qfLgjesci/LluvE
3rNv96rtB+0J+b1re0v7S36f2n6w/7QdLqp/3+v8nqX8xvgtj/Cb5na+a8QH
MZnjjd86LfK9kK+O/BT4uyhbBf5Tyq4EfwI+Hvw3+ETwreClwR8VqTsNZXsW
ueZk+FGUrQj/SRF+asr2KFJ2NPxVlP0H/p0ibU1J2W5F2rzGsQTeETwP+CT4
2ylbDv7jIvxUlO1epOwWv33wruAlwMe004bXvqs94rdP2U7w81P2BXhB52Tw
qeDPwAs4x4JPAs8B32zHftWO1b5aD1to/doe0n5atzdl/7O31ulNmfbU31y7
AG3+i2sXoI3jwTeBF4X/gLJj23kmn+W9IrLJKdulSJ0b1DXgncELgU9o5zf6
2z6k7Lh26ih7v0hfTkzZDkX61PX8QTzLwfX6/FBkF1JnemSv+pvbeee+68/A
98BPR9ne8GtRdgT8JZT9G/4Nyo4EXwqeEfxmEX4CyrYrUnYU/GWUzQL/VpH1
wj3c+956/fAWsrnUscgOtE3fvTYkeD/wae08g/f+nLKX4Gd3za3ubmY9Ylv3
1esh14P3wz9Qr4e0V303G0DP1+vP2+HvqO1l1ztjevNMrl8Oo+2LfD+0/Rr3
OBx8MXgG8Ovgg8HnOybAL4OHg6/wmcBvgw8BX2CfgV8pIpuIsmFF6ugfse8P
qf0lrsdGwd9Zr//sqwmpv32RPtN/ciiyw2r/juvDu+BH1+s5149ee1e9XnQ9
4G8bVa/vLqat12hzb9uizTnBLceo77JIXxZ+Q8306Wj9K1x3JPbAJs3wD3P9
xs2UTdlKHWVt6t+rv4M6JyAbStl0yO/z+X03yA9D9ixl2zlW+yOzTH772sei
r+UU8HHwtyPfB/n+4NWaGevfc/0FzYz56eHvd/yDxyly76cp26aZZ5gU/g7k
a4L71T/6j6hzOLINm2l7NHVWbeYeyh4Eb9BMnTupv7/jAn49yqZopQ2vbflN
IruXsoHgg/tT937wus1ccwT4RfDOfrvgyeBHcf3a4ML5HPkYytawb5FP0spv
9rf2FXl26yjzN9zm2APvC14ZPHErZfKNIrI7KVupmTrTtvJOfBddv0fkT1K2
Ffg45FPB3418c3CpPUOfT83/mcBLdqP7xoPGNKMD/4Cf1+8dfo5mbMd51OlF
bMg/wfP5vYPnakZXjqsOaUZnXkybd/AM94AP0dZH1qfOEyOfDb4futn+8zng
B0DX2z/gmeF71Wn624roilKd34zOmAW+Ad3o+yiiO9rQbc3okHngK+cc5xbw
hTzDSP1E1oc/GP5xnn+Qc4N2cjt9Zl9tTdnUyMZQNhi+w/UHIXuUss3Aw/vT
l5bJ26fzgrvQnbZH/WlaadO2KvCk3PM9+Jvgd4afG1mnHX+cfjnv5TP5LN5z
fvA40GjfX5G56gfavLCZOWtG8FjOGeADiox1x7hj2zF/EfwrlO0B/3MR3jnM
ucuyVdTlrjfAC0KrqsvV4c4v0MrqPtenzlfQ5vAz2wdcu6rrA+dL8CvgjcHb
gecFvwBeX3+n8yf4ZfBGzhf85lfhN9E2hl8N+UzqPPDC0GWUfdFOHesOcy7k
+pfAGyLfHjyfYwy8AXgN5xbnuCJxiTXhZ9VGgF9Mm8XnVQfDL+IcBj+bc36R
uMWyrbxj3+1c0PKtjCHHzjzQQHW7c672gzZFK+/Udzk39AX6+bgBfOvQvTzX
Mq2MMcfWf6ClWtEh6o45oJWcW6BxtTe0aVrRqerSObWBWtFx6rb5oCWd/6Gm
uhpaoRUdq26dF/qc+x87IM9wD/c/mj57g77ZXF0D/zHyo5ANh+7SnwYt5Du3
f6g3OXgd8FLgE8CLtaKT1EWzQEOcj6nzDLK17YNWdJq6bDboa9qflblmNugJ
6k0Brav9h+xkrpkMvDZ4SW0bxzjPdIZzAfjf8JdAz7ZTdmjtW1+P+ssU8bFP
WuYd2PfD1X9l3rHv9tBm2p7DPipyj220J5xzkK0DPoI2n4YfCL8n/FHQa+BN
HR/6wqHXwZuB94H/lN9zNH11DHQ37XzSSd9ZNhr8WScy+3wMeCj3m5v/z9HG
urSxhd+jfljwauBttTXBz4PX057gHk/Br+X4gz8MehK8Jnh3+EF+v+okylan
bARl77RTx7qD/X6RPwFeo8i7m9NvrMg73Njx6pyGfEXwJr5r8EPglcCPiJ3j
4Ddtxl95HO/u+Np/eZ/fn3OwbTfj31R2Qu1PvQDZC9TZSVuyiH/1RGQn6QOu
/bXH9qZN/Z/Gp7RdDq/jD/prj4IfXvtv9fce05tr9O8aLziyN3X05xq/8Noj
av+s/lr5I+t4gs/iHOLc4TPp//VZT6z9vQfqb6b8D8cj/EfqD+ofCz6mGf+5
tuKDtX99BLJ3qHOIcx11Lm3HRtU21Q+jTJ2trrbOhe3YpNqi+n3019vWQ7W/
3LWROlzd7Rrpg1bmCOeGo5rxr1v3YegX/dPt1FH2J3WuaOeZfda/ivj/tXXv
r+Md6gZtFm0VdYT+9KN706f6z89E9hB1NkL+FfJvOhmrs0NPIl9ffadNg3xZ
5BuoX/wOwMuB/+L6+f0m1DeU/QNe0G9MfQ1+qpU52rl5SDNjdy51YJExvKHX
aiMhW95vzvlFmxK8chFd8R91YBGdsZnzQZm16CrgjdSX4AfAK6izW7HxtO1m
LRIP8Fs6uo4fnNvOM/ks3yF/phUbQdtgW8oesD1tLPD64NPb+eb91r+g7Ix2
6ij7Etznepu2zzTmUaYvZ6DOfkX69Bz4JyjbEv5byh5rZU52Lt6iGZk2jbaM
dZ5rxQbS9hkGPruda6z7TZF4qmsDbX7jpee18xt89u+Rn99OG177QxHbUptU
W1Qb07nlAdeLzcwx8tqk2qKWXVHmnt5LG8sYj7Geu6FP4a8s85v8Ldpce6h7
KXsbfrA6Cry46zbwIPAnZa41xmSsybX+79S5vJk1v76DP8BXNONDmIMx+HUR
e2WjbtbqvyIf0cyaXV/Ab+DLmvEJ9FfxpbpmM154Vf2OfbfafNeU6RP7QhvS
mIaxjbWhp9RXZXwE+gZs8/wyPgp9E97zwjI+CX0RPvMlZdacrjWv0n4q4/PQ
1+FvcC38J893ZTNr4vPKrMFde19K2Ygy35DfzjXga2udqa50jXVpmW/Ob+1q
8NX1O/bdahMbYzfWbozlBfl6DDt2r0V+VTs+CX0R/1D2OPK1qDsL9FgZ22kg
dGURG0pd39POter8+6nzOnPXLdB98D8i27gde1S79HvXOtrb6jq/MfiNtK/B
74I/gl8VuqTInPYgbYzVmzYfKDO2/m7ltznGfgJvon0P/34zY+efVvrGMeRc
81crfe2c8whtzEx7A9SJfnfIl4POLTLnXVzGR6FvwnfwsWsn6NIiNueH8KtA
FxeZk2fnG7u2SA7OEvDfIltfe7nINzwrZVcXsQEW01cOXVXERlgU/nPqrgVd
UcTG/Q5+A9cnRcbEbNS5pojNtbj2A7I1oMuK2KwfwK8MXVTEJvkMfk3o8iI2
8Uxcc0ERG2UR+E+QrQ6NKGLjzkjZ+UVshoXhzy3jM9JXdAll15ex8bXtXdPP
SZ1fi6yPNoP/uZkYk7GlDxhHvzbjA9f3/ZExkWZ8/Pr23zWG0kwMQN//e+Cf
mokxGVt6H3xWGR+avjPXIL81E+MztvexOTnN+Nz1tb9jjKSZnAhzIV4B/9JM
jMPYxofGVJrJ0TA342VjMM34WPWtvm2Mphmfrr7ct4xxNJNzYa7Fq+Czy/jM
9JVdhOy2Mj5JfZGuQbUxtTWd3xaq16JXOyaaWZO+CL8IdHKROe8N+KWhs4qs
cV6DX1L7tMicdU4ZH5u+tYvBL8EvCp1SZI7TxtDWcP03GP4VZItDpxWxyW6u
bQxtC9ekN9Q+Gn0zrllH1jaAc79r1FvL2ADO/a4Bf4bfFLrF9+kc1UwOi7kr
r9EfvzcTgzD28Al4rFZiCsYSvgYPaCVmYKzgG3BPKzECYwNfgf9uJqZhLOML
8D/NxCCMPXwJ7mvFB6bv63twfys+L31dP4B7tZXAL4K/Bb8Mvxh0apE5vIH8
IPBL4O/6Y9suD51XxMb9tJkcHnN3XkL+Fvyy0DlFbOKvmsnhMXfndeRFKz5M
fZc/gs8o45PTF3e+NlQzMRhjL58h/6uZmIexjs/BfzQTkzEW86kxxWZiPsZ6
3jQm2UxM21j2G+A34ZeBzi5i47da8RHqG/wZ+fPwHcp+gz8H+ZllfNr6svVh
tVvxoeo7/YU6zVZ8jvoafwKfVsanqi/1XO2TMj5UfafnqZNa8QHp+5nZNpBt
Bo10PDXjw9GXM4I6p8CvU2aMO7aNga1XZkw7lo3xDSwz5hxrxkzWLjOGHbvG
OCainVtpfwX4Xu6xF/I7KFvefuyPzDJ56xwL/24ra7OLKFurzBh27BpDc+zp
Y9e37hh0bf4oZQc3s0Z/BP5o50R9c5StWead+C7MKVijzDvxXZjDtXqZb8Jv
wRyujcuMAb99cw42KfOOfbfG5DYqo7PUVcYAVyszhhw75nBtWEZHqhuNwT7W
zm/ytxwG3rTMN+W3ZAxv8zJjxrFiDG3dMjpU3WnMdIMyOk9dZ4x//TI6WV1s
zH6zMt+k36IxwpHcb0/K9gQv24xvw2fw3vo47Js3HdPN9JG+E/vMvtKH8hT8
iepAZCdSdrz2XStr5xGUnQT+vJW1+dX9iS381IouM8agr+dBynZvxufzdDvX
WPcUyp5op03bOhp8AvzHraztL+/PWvy/z9DMmlzfyZPg45rxofhsn7bia/AZ
ldmG11rHtaz39F6uaVcto/PV9ebUubZ4Tv3czBrDWMiPreh+YyJHUf9V8J7g
s7jmoXbK5Pdqxtdlmbw+ryORvUzZbuAz+vPbLZO3D/RNLOTvKeKj0Lf0uHWa
8THpK3sYvG8zPjNzAvVbXGtfd5MDZS7UOeDju1nrPEP905tZ8xib+a4VXWWM
Rt+UfWzf6qNapcwc6txpDuPe+lbK2GpbF4m1fE3Z2c3EXIaW0YnqQmMQ1yHf
ST8FeE7nijI6W11tDGPrMjpZXTy1c2sZHa9unwa8VRmdri43xrxdGZ2nrjNG
smWZOcW5xJj1BPC3cM+l4MfiebYto+PUbcaYbvbbomxX8OLgsZFdT9nc6ur+
8Dsj364/Zda9uRVflddsX0aHqjuNyahrr+GamZvRuR83kyNqbugL4FPL5JCa
O2offdJMTqa5mC/2J7b4Syu2uzHGj/Qv9MdnNoprh0El8l/7E/PyXjtQtlV/
7imvrlXnWnasOaH8n81vtRuS/52yXbt5F1e24kv3nZiDoR99SH1tt5V35rv6
Q3sNfnPoVp+Nsj24fiR1lrRv+qMrbgMv04zOWKnMHOrcac7pCmX6xL4wh3bF
Mn3gbzeH1tjoz63YksZI91e3l7mXeV37gZcrM7cMBe8LXraM7bENeB/vXca2
HwJeuYxNpy1nDq6xr29bmbuMge0Fv1SZtcRW4D39LWXWGlsWiX1908rcZwxs
wlZ0orpwAHiLMjaJtog5F4PL2DjaNuY47Aa+sRXfxM7OcfA3cP184L/AN7VT
R9kizXyr9ql96Tc7fivfqN9mD/cbVMZG0jYyB2MX8LWt+EKGqcPhb6T+guC/
+8PvSp0d+1Pmvb3Guj7DeK08g/f+pz91r28lFuw1fvtXtxJLcQzMV2VvwKrQ
lJ3E6vWh6DsxZq/tqg9H34027E9VcvHMifqQ+q+AF4B/CtqpG/vgN8dbK7Ef
c6bMnTJH6oNO8u/NldK+fB3Za9BC4GegXZDNDK3E9Vu34k91fbICeMtW/Jfm
XJl7ZQ7VC52sb1ZEvlUr/s4XqqzN9M0uD36+ytpI3/Jy3djrC1N/qjL+YHOw
zMUyh+p584s6ye01Z8ncJdc4rnWMCZ3Xze83v9L5YcNufAz6GoyRnAP/VpW9
C+awrNzJem9tdWQr8Yh3q+juEXX+nza8trwxnQvgH+gkV9Y9CO5FMKfL3K5J
oOeQ9VI2pj/5wA34rbuJpRlTuwj+7Sp7JT7m/odS/1XwguCn+xMPetn8LedF
aMducuTMlTOn7UXq72QOSyM52ht2kjNn7pw5Xm93khNnbpw5de+A94LeaCRn
actOcrLNzXYPxMLw55tTYi4a9X82l8U+Aa9pjoi5XOAHqPuZOd5VcsjMJZsZ
ektdCX2P7AloR/izoWXrfBZzaU8FTw2/nDmuVXLuzL0zh+/dTvZwuJfDHLz3
wS+aTwf/ODSsm5w7c+/MCXytk5xAcwPNCXwV/JL5cPBPQDt0k5Nnbp45e693
khNnbpw5e2/YF1VizbfV/mpzCs0tNGfxlU5yFM1VNEfxpU5yAs0NNGfwvU5y
Gs1tNKfx5U6+55n688637yaHzlw6c/Le7OT7nhH+bmg75CeYDwR/H/11mPmc
3cT+jAGeD79xN7kl5pic28341feibly5m+9FX426c5VuxqhjVd27Wv396LvR
V7dSN/2jr0Jf3Yrd9K++jy2gFbrRAeqCqpX5yfjEHOrndvwNjn99N9oaq3YT
T5lT+6Mdf4Vj2rHtNV6rTlA3WMe6rrlde+tjvrSbMeZYW6hMfM8YzM7q6zKx
mbkdrwPiI1wLfp5ucnP1aazTjb9lXXVqK/Ea5eaJ9DrfdbJ214es79g1vPsl
1jCXtt4/4X4K+bXq/RXmHBzOvZ9vJRfBZ/BZvmzH/+N+ioHmwtX7K9yf4bUD
6/0V7r9Qtk4j+1XUgerC2cvEa55D3upPDGI9YzlVxpo6YUg3NuLJ3q8V23Ec
qOpPfGKrWn9drv3aju/U6/X7mcPreK0o+6cv8Vxz69VXt+g3bMcX4f3/G/em
zbG78Xet006f2/dbduNn8Jv0fvrL1nMOayV+2IWK/sQ7BtX69kbav6QdX5M+
r6/beSe+G31s37TThm3pU/uqnXt672268btcQ5tD4ceFJuyPfT20/l5eaGcO
cC7wG/Nbcw5xLvGb9Nt0znHuebOKbe0euqnp//G78bM5pzjefIe+S3W8un7C
bvx+jgH1ywTd+Amdkxy/E3djiziG1L8TdePncwypXybpxnZxTO5Uf6/G0b7h
HdxJvyzjGAG/T/+d6bvlmab0XfF8x5h75fwM/xy0i7lA4BcaKdtV3z/4xUbK
dgMfWKXus9DO5ntW4Z0DnAuOAr8L/w60n7EQ8HuNlO1v7A38ZiNzgHPBoeCX
GrnH7sbWwG81UmdvY29V2nob2lf9XoW3zj6dxENvYHxeX8eT1enqdnX+Wcgu
dLzBrw6dU+OZ4GeGzuskf9u9Ne6xUf+bjy1/el/065ed+H71KetbNr48sDc+
bn3dxq/07Q+s481fdeL71mes79g5y7lrjfp+5rtv1Jc5zrnubPBUfXknvptz
6ueb0WcCn1vlWS07vZN48I0D8puN/xpP97dfV68P9nD+amSO3ArZaVXe9U/Q
cPUL+CP4D6GDO8kX0Pd+cx2vd051bv0UOhzZiVX4T+r54fgqtoJtHAI+GfxD
I3Ouc++8VWzDVaApwKeD/4L/EzoWPE8VmTmdk4NPrfJsP0JHgU+pwtvmkeAz
wH830sZx4LPAPfTFP+ATtH2q8NY5HrwP+FH4R6BtwXsaz2ykT4aA9wM/Dv8Y
tD143yq812wH3r+K7WCdYZ3k4/stnNEXe2DvKm0/DA3VnqnCe49tzH2o0rcf
QAd1Ep+/aUDemfF78yPs65vqeP3R1H+/kTFygLHnKtdadmAnfWbfOUb27GR/
gftxtAe1p92v4N4zv2Htq8Wr7MVTR6orF+pk7+uRtX1lTNfY7lfQr/Azeg2y
raGZOolvuRdOHa4uN55mbp8xR2OP03RjC2njOH9P2Y0toc2h/TwObYxDWwtA
49b2p7aZuQhTwU/bjW2kTak94B5k9yJrYzn/T9HN3mVtFO1vY5zGOsfU8UDn
VOfWs7WJquwRdq/w/PX9bqiiyx1f13UyhhxLfjMndbJn2L3D7nkeq5M2bKu3
kf02m1WZm+xD97MsxTMchP58G/15Rjd7UN2L6hi+EL4H+pFnm7xu79xOdI35
4+5ldU+pe0u3qvvX9+PeCW0A90te0cneLXWOe/0u7mS/gnsO3Xs4XTe2t2sm
7S33o7j/yT1S2p/a9Nr27vnT/nV/hbzfhPa3+1XcK+U12qfu/zi4L7/B9Yv7
S+TdY+v6yP0x7qd1v6/25KvMU0voHyqSs+H+E+/tni7tWffPuPfWa7RP3W/j
td5T+9X9L7ZtHdcL7lfxWvc4av+6X+SY+vdqn+qrP7cV348++xm6Weu5B1t7
0jnNuU2fiL4Rc2jNpT2ojk9O383a0jWM9ui/ulnLuGbUXnT/jfvVHEOuL1cH
n8m9vtJn1U08ciRj8406fmhs4LxWfE/GCMypMrdqZB2vfEj/J3xvHR80h8Fc
hnXqeO+j+rN6k5NkPFSfyo76F1vxteiDGw5+vVX75rqxJRcpkwukPnyKb+Xp
Wj+qL5+u59vhtX7Wdr+/1tfO366nrqvna/X1PfD31us79f+YRsr+p7+fbOQe
6lvXs74Lv0H3zri/xL3g7rcdXM8nz9Tz/9H1/H8V/NW1PaA9cU0jz7BrbS8o
u6a2L9zf4n5r23S/invg3Qv/Za2PtAfcj+we5z3q+f52+Dvq+V974k74u2p9
qb0xqpEy7Qtjo+b4mdtnjFT7wWtH1faIsWhzBM0NNCatvh2N7O5aX6uPbXt0
rX+1f+zL62v7RP1u3TH1/On6wdxBY7Tac9ovtzXyzPvU9s6tjZRpz7hedy5x
D4h7QdyvpH6wT/633+eYRsrcv+T6371/+mc36Ga97rvU37t+N/bBAOS9zlH1
fPsy8lfq+VIfgL6Ag9RHtX6U18bV1tXeGKsvbWhfXFBFX85U20vqY30h5tt5
noQ2vLb8e63kMqnT1e3arNqu+jN2byR+sm49P+hb0QbWFnY/t+cbeCbCBrS/
e5W9fefX9or2i/wF9XztfvfhfmuN7Kd3v/pRjZS5/9393c5tlrl/3f331rUP
N6v1q3t33NPm3jbne/e+XFrP/9oD8iPq+d75X979YDvU87v7HS+q53vnFOeW
g+v+1L7wWS+s53/tA+teXNsf2iPyl9T2hWscc/2M8bv+OK+K7TdVba+6xjFX
0hyB2Wt9YC6gMX3XM+0yOZ3mcpoDP3aZHE1zM81pb5XJ4TR30xzyscALg2cs
4qNtlskBNffTHPEB4EX0Fxfx2Y5bJsfW3FpzxrtlcjzN7TSn3VijObfm2hpz
9GwCc0jNHTVvvlMmJ9VcVHOYyzI5reaymqNclclpNZfVHHBjqeYomptoTLW3
TEzRWKIxvb4yOVbmVpkjb+zaHCxzr4xhG8s1p8tcLmO6zlXmHJpr6JxlrNyc
Q3MNjZlrn6ur1cn/1c1lckzNLTVn3di5OWfmmhlDd++4OcHmAhs3Ga9MjrK5
ycZoJiyT02surzGwokyOrLmx5uSPXyaH2dxlY0D9ZXJWzVU1595cEnMsza00
p0Tf/jRlYrX6+M110Setv8U1nrke5jzpP3ENaG6JOaaOMdeM5p6Y42lupzko
xrLN0TQ305i2uTLmiDpmzZkxt8acKv0zrjHNDTHH1jHvmlV/irmh5oS43jVX
xBxoc5/NGdG/Yi6rZ87oizXXxJxoc6HNOdH/YC6pOSOuj80lMSfbXGxzSsz1
0Qev/0g/krl9+rD1XZvj594kfdT6pt2j5HrMudk517nXXB5jUPqD9AuZi2AM
QP+TfihjFcYMjBUYszA2bczAWIExan1MxkLcc6Dvyb0ExjyMdbinwL0GxoSM
BbnnwL0F+vD13bvHwNxDffT65v+bg9hKjMDYgGPOsWXM2li1Y8xcZ2NSxqLM
eTb3Z7dW/F/6AJzznfv1Ueir0N72Xesj0Fegv861mD4ZfTOel7GtuqWR8y48
f2aTRmxiz3vx/JmNGynzPBrPm/F8HdcErg08b2ajRup4Po3nxXitdTyPxvM0
bHv7RvYHul/c8zw84+N/+8E928My94+7/3KYurOR/ZaeN7O+ur6R82o8z2bD
Ru7p+TaeZ6PMMs+38TybIerSRs6f8byhb92b1Zvzjzwv6JvelHn+kPvLv+5N
mecHeV6Sdb/vzXk+rjf8tvWZ6DvxvKMfemOza7t7/o91LfP8I88XGdpIn3r+
iPvRPe/E3+h+d8/H8dms4/kj7h/2PB7P6PG8FM+TcS3lb/A8HvfP21eeIeN+
e/dfer6MZ+64n9X9rfKeyeP5JZ6ftDD8Io2c/+R5SK6lFmzk/CTPM1qokTqe
r+T5S4vaV42cB+X5UPKu6VzbeZ6UbVnH85n83vWtXttOLND8/EXL+Mz0nXle
k/fyHtPV85G+N+tY12u8dsfalj1Gn1oZH5u+Ns83cm3pO3G/v+fn6Itct5Hz
dDxvaL1GvgnPH9q8Xq96hoz7+93vL2+fu//f8wrsO/vM/aru5/Xb2rGR/afu
R5XfqZH9p+5Hld+5kf2v7oeV36WR/cLuh90VfrdG9gt73o/P5jN5/pH7iZVp
wxiPcb+x13qN+2fdL+tY8Bt3f7E2qraqNpfr88m6iT2qi4xPGX9YpvbvONd7
xoFnHWxcrx89L6LBtX2NnB/h+Q+uRS3z/AhtOm07YyDGQjzvoY2sbOR8B9eL
7q32TAXPVvA8Ctvqb+R8Cs9/aDVyjedDeJ5FAd9s5Pwqz7OwrmWeb+H6SV2s
T1HfouddWdc2PD/C8yW8d6eR8xf0z2hrvtqI/8X4jGsRbTptO9cMrh20gY33
6O/6Bf5X6JROzhty7GgTer6P5zvYdtXI+QWe7+PYcIy5P9/zBMZuxMegr8H1
umdPtGp/sv4gn+W1RvxDnodgW91GzifwvAJ52/A8Am1QbVHXMMav3G88vWOv
Ef+U559N10iZ+4+N17i3wP1+A7s5z2xKZFM1cl6Y54fJT93IeWXakNqSrrGM
R7lmcu1kH+h/PRF6vREbXP+E/uOZGsnfWLsbf8JqtT9Q29w+s++MYRnLcn3s
XOc357enf81nn6ER/5v+A20Hfcj6kvWf2Tfe03t7ftwUjfwGz2MzvvtvdUcj
5795/pq/ZZpGzo9zPe1ca76He8c8L866PrP+bs+bs+60jZyv5nlt+ka8h+fT
6R/02byH8WPPY7Oufez5cv8Hetdw9w==
             "]], 
            PolygonBox[CompressedData["
1:eJwl0D0oxHEcx/FfSjjFoC6bjBYGD6VQHhaLc+c55CJ0yxlsyEMhznkssSkm
g8FkNyCLzEq53Wgw8fp3w7u+78/38//e9aufXUplS0IIcZRivSqEr4oQmmMh
7JeFMMqbcM0/5KvlIQzzI+QqQ/iUbchaeApZ86Putl2eD2FF9iTbkx3yXtSa
k77t8ht9fBBp87Ks0y7HT3Fm/pZduNHGJ3Bpfo8Vd1FnHOeyN9mp7ITP4N58
I/t1N80ncSe7kv3Ipvgijs3tshps8THsuvfK8/rHfB4P5lvZn/4CH8Gm3kus
+BbRm0Td6JuC/7xj18ozeDMX9PrRwLsR10vodbjXw+dwYG7VqcYmH0Cd3ppe
xi7BG6M3sH+WTbub5P+0tzt/
             "]]}]}, {}, {}, {}, {}}, {{}, {
          Directive[{
            Opacity[0.3], 
            GrayLevel[0]}], 
          
          LineBox[{3730, 3648, 3699, 3698, 3633, 3723, 3707, 3731}, 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0DdSAgAQhtFF7Qx38AIU3kQaZyw5gF7AI1hacRNRVBCzYI4YMGDEnDDi
K75582+53enB1EAiIvo00hUxpGGlVOmMqLVHtPGcrTxjC0+Z4AmDVTY7Io75
xyP+8pA/POA3K/ziPj+5xwZ3+cEdvnObb9ziKze5oXW92Gt85iqfuMJHllnS
sh7sJd5zkQua1509x1nNqG4XOa2C8prSrfskbzjBa+Z4xXFecowXHGWNWfb4
Xa+S6ldG/7woSGs=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0Dk2gwEUhuGbQgzJH2SOEEdLgohhH1QOaSyAFViCUmVrqQ0xxExM8RTv
ec7X3OIuHZ3sHqciYl/nuYhTnWlPvSRiMRuxzQa3uMBNzrPDOjc4xzZrXGeV
a6xwlWW2WGKTRa6wwGXmmVKobo8ybvKPNf6yyh9W+M0yv1jikJ/6UNF+Z4Fv
zPOVs3zhDJ85zSfm+MiEA17rUmP2FbN8YIb3nOIdJ3nLCfY5zhummfhfVzs6
1IEu9A8Gkyjy
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0DlSQgEQRdEWESdAyR34TEpkoFWKgArOJCKCiFPgAnAnhkRuzb14CG6d
6uQFnXx9D6YLETHRLB/RUVdH+tFIf7mIXjbig/d85x3feMtX3nDCa77wimNe
8pldjtjhkBd84jkHPOMj2+yzxQc2ua89td01tlhlkxWesswGSzxhwmMWWdCm
6u6N+R7z803mWGOWVa6zwjWWucoSV5hwmUVmuMsl7jDNbaa4xUUe+t1QB/rU
r/4BqQQZuA==
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0Mk2AgAYhuHfXt2DJTJFigVRhGRh4xjSYJsyLMxkzHgsrdyaa/Es3vOc
b/sNNDub7b6I2NZPMqKgojL61pb+EhEP/RFfvOcnu/zgHd95yzfe8JXX7PGK
L7zkMy/4xHM+8owHaurUbvCEdR6zxiPus8Mq29zjIXfZ4g5nNaMNO8cKs1zn
NMvMcI1TXOUkV5hmiRNc5jiXOMYiR1ngCBeZ4gKHmecQ5znIOSb91lBOddX0
q38IyCaM
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwNza1OwlEcx+HjUFGnBjQKmwm8BchS3UhkG7JBASoB6UYuwCuRlz/vMM0K
0gH1CnzCZ893vxPO7WO1UDkIITyocxlCUy8qan0RwvJcXHDBOeecccYpp5xw
wjHHHHHEIYeMGHHAAfvss8ce39hll2f+/rM39qn9a3/bJ/aPvbbj9t5e2cf2
zv6yj+yt/Wkf2jGldK2yPrzlmdSVnvTuds8bJVTSnRpqK6eM6npWVmnV1NKr
/gHBCzNH
           "], VertexColors -> None], 
          
          LineBox[{3737, 3662, 3663, 3638, 3729, 3673, 3573, 3300, 3596, 3572,
            3299, 3595, 3571, 3611, 3546, 3661, 3621, 3610, 3697, 3545, 3660, 
           3620, 3609, 3696, 3544, 3659, 3619, 3608, 3695, 3543, 3658, 3618, 
           3607, 3694, 3542, 3657, 3617, 3606, 3693, 3541, 3656, 3616, 3605, 
           3692, 3540, 3655, 3615, 3664, 3722, 3647, 3629, 3706, 3721, 3646, 
           3628, 3705, 3720, 3645, 3627, 3704, 3719, 3644, 3626, 3703, 3718, 
           3749}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0blSU2Ech+Ev1i7jJXgH3IfgEiRCIxjBRJkxLmhnJLYKWCTRSZyojSaA
WpuVcAdxBaQBd6VnU+FJ8c7z+8+c4sw5x+Kp6JVICCGr0uEQ4upRWjF1DoVw
hOd4/GAIw+zlCPt4nicY50le4CmO8jTHGOVF9jPBM0xygJcY42We5TgHOaSU
bruvMs1rvMPrnOQNZjjBu7zJW7qnnPs+85ziQ07zEWf4QFkV3DkWme8+p6f2
Yz5hgSUW+YrzfMk5znOWc6xwlmVW+JxlvuAi22xzgQtsscUmm2ywwTrrrLHG
N6yyygP+w4a9akfsP/ZnO9i/7RV7j7+0bP/nTy3Z//hDn+y//K6P9i6/6YO9
w696b2/zi97ZW1zXW3uTa+p0v0f3W+i1+6h3SCqhjJ5pH3rnYps=
           "], 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0LlOglEQgNGxF8Mr+Ep2tAruYgOKSmHibqECFpKwL1rKDj6Nb2Ht+Ysv
507mVrO5fbqVX4uIjNobEdfaUVZpvaQibtYjXnnLN+ZYYJZF7vKMezznPks8
4AUPeckjXvGYZZ4wrztVzPes8oE1PvKdT3xO/qhuriZ7Nb0/2GCdXxzykwMO
2eeAPfbZYY9d/nDFFZdccsEF55xzxhmnnHLCCcccc8QRv9lWS11zk3/8Te7j
jjl19A+mXTl5
           "], VertexColors -> None], 
          
          LineBox[{3746, 3714, 3622, 3641, 3747}, VertexColors -> 
           None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
qInXpR1eWMioflpGhmLxwwGqvEgcyM9Rs9jQAdnam3acFCCDLumlof2WEUiP
1E+8Q+mAJDnlfYLryPChWHxllMUIxDf5O1zJ+QLz/botjzaTIZ3n3o6AMyNw
cHvTliadTsisiba9up0Mo+9TFIjY+iOmmGKKKab/Tbd9mc8o+EkEajOc5HSm
gsIdsK+Lp4CpHunhiT1DIMimlTrqSIGYVVs3ftImAffRjW3ROl+gT4Jb0WwD
GRymz73mdRoBbSHmlJUqL+CsIO5YfCkRRLbaTRSz0ny6UKyK+TE633Hd2SgE
n3+g86gI95Cm5S/onNsN1pzcc4zOOVwr85Qf0nTysVPOy1KnFuVRPDs1Kvlz
IGRP7l0HxFeGM391IQRivhLTf69qa/IoBrCSYOCtSljmMSqUtzTF3LhHgYM2
+H0RB4fgpPS2jj5nCpSwqJk67iRBg5z/SMzRL7DEW/Rp0SYy5FnpRme6IXlj
9QSrQN0L4LW6rnq8nAhyTT9lzblo/e5B4ZHss1/o+IWKGtPABTrnnlza6sJe
ovuX5ijx0gKdfscg9bgpaj36PnuG2S9JfV00v/czz2tpZDbU4tofhJwngnRR
ytl+P5rPhUcaypvo+JrRA2e4uumcU9ihUu2e9x7N32isK45NpfN9de0wJr9A
NHcGpcBAGzT34VpYE03Hl4VIpV/npvPddRP+rkOlr+mcs2DmXuNIQfPeSb3R
FavQz8vOafykcz+at4oU6W96hOZbey3Tn0zQ+T3BhzOs63XRfm2Z8x3Xh9fR
XDR45w92OucvqOuUmMblFp2vv/2j3cQlDZijWy1mXYhQZDwhbrB7CHAZxkpp
eUXwybdk9dcUIuCcrHeqtQ3BWA2n/w3BKoizShwk4ojAGlDjtt4eD3bLdh6u
9KoF3LsDDYr8JOD47KNZ24GHsTuOdqdV6+DmjYY2Nl0SPGXYNlm9A/Fxozsn
1wc0IP4tPqTLiwRTrCVqWc+GQSLsUClvXxNcNbXbkp1IAuBRPRcnTADttccv
zuu1QoiCzMDFDyQIF8p/cTGEADLd4TtbbT7DnACTcvVXEpjgDov7DBAgR4eR
Q5rQDiW5QuauPGTIv4/3TJZBxrWuokYPny9Q5BBm80OeDIdu4j8nHR+BhtOe
t/PmOqFg5aRjpBEZFsLw2kl5IyDDs852JrQbntXaHxd3I0PCefyT+9MjwLps
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
S61Zi8snaesph1JSpCTF0espE9fbrz26g/Yv9juWfOEdR6+nmKXmGoieH4B1
tk7iliTaeopju0tgaEYfdMle2/G1gLY+cjN2Uo44goM5M63CcJVF+/GePJy8
eaoPmtlYCGk3Fu3/Yf7MXGo/AAKJzRNundh6CqaYYvr7FVd4vLPwOBFYT5ku
O2VKBRfnv/2jYBzjvwRPXmt4Y61hE6z/m9wgwZL/u90SMP5v4r9ae/ir81+t
fv8ozvBf/yZWHhlfeYTOPgeM/1L8V2s//9v43+vFq/NvgQLtHzH+x/Jfpd/9
uzjZrFgshNgHA+f4s/X7+v/X8l+tHWLt9o/lv1p7+6u3z7/Kc/1Z5fnV2s9f
pb7+6u35r8J/tfePjYN/Lf6r1fuvxn+V+vrX/Oafv96AKabYOhfGf1X+q80T
/tX5r1a/fxX+q9Ujtu7z1+K/Wjv5T+V/f/+/mk/5q/NfpR/9q/xXmxf6T51f
+tXqHWtv/9/8z5rvxdYX/lr1iK0LYPWFxf9fZ/7/P813/D+l/z+fJ/xX/e9v
9Uds/eVf479Kf/mj/eP/trj9n9Yefi//o+ZR/9nf/aPy5F+lv/xV5jN/tef6
s+Zv/6xx/F+br/s/X0/8o97zH93f/9Pq6z+13f5q/Lfq5bf0j1q3+vv7/5/y
Hb+3/H/UOt0f3T7/rHmMf3c+9lfvF3+V9/B7n+ufjUe/tz38u/PPP+s9/1nx
9o96D7+3nH+V8v/R5fmfXkf4n2rn/xfsehnX
        "]], {
      DisplayFunction -> Identity, AspectRatio -> 3.333333333333333, 
       AxesLabel -> {None, None, None}, AxesOrigin -> {Automatic, Automatic}, 
       DisplayFunction :> Identity, Frame -> True, FrameLabel -> {None, None},
        FrameTicks -> {{{{0., 
            FormBox["0.`", TraditionalForm]}, {0.2, 
            FormBox["0.2`", TraditionalForm]}, {0.4, 
            FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
            FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
            FormBox["0.8`", TraditionalForm]}, {1., 
            FormBox["1.`", TraditionalForm]}}, None}, {{{-1, 
            FormBox["1", TraditionalForm]}, {-0.9, 
            FormBox["0.9`", TraditionalForm]}, {-0.8, 
            FormBox["0.8`", TraditionalForm]}, {-0.7, 
            FormBox["0.7`", TraditionalForm]}, {-0.6, 
            FormBox["0.6`", TraditionalForm]}, {-0.5, 
            FormBox["0.5`", TraditionalForm]}, {-0.4, 
            FormBox["0.4`", TraditionalForm]}, {-0.3, 
            FormBox["0.3`", TraditionalForm]}, {-0.2, 
            FormBox["0.2`", TraditionalForm]}, {-0.1, 
            FormBox["0.1`", TraditionalForm]}, {0, 
            FormBox["0", TraditionalForm]}}, None}}, FrameTicksStyle -> 12, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> {160, 350}, 
       Method -> {
        "OpacityFunction" -> None, "OpacityFunctionScaling" -> True, 
         "GridLinesInFront" -> True}, PlotRange -> {{-1, -0.8}, {0, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJztl4dTFFccx7GODccYdOxjQaOjGcZYSBD9xmFijL3FWGMDNVGJRqKMEkuw
xJKoAcSCQbGgqGhQjBpFROwdMai0K8Bxd7t3GjVoLMm+3753O3PvL8gMO3Oz
7Gd33+/9vr+2tJn6zYiwaj4+PlW031Xtx/7Wj8eoPFeeK8+V5//recKGrOcd
J7ixPC5k3WybG++n7XAnX3LjZKuVzuEnXajaeXXjh7fcGBfaq3joT274pX5q
XuTnQnTmtV2fnHCD3a0Y6cbc3nXyds9VUX10fbYEjl9ZkJHYzI0bdChgq7Va
6Yb2sraCCx3JsIKaZNgNeivZhVX0nNOzbrBmNT7cBQu950CtQy20rbjx1SY1
Cj1c6MPM9nZgTd/JpXfaurGZufFKxbat7LCDbtdx48JzZlHF32S4HOypA09c
eJx8aWDgGhUjyOFy1COHXWhJDqsgd1Nt0DbRMDrThQH0gMrXtXn2vVDzNqBQ
wXQ6ykCybnBhDwmjgC6zStFgzEeaNC7cbZv/csnXCkjmVqUgd7504W1upL1D
VwXk7qISNCShXaAwVDjxgJnNsyKmCVPahbFsuQwnundjh9UTH6HjRjJsQRzX
5RgL70AnFLptBslsVWFiMjd0or8eIJC711T4kh4O7ocJZDZNRRAF2MHzyASS
e6uKGeS/g+dPETRR/GsuVxFLLzp4nhRie3bro9/OVHGepdFTO8+HArTguruY
HKftMNF2HoG2HaiiOa1nxxay95Drp/J92zGMDD9AIhlW8R0JZUc9ilcemNVN
qoLdmtU3ueXIprjcRxJdK7itqbF3ezmiSMhctGNhOqPg9YEnOYOnlnOd73ni
2on2Xc71vIv2lNAK9DKw8efuYB85rPC6sXF9buG9riyjFdC2omxchxvYz9Ky
rwLmbVyIjft7ldtTPPlXi86XkcK210BBIBVCGSJp/9mevKHyjS9DOe3zPKiM
ip0878qQSfvJ4PXvxDkSsAw7ye4pXgcib0qxjNY/DgpHnBNNKS9K+Tqp3B8n
+jFZI8Xze0Duhjoxn92G4LFI43m5k+JWyvPKx4fk7ubETeojJR5ezPPVm+t1
7ZC4rovMtWBrgZG5Xr8yJxnDZc6s5gyWeQzPe2/OsvuzejLXy9Yucb0eZU5l
fUDmel+TeQLVncxF/XjzZ29YQ5K5HieZDyKhyyX+gpVVtsz1+pD5MGq4Mhd1
6M31epH5KAqwzPVD5npd2CRObTtD5vq8k7moZ2+uz1uZ63NN5voclTmbdvkv
yySuzy+Z6/1G5qIveHN9Tsn8bATLaJnr81jmjahxyFzv+6USn0OFJHPRX7z5
RWroMp9Hc0bm+lyX+VUmc4DM9fkh8zYU4BKJi2tvnh74Iis0RZvnfrhUkG7w
HUntTr1eXYIvxv92TvnV4Ct8hx6JDStBAr8v+OzIRXu7hJTAYo9LqzfPO89L
+DwxePCQu5smvLVCvCe4v7bqs3wrmNXgLgav699xyfpTVlTUnLRlUCODP/15
ZIR/vBViPcFpPEZY+fejwS+EpkweNcLKnF0RdcfgB2/fH60EWCHsCB4TVGXw
Cl8rhs/atjAhyeCLtV23cFoQr3l7aJ3Bp1GCWlDA7Qs+cHF0wKB9FrTp+2Ta
jYkG/6AstX1JtAXTf5w2saCfwZsNf9Q8aooFYl+CVz1TQwuVBY8b9x/2uonB
HR2YwBb0ZO27qsFzNFVC/jFD7FdwkjnPjEwmc67Bd8045pifbkaN7u/0DD5r
8DU5Raa6MWYM4H4Irn83mfl3pcHH7O9xs9cQM+7Xntl2dqTBP353yoV7nc0Q
/gnOVJ9V2wwW3fUDDN7A/vuRajYT9hRn1E/oZnC9b5sg/BbcxB5LMiEgfHeV
MzUMfrlT0C/Xl5oQkd7o1XWX2cO1ZNaUN0HoIXj8vxuXvAoyQRNPdWYafKkW
1ZgmJujzzeA3U1igiiF0EjxhWYesVcnFuNWUOWzw8NHfp56YWgw/JkeYwft0
yd1W1rIYY7l+gten/lmERPreNHhh3vL5/WKLYO3ZLHN8a4MfOvxg0oKhRRC6
Ch7FwlenCHMuvk1b/JfJmI9jV33458VCHGPpnG9w/bu2EEJvwR3VWYIUovf2
zxMPHjb46Udr34RVFOAHy+Utf2w2+NqjZq0zFOAKj4Pg45jZOQXwZWZnGrwT
/+7W//8x4T/ufq1G
                "], {{-80., 
                  Rational[-15, 2]}, {80., 
                  Rational[15, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[15, 2]}, {80., 
                    Rational[15, 2]}, {80., 
                    Rational[-15, 2]}}, {{80., -7.5}, {-80., -7.5}, {-80., 
                  7.5}, {80., 7.5}, {80., -7.5}}]]}, {
                CapForm[None], {}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{-80., 7.5}, {80., 7.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{-64.24242424242425, 7.5}, 
                    
                    Offset[{0, 4.}, {-64.24242424242425, 
                    7.5}]}, {{-33.93939393939394, 7.5}, 
                    
                    Offset[{0, 4.}, {-33.93939393939394, 
                    7.5}]}, {{-3.6363636363636362`, 7.5}, 
                    Offset[{0, 4.}, {-3.6363636363636362`, 7.5}]}, {{
                    26.666666666666668`, 7.5}, 
                    Offset[{0, 4.}, {26.666666666666668`, 7.5}]}, {{
                    56.96969696969697, 7.5}, 
                    Offset[{0, 4.}, {56.96969696969697, 7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-76.36363636363636, 7.5}, 
                    
                    Offset[{0., 2.5}, {-76.36363636363636, 
                    7.5}]}, {{-70.3030303030303, 7.5}, 
                    
                    Offset[{0., 2.5}, {-70.3030303030303, 
                    7.5}]}, {{-58.18181818181818, 7.5}, 
                    
                    Offset[{0., 2.5}, {-58.18181818181818, 
                    7.5}]}, {{-52.121212121212125`, 7.5}, 
                    
                    Offset[{0., 2.5}, {-52.121212121212125`, 
                    7.5}]}, {{-46.06060606060606, 7.5}, 
                    Offset[{0., 2.5}, {-46.06060606060606, 7.5}]}, {{-40., 
                    7.5}, 
                    Offset[{0., 2.5}, {-40., 7.5}]}, {{-27.87878787878788, 
                    7.5}, 
                    
                    Offset[{0., 2.5}, {-27.87878787878788, 
                    7.5}]}, {{-21.818181818181817`, 7.5}, 
                    
                    Offset[{0., 2.5}, {-21.818181818181817`, 
                    7.5}]}, {{-15.757575757575758`, 7.5}, 
                    
                    Offset[{0., 2.5}, {-15.757575757575758`, 
                    7.5}]}, {{-9.696969696969697, 7.5}, 
                    Offset[{0., 2.5}, {-9.696969696969697, 7.5}]}, {{
                    2.4242424242424243`, 7.5}, 
                    Offset[{0., 2.5}, {2.4242424242424243`, 7.5}]}, {{
                    8.484848484848484, 7.5}, 
                    Offset[{0., 2.5}, {8.484848484848484, 7.5}]}, {{
                    14.545454545454545`, 7.5}, 
                    Offset[{0., 2.5}, {14.545454545454545`, 7.5}]}, {{
                    20.606060606060606`, 7.5}, 
                    Offset[{0., 2.5}, {20.606060606060606`, 7.5}]}, {{
                    32.72727272727273, 7.5}, 
                    Offset[{0., 2.5}, {32.72727272727273, 7.5}]}, {{
                    38.78787878787879, 7.5}, 
                    Offset[{0., 2.5}, {38.78787878787879, 7.5}]}, {{
                    44.84848484848485, 7.5}, 
                    Offset[{0., 2.5}, {44.84848484848485, 7.5}]}, {{
                    50.90909090909091, 7.5}, 
                    Offset[{0., 2.5}, {50.90909090909091, 7.5}]}, {{
                    63.03030303030303, 7.5}, 
                    Offset[{0., 2.5}, {63.03030303030303, 7.5}]}, {{
                    69.0909090909091, 7.5}, 
                    Offset[{0., 2.5}, {69.0909090909091, 7.5}]}, {{
                    75.15151515151516, 7.5}, 
                    Offset[{0., 2.5}, {75.15151515151516, 7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["500", TraditionalForm], 
                    Offset[{0., 7.}, {-64.24242424242425, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{0., 7.}, {-33.93939393939394, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1500", TraditionalForm], 
                    Offset[{0., 7.}, {-3.6363636363636362`, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{0., 7.}, {26.666666666666668`, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2500", TraditionalForm], 
                    Offset[{0., 7.}, {56.96969696969697, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
              PlotRange -> All, Frame -> True, 
              FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {160., Automatic}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.02`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.04`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.06`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.08`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.12`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.14`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.17`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.21`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.24`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.26`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.994, 0.986], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.64, 0.6626666666666667, 0.6573333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.96`", ",", "0.994`", ",", "0.986`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.994, 0.986]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.994, 0.986], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9199999999999999, 0.988, 0.972], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6133333333333333, 0.6586666666666667, 0.648], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9199999999999999`", ",", "0.988`", ",", 
                    "0.972`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9199999999999999, 0.988, 0.972]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9199999999999999, 0.988, 0.972], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.28`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8799999999999999, 0.982, 0.958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5866666666666667, 0.6546666666666667, 
                    0.6386666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8799999999999999`", ",", "0.982`", ",", 
                    "0.958`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8799999999999999, 0.982, 0.958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8799999999999999, 0.982, 0.958], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.29`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.56, 0.6506666666666667, 0.6293333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8400000000000001`", ",", "0.976`", ",", 
                    "0.9440000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.97, 0.93], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5333333333333334, 0.6466666666666667, 
                    0.6200000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.97`", ",", "0.93`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.97, 0.93]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.97, 0.93], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.31`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.76, 0.964, 0.916], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5066666666666667, 0.6426666666666667, 
                    0.6106666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.76`", ",", "0.964`", ",", "0.916`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.76, 0.964, 0.916]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.76, 0.964, 0.916], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72, 0.958, 0.902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.48, 0.6386666666666667, 0.6013333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.72`", ",", "0.958`", ",", "0.902`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72, 0.958, 0.902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72, 0.958, 0.902], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6799999999999999, 0.952, 0.888], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.4533333333333333, 0.6346666666666667, 
                    0.5920000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6799999999999999`", ",", "0.952`", ",", 
                    "0.888`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6799999999999999, 0.952, 0.888]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6799999999999999, 0.952, 0.888], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.34`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6399999999999999, 0.946, 0.874], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42666666666666664`, 0.6306666666666667, 
                    0.5826666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6399999999999999`", ",", "0.946`", ",", 
                    "0.874`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6399999999999999, 0.946, 0.874]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6399999999999999, 0.946, 0.874], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.35000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5999999999999999, 0.94, 0.86], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3999999999999999, 0.6266666666666667, 
                    0.5733333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5999999999999999`", ",", "0.94`", ",", 
                    "0.86`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5999999999999999, 0.94, 0.86]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5999999999999999, 0.94, 0.86], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.36`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3733333333333334, 0.6226666666666667, 
                    0.5640000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.56`", ",", "0.9339999999999999`", ",", 
                    "0.8460000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.37`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3466666666666667, 0.6186666666666667, 
                    0.5546666666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.52`", ",", "0.9279999999999999`", ",", 
                    "0.8320000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.38`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.32, 0.6146666666666667, 0.5453333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.48`", ",", "0.9219999999999999`", ",", 
                    "0.8180000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.39`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.29333333333333333`, 0.6106666666666667, 0.536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.43999999999999995`", ",", 
                    "0.9159999999999999`", ",", "0.804`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804],
                     Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2666666666666666, 0.6066666666666667, 
                    0.5266666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3999999999999999`", ",", "0.9099999999999999`",
                     ",", "0.79`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.41000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23999999999999994`, 0.6026666666666667, 
                    0.5173333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3599999999999999`", ",", "0.9039999999999999`",
                     ",", "0.776`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.42`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32000000000000006`, 0.898, 0.762], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.21333333333333337`, 0.5986666666666667, 0.508], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.32000000000000006`", ",", "0.898`", ",", 
                    "0.762`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32000000000000006`, 0.898, 0.762]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32000000000000006`, 0.898, 0.762], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.43`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28, 0.892, 0.748], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1866666666666667, 0.5946666666666667, 
                    0.4986666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.28`", ",", "0.892`", ",", "0.748`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28, 0.892, 0.748]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28, 0.892, 0.748], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.44`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.886, 0.734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.16, 0.5906666666666667, 0.48933333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.24`", ",", "0.886`", ",", "0.734`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.886, 0.734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.886, 0.734], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.45`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0.88, 0.72], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1333333333333333, 0.5866666666666667, 0.48], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19999999999999996`", ",", "0.88`", ",", 
                    "0.72`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0.88, 0.72]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0.88, 0.72], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.15999999999999992`, 0.874, 0.706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10666666666666662`, 0.5826666666666667, 
                    0.4706666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.15999999999999992`", ",", "0.874`", ",", 
                    "0.706`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15999999999999992`, 0.874, 0.706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15999999999999992`, 0.874, 0.706], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.47000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.11999999999999988`, 0.868, 0.692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07999999999999993, 0.5786666666666667, 
                    0.4613333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.11999999999999988`", ",", "0.868`", ",", 
                    "0.692`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.11999999999999988`, 0.868, 0.692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.11999999999999988`, 0.868, 0.692], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.08000000000000007, 0.862, 0.678], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.053333333333333385`, 0.5746666666666667, 
                    0.45200000000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.08000000000000007`", ",", "0.862`", ",", 
                    "0.678`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.08000000000000007, 0.862, 0.678]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.08000000000000007, 0.862, 0.678], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.49`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.040000000000000036`, 0.856, 0.664], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.026666666666666693`, 0.5706666666666667, 
                    0.4426666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.040000000000000036`", ",", "0.856`", ",", 
                    "0.664`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.040000000000000036`, 0.856, 0.664]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.040000000000000036`, 0.856, 0.664], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.85, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5666666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.85`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.85, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.85, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.51`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.842, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5613333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.842`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.842, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.842, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.52`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.834, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.556, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.834`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.834, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.834, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.53`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.826, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5506666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.826`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.826, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.826, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.54`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.818, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5453333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.818`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.818, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.818, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.55`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8099999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.54, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8099999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8099999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8099999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.56`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8019999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5346666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8019999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8019999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8019999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5700000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7939999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5293333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.7939999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7939999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.7939999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.58`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.786, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.524, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.786`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.786, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.786, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.59`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.778, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5186666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.778`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.778, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.778, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.77, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5133333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.77`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.77, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.77, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.61`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.762, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.508, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.762`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.762, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.762, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.62`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.754, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5026666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.754`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.754, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.754, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.63`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.746, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.49733333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.746`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.746, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.746, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.64`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.738, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.492, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.738`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.738, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.738, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.65`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.73, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4866666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.73`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.73, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.73, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.66`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.722, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.48133333333333334`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.722`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.722, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.722, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.67`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.714, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.476, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.714`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.714, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.714, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.68`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.706, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4706666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.706`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.706, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.706, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.698, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4653333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.698`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.698, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.698, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7000000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.69, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.45999999999999996`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.69`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.69, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.69, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.71`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.682, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4546666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.682`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.682, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.682, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.72`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.674, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44933333333333336`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.674`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.674, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.674, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.73`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.666, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44400000000000006`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.666`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.666, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.666, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.74`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.658, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4386666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.658`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.658, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.658, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.75`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.65, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.43333333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.65`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.65, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.65, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.76`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6416000000000001, 0.6444], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4277333333333334, 0.4296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.6416000000000001`", ",", 
                    "0.6444`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6416000000000001, 0.6444]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6416000000000001, 0.6444], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.77`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6332, 0.6388], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.42213333333333336`, 0.4258666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6332`", ",", "0.6388`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6332, 0.6388]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6332, 0.6388], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.78`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6248, 0.6332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.41653333333333337`, 0.42213333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6248`", ",", "0.6332`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6248, 0.6332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6248, 0.6332], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.79`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6164, 0.6276], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4109333333333333, 0.41840000000000005`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6164`", ",", "0.6276`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6164, 0.6276]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6164, 0.6276], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.608, 0.622], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4053333333333333, 0.4146666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.608`", ",", "0.622`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.608, 0.622]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.608, 0.622], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.81`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5996, 0.6164], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3997333333333334, 0.4109333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5996`", ",", "0.6164`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5996, 0.6164]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5996, 0.6164], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8200000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5912, 0.6108], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.39413333333333334`, 0.4072], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5912`", ",", "0.6108`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5912, 0.6108]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5912, 0.6108], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8300000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5828, 0.6052], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38853333333333334`, 0.40346666666666664`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5828`", ",", "0.6052`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5828, 0.6052]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5828, 0.6052], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.84`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5744, 0.5996], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38293333333333335`, 0.3997333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5744`", ",", "0.5996`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5744, 0.5996]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5744, 0.5996], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.85`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3773333333333334, 0.3960000000000001], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.5660000000000001`", ",", 
                    "0.5940000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.86`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5576, 0.5884], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.37173333333333336`, 0.3922666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5576`", ",", "0.5884`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5576, 0.5884]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5576, 0.5884], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.87`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5492, 0.5828], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.36613333333333337`, 0.38853333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5492`", ",", "0.5828`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5492, 0.5828]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5492, 0.5828], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.88`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5408, 0.5772], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3605333333333333, 0.38480000000000003`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5408`", ",", "0.5772`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5408, 0.5772]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5408, 0.5772], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.89`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5324, 0.5716], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3549333333333333, 0.38106666666666666`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5324`", ",", "0.5716`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5324, 0.5716]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5324, 0.5716], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.524, 0.5660000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3493333333333334, 0.3773333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.524`", ",", 
                    "0.5660000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.524, 0.5660000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.524, 0.5660000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.91`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5156, 0.5604], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.34373333333333334`, 0.37360000000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5156`", ",", "0.5604`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5156, 0.5604]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5156, 0.5604], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5072, 0.5548], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33813333333333334`, 0.3698666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5072`", ",", "0.5548`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5072, 0.5548]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5072, 0.5548], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.93`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49879999999999997`, 0.5492], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33253333333333335`, 0.36613333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49879999999999997`", ",", 
                    "0.5492`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49879999999999997`, 0.5492]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49879999999999997`, 0.5492], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9400000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49039999999999995`, 0.5436], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3269333333333333, 0.3624], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49039999999999995`", ",", 
                    "0.5436`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49039999999999995`, 0.5436]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49039999999999995`, 0.5436], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9500000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.482, 0.538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.32133333333333336`, 0.3586666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.482`", ",", "0.538`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.482, 0.538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.482, 0.538], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.96`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4736, 0.5324], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31573333333333337`, 0.3549333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4736`", ",", "0.5324`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4736, 0.5324]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4736, 0.5324], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.97`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.46520000000000006`, 0.5268], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31013333333333337`, 0.35120000000000007`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.46520000000000006`", ",", 
                    "0.5268`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.46520000000000006`, 0.5268]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.46520000000000006`, 0.5268], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.98`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4568, 0.5212], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3045333333333333, 0.3474666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4568`", ",", "0.5212`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4568, 0.5212]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4568, 0.5212], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.99`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4484, 0.5156000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.2989333333333334, 0.3437333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.4484`", ",", 
                    "0.5156000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4484, 0.5156000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4484, 0.5156000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.44, 0.51], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.29333333333333333`, 0.34], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.44`", ",", "0.51`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.44, 0.51]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.44, 0.51], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"1.`", " ", "#1"}]}]}], "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "239.92063812080642`", ",", "2878.2464469487754`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "160.`"}], ",", 
             RowBox[{"ScalingFunctions", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Left"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      GraphicsComplexBox[CompressedData["
1:eJyEnQVUFW3Xhu3uVmyxW+x4H+vF7sDufm3MYysGqCi2WNiK3YrKYCsWip3I
aRCwO/6ZYe/7gfH/lq5vrX/d/8N7LjhcM3s/e4YzRfqNaj8wWZIkSTJmTpJE
+7/fVo36umqUU8m3rYH6P3/RbcW/XVf8K3OQn8spPxeZ8y15m2fJWweyadGV
SYuuyPzEe8Mj7w0y157vWXO+p8z+Xs3WeDWT+dusQl9mFZK524yPHjM+2iV/
6vUTU6/LnM+0Obdps8ymido/mZ+Ma/VwXCuZa48tVmNsMZn9tR/3q03yh9/+
NPy2zN2Gbe88bLvMQYOnHB88ReZ8A9vlGthOZlO/khP6lZT5Se+f93v/tEp+
z/BqPcNl9u+2e2W33TJ/89B+YJm7ddL+yRzUvuyx9mVlztc2ac62SWU2aT/u
Q4vkN993r/k+mWs3nVO16RyZ/bVfb1eZvzWs+KFhRZm71U/ZsX5KmYPqPT1S
76lZ8uscyl7nkMymmtovWOYn1bQfWObEfgUa/Ao0+BVo8CvQ4Fegwa9Ag1+B
Br8CDX4FGvwKNPgVaPAr0OBXoMGvQINfgQa/Ag1+BRr8CjT4FWjwK9DgV6DB
r0CDX4EGvwINfgUa/Ao0+BVo8CvQ4Fegwa9Ag1+BBr8CDX4FGvwKNPgVaPAr
0OBXoMGvQPiVQ//vjsAvzuwXZ/aLM/vFmf3izH5xZr84s1/gk1/gk1/gk1/g
k1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/g
k1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk1/gk194/UTnryDD+SvIcP4K
Mpy/ggznryDD+SvIcP4KMpy/ggznryDD+SvIcP4KMpy/ggznryDD+SvIcP4K
Mpy/ggznryDD+SvIcP4KMpy/ggznryDD+SvIcP4KMpy/ggznryDD+SvIcP4K
Mpy/ggznryDD+SvIcP4KMpy/ggznryDD+SvIcP4KMpy/ggznryDD+SsIfi1N
NVT9Xwj84sx+cWa/OLNfnNkvzuwXZ/aLM/sFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvkFPvkFPvkFPvmF1ye/suv/3QX4xZn94sx+cWa/OLNf
nNkvzuwXZ/YLfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPIL
fPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPIL
fPILfPILr09+6f/n62X4xZn94sx+cWa/OLNfnNkvzuwXZ/YLfPILfPILfPIL
fPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPIL
fPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILr09+5dXrZSj84sx+
cWa/OLNfnNkvzuwXZ/aLM/sFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvmF1ye/1j/SxLgJvzizX5zZL87sF2f2izP7xZn94sx+
gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+
gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+gU9+4fUT
9fdhhv4+zNDfhxn6+zBDfx9m6O/DDP19mKG/DzP092GG/j7M0N+HGfr7MEN/
H2bo78MM/X2Yob8PM/T3YYb+PszQ34cZ+vswQ38fZujvwwz9fZihvw8z9Pdh
hv4+zNDfhxn6+zBDfx9m6O/DDP19mKG/DzP092GG/j7M0N+HGfr7MEN/H2bo
78Pg193CGbX/wS/O7Bdn9osz+8WZ/eLMfnFmvzizX+CTX+CTX+CTX+CTX+CT
X+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CT
X+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX3j9RPPVcMN8NdwwXw03zFfD
DfPVcMN8NdwwXw03zFfDDfPVcMN8NdwwXw03zFfDDfPVcMN8NdwwXw03zFfD
DfPVcMN8NdwwXw03zFfDDfPVcMN8NdwwXw03zFfDDfPVcMN8NdwwXw03zFfD
DfPVcMN8NdwwXw03zFfDDfPVcMN8NdwwXw03zFfDDfPVcMN8NRx+ddZ/rvvw
izP7xZn94sx+cWa/OLNfnNkvzuwX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX
+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX+OQX
+OQX+OQX+OQX+OQX+OQX+OQXXp/8WqO/7w/gF2f2izP7xZn94sx+cWa/OLNf
nNkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv
8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv8Mkv
vD75Fe/FI/jFmf3izH5xZr84s1+c2S/O7Bdn9gt88gt88gt88gt88gt88gt8
8gt88gt88gt88gt88gt88gt88gt88gt88gt88gt88gt88gt88gt88gt88gt8
8gt88gt88gt88gt88gt88gt88gt88gt88guvT37l1+cVT+AXZ/aLM/vFmf3i
zH5xZr84s1+c2S/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/w
yS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/w
yS/wyS/wyS+8PvnVK9jaPdj6FH5xZr84s1+c2S/O7Bdn9osz+8WZ/QKf/AKf
/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf
/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/AKf/MLrk18B+jzs
OfzizH5xZr84s1+c2S/O7Bdn9osz+wU++QU++QU++QU++QU++QU++QU++QU+
+QU++QU++QU++QU++QU++QU++QU++QU++QU++QU++QU++QU++QU++QU++QU+
+QU++QU++QU++QU++QU++QU++YXXJ78i35V/qf4PfnFmvzizX5zZL87sF2f2
izP7xZn9Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8wuuTX8v0eWsE/OLMfnFmvzizX5zZL87sF2f2izP7BT75BT75BT75BT75
BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75
BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75hdcnv47oN1S8gl+c2S/O
7Bdn9osz+8WZ/eLMfnFmv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8An
v8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8An
v8Anv8Anv8Anv8Anv/D65Nc9fZ4fCb84s1+c2S/O7Bdn9osz+8WZ/eLMfoFP
foFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFP
foFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfuH1ya+P
ermUfnFmvzizX5zZL87sF2f2izP7xZn9Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8wuuTX7ni/zv4xZn94sx+cWa/OLNfnNkv
zuwXZ/YLfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPIL
fPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPILfPIL
fPILr09+1Yj/PuAXZ/aLM/vFmf3izH5xZr84s1+c2S/wyS/wyS/wyS/wyS/w
yS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/w
yS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS/wyS+8PvnVJf7ngl+c2S/O7Bdn
9osz+8WZ/eLMfnFmv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8An
v8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8Anv8An
v8Anv8Anv8Anv/D65Nfk+PcJfnFmvzizX5zZL87sF2f2izP7xZn9Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8wuuTX/S+wy/O
7Bdn9osz+8WZ/eLMfnFmvzizX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CT
X+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CT
X+CTX+CTX+CTX+CTX+CTX3h98ut0/O8RfnFmvzizX5zZL87sF2f2izP7xZn9
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8
Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8Ap/8wuuT
X8/ivYBfnNkvzuwXZ/aLM/vFmf3izH5xZr/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/A
J7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/A
J7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/w+uTXz/j/C784s1+c2S/O7Bdn9osz
+8WZ/eLMfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFP
foFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFPfoFP
foFPfuH1ya+C+v06UfCLM/vFmf3izH5xZr84s1+c2S/O7Bf45Bf45Bf45Bf4
5Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf4
5Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bf45Bden/wS2n+WPRp+cWa/
OLNfnNkvzuwXZ/aLM/vFmf0Cn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wC
n/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wCn/wC
n/wCn/wCn/wCn/wCn/zC65NfffT7waRfnNkvzuwXZ/aLM/vFmf3izH5xZr/A
J7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/A
J7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/AJ7/w+uTX
LO3XeOI1/OLMfnFmvzizX5zZL87sF2f2izP7BT75BT75BT75BT75BT75BT75
BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75BT75
BT75BT75BT75BT75BT75BT75BT75BT75hdcnv7bo9xvGwC/O7Bdn9osz+8WZ
/eLMfnFmvzizX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CT
X+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CTX+CT
X+CTX+CTX3h98uuCdjrrHgu/OLNfnNkvzuwXZ/aLM/vFmf3izH6BT36BT36B
T36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36B
T36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT36BT37h9ckvi34/axz8
4sx+cWa/OLNfnNkvzuwXZ/aLM/sFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkFPvkF
PvkFPvkFPvkFPvkFPvkFPvmF1ye/4j/P0Ec0X6MJ8L8+T9rH8HmZPobPy/Qx
fF6mj+HzMn0Mn5fpY/i8TB/D52X6GD4v08fweZk+hs/L9DF8XqaP4fMyfQyf
l+lj+LxMH8PnZfoYPi/Tx/B5mT6Gz8v0MXxepo/h8zJ9DJ+X6WP4vEwfw+dl
+hg+L9PH8HmZPobPy/QxfF6mj+HzMn0Mn5fpY/i8TB/D52X6GD4v08fweZk+
hs/L9DF8XqaP4fMyfcT8qto3ID9fOrFvgYb1QKzz57nyOufE/32Q4b8Pwjp/
niKvc+Z1/XbbQxewzpnX9cPk62Wsc+Z1/jwqXufM6/x5QrzOOfH3F2b4/sKw
zp/nweucE78/4Yb3Jxzr/Pf0vM6Z1/nvoXmdM6/z37PyOmde579H5HXOvM5/
T8brnHmd/x6I1znzOv89B69z5nW+H5/XOfM630/N65x5ne+H5XXOvM73M/I6
Z17n+9F4nTOv8/1EvM6Z1/l+EF7nzOt8PZ/XOfM6X4/ldc68ztfTeJ0zr/P1
EF7nzOs8z+Z1zrzO80he58zrPE/idc68zvMAXufM67yf43XOvM79OK9z5nXu
p3idM69zPeR1Y30cq72dq2T/xZnrIWeuh5y5HnLmesiZ6yFnroecuR6CT/UQ
fKqH4FM9BJ/qIfhUD8Gnegg+1UPwqR6CT/UQfKqH4FM9BJ/qIfhUD8Gnegg+
1UPwqR6CT/UQfKqH4FM9BJ/qIfhUD8Gnegg+1UPwqR6CT/UQfKqH4FM9BJ/q
IfhUDzknrl8+InCl9gbInG55pbTLK8k8TC8MMocufnZ18TPZL5VZeLjUwsMy
+yzQ/skcNbeXQ/2f7Pe0H7+qzIEz0+2amU7mdNMjUk+PkP3SMO3XfVzm0Ema
4DKXmaD9wmX20fSuKXPU6Ex29X+SP9LiPtIi+6XA/4J2/BckczrtNL5U5mGD
tH8yh/ave7l/XZnL9M1Wom82mX30H1f2R1Hd9ROL5Gu/7hUyB3bWBJc5XUft
Fy7zME3vXDKHtn59sfVr2R+VaXneteV5mX20w3mNzFHu+g8s+Y21fzIHav8n
n8zpxJvk4o3sn4ZpP+5lmUNrrb9Qa73MZWpoB7TMifuDrYb+YKuh/zho6D8O
Yn21fl44jnXOvK53A95nsc45cf9y3tC/nMd6R/24voR1zryuv9yGq1jnzOvd
9F/rdaxz5vUX+vn8NtY587pejurcwTpnXn+v13vZf3Hm9Wr6eeQe1jnz+kT9
PCj7K868fko/jz/EOmde/67XocdY58zr9fRvWPZXnHl9hl4vn2GdM6+f0+vh
C6xz5nXtWUNJksj+ijOvF9XbUbnOmdcb60LK/oszrw/Q3o4Jsr/izOvz4v//
WOfM6zvijxusc+b1q/HHKdY587oj/ryAdc68TuchrHPmdTrvYZ0zr7eMP89i
nTOvD48/r2OdM6/76geUXOfM6/sDtX+y/+LM62Har3uq7K848/qbi/obgnXO
vJ5NP2Blf8WZ16toh8M7uc4Zx7f2ahdl/8WZ6x3XQ653nLneceZ6x5nrHWeu
d5y53qHeUr3jzPUOfKp34FO9A5/qHfhU78Cnegc+1Tvwqd6BT/UOfKp34FO9
A5/qHfhU78Cnegc+1Tvwqd6BT/UOfKp34FO9A5/qHfhU78Cnegc+1Tvwqd6B
T/UOfKp34FO9A5/qHfhU7zizX+jfEs23TIZ5lskwzzIZ5lkmwzzLZJhnmQzz
LJNhnmUyzLNMhnmWyTDPMhnmWSbDPMtkmGeZDPMsk2GeZTLMs0yGeZbJMM8y
GeZZJsM8y2SYZ5kM8yyTYZ5lMsyzTIZ5lskwzzIZ5lkmwzzLZJhnmQzzLJNh
nmUyzLNMhnmWyTDPMhnmWSbDPMtkmGeZxIsj2gvIeVbiHIjM86rE60HIPI/i
zPMnzjxv4szzJc48T0r8emHIPC9K/P2EI/M8iDPPfzjzvIczz3c48zyHM89v
OPO8hjPPZzjzPIYzz18487yFM89XOPM8hTPPTzjzvIQzz0c48zyEM88/OPO8
gzPPNzjzPIMzzy8487yCM88nOPM8gjPPHzjH99s7DL/Pw8jx/fBJ5Pj+VkGO
f/vPI4/X3w/p0xf957uGPEX/fm8g/9b/3UZuqAt8B9lLP+9Kny7rdeIechq9
rkmf4uuw9GmRrtdj5Ft6fyJ9yqL/wNKn9nr/8MLwetKn+L7hleH1Zd6r90eR
Bp70KVbvfywGvvSpkt7fWA3fj/Qpvv5In1bovkufjuq+S58e6L9P6dMn/fcl
cx7dd+lTTd136VP8eVX6FH/elj6t1/2JFclyaidY3m/EiX5a+1BC5vOZf4Rk
/uFAju/jZZ6ttUu7ZI5MrTVMMjfUTq8dZd6SrExAsjIyx+8bZO6nlZP7dsn/
tkf5tkfmol+0AirzbK18esgcf16RuaHWPiSXeUvM440xj22SH33gV9QBmftp
7dJcmc/rx6HMRc2VC5oryzxbaw9Tyxz5XPtnlXytnByROf44lznZA62AytxP
K5/VZD4flv5sWHqZi956lf/WK4vk68elzJFXtYZY5oZau9Rf5i0XtIZJ5mTn
tF+wzP3085RZ8k9r/2QuekprkGSerbXDg2Vmvzi/y6M1UPL6YeIciMz1MPF6
EDLXQ85cDzlzPeTM9ZAz18PErxeGzPUw8fcTjsz1kDPXQ85cDzlzPeTM9ZAz
10POXA85cz3kzPWQM9dDzlwPOXM95Mz1kDPXQ85cDzlzPeTM9ZAz10POXA85
cz3kzPWQM9dDzlwPOXM95Mz1kLNxHs++cT/Pmft5ztzPc+Z+njP385y5n+fM
/Txn7ufBp34efOrnwad+Hnzq58Gnfh586ufBp34efOrnwad+Hnzq58Gnfh58
6ufBp34efOrnwad+Hnzq58Gnfh586ufBp34efOrnwad+Hnzq58Gnfh586ufB
p34efOrnwad+Hnzq58Gnfv7/P3+ZRHtt+ztQ5sPxdRs5W1btn8xj9e2+3O/d
1U7nZ2WuklYbcMgcf9zL/E4rX0Lm9trbl1Pmw2r1+hUl93vZtHIdIjP1HZL/
SRNG5ioftDdQ5mXa4ZFH5nex2j+536O+RvKd/vud/jJn037c0TKP1Xb77jLf
1cpXfpnj50Jyf7dMG+dclfmdVq43ytxe02WczIfvacLIHD+Hknmsdnh8kvu7
uze0fzJXCd1SLnSLzMu008Ekmd/F932Sr403XGU+rGgNitz/ZdN+vWEyj9XG
OTtkvhvfV8rXT1SPApDj5+X7DPXnGHIP/fx5Gjl+Pn0OWW+/51xE1rHXryDX
1v+D68hn9fPrLeT4cijro36amCDro/7t57uHbNPnSrI+ltLnYA+R4/vvx8jx
/basj/H99TPk+H5a1kdP3WNZH+PP07I+/tDrgKyP8fVX1sN/9J9X1sP4eizz
zPg+ylCfZX2kPtBQr2U9TBHfxyK7xvfJyO76L1zWx0H6+ynr4wL9Fybr4S79
/ZX1MH7OJnP8HE/Wxwz6fkpev2a/El8/NBmuH5oM1w9NhuuHJsP1Q5Ph+qHJ
cP3QZLh+aDJcPzQZrh+aDNcPTYbrhybD9UOT4fqhyXD90GS4fmgyXD80Ga4f
mgzXD02G64cmw/VDk+H6oclw/dBkuH5oMlw/NBmuH5oM1w9NhuuHJsP1Q5Ph
+qHJcP3QZLh+aDJcPzQZrh+aDNcPTYbrhybD9UPTH/cDJp4vBfz1fi7+ej6/
/e3+rsTzqGN/vd+Lv57Pj3+7/4u/ns+ff7sfjL+ez69/uz+Mv57Pv3+7X4y/
ns/Pf7t/jL+ez99/u5+Mv57P73+7v4y/ns//f7vfjL+e68Pf7j/jr+f68bf7
0fjrub787f60xPMfeb30f92vlnge9Pf71xLPh+T11P91P1viedHf72/jr+f6
97f73RLPZ/9+/xt/PdfPv90Pl3je+/f74/jruf7+7X65xPPjv98/x1/P9ftv
99Mlnkf//f46/nqu/3+73y7xfFte//1f99/x13P/8Lf78fjrub/42/15/PXc
f/ztfj3+eu5P/nb/Hn899y9/u5+Pv577m7/d38dfz/3P3+7346/n/uhv9//x
13P/9L/uByyrn2/kfIuz8f7AxPOj5Ybz33Ks8/w+8fzpMDLP7znz/J4zz+85
8/yeM8/vOfP8njPP7znz/J4zz+858/yeM8/vOfP8njPP7znz/J4zz+858/w+
8evJ/p7n94lfX2ae3yfmyf6e5/eJ+bK/5/l94u9H9vs8v+fM83vOPL/nzPN7
zjy/58zze848v+fM83vOPL/HPJPm9zyP4HkFzyM48zyCM88jOPM8gjPPIzjz
PALzEJpHcOZ5BPg0jwCf5hHg0zwCfJpHgE/zCPBpHgE+zSPAp3kE+DSPAJ/m
EeDTPAJ8mkeAT/MI8GkeAT7NI8CneQT4NI8An+YR4NM8AnyaR4BP8wjwaR4B
Ps0jwKd5BPg0jwCf5hHg0zwCfJpHcK50TBvYyczzVR/9eCuN+Spnnq9y5vkq
Z56vcub5Kmeer3Lm+Spnnq+CT/NV8Gm+Cj7NV8Gn+Sr4NF8Fn+ar4NN8FXya
r4JP81Xwab4KPs1Xwaf5Kvg0XwWf5qvg03wVfJqvgk/zVfBpvgo+zVfBp/kq
+DRfBZ/mq+DTfBV8mq+CT/NV8Gm+Cj7NV8Gn+Sr4NF/lrF9uc5P7xcQ5EJn3
e4nXg5B5v8aZ92Oceb/FmfdTnHm/lPj1wpB5v5P4+wlH5v0KZ96PcOb9Bmfe
T3Dm/QJn3g9w5n6fM/fznLlf58z9OGfutzlzP82Z+2XO3A9z5n6XM/eznLlf
5cz9KGfuNzlzP8mZ+0XO3A9y5n6PM/dznLlf48z9GGf92yspfbqknUa3SZ/0
l68qfRqiCdBP+qSXmUDp00jtx38nfdJxdaRP47T3a470aZoGGCh9UrTvN630
KanW/u+XPjXSBG8vfZqrtUOfpE9XtO/fX/qUVtPhH+lTC+3XGSl9Wqz9OuZJ
n25rP28Z6ZPezw2WPun761rSJ70fSy/90fux5zLr/dgB6ZPej82SPun9WAfp
k96PFZf+6P3YZ5n1fuya9Emv8+ukT3ofMUL6pPdj9aVPej+WTfqj92MWmfV+
7Lj0Se/HFkif9H6sm/RJP++WixN6+6TWP739/xUn9Ombi8z65Xm1/nGuoP0c
V2T21fqJDTLHav2Ep8yttdN1M5n3a/1EIZkzae+TWv/A18rTdZlvae3EZpkr
aP3ERJl9tXLcSmb991BM5tZaP6HWP/C1fuK2zJm0fmK7zCO1fmKKzPrvuZ3M
FbR+oqTMvto4Wa1/4Gu3X4TL3ForT7tl1u9bniFzJu12k04yj9TKcVmZb2nt
U1KZKwQkKxOg1j/wNU/3yRyrtYtzZG6t7fe6yrxfm59XlDmT1h6nlHmkdhyo
9Q98bX5+SOYK2vx8vsy+2vi8p8zsF+dKWv+7RvZTS7V2aqTMb7T2t7HMbbXj
Ip/MB7X+943sl7Jovl6WebTm63qZwzRfx8qsH3dNZV6q+VpQ5jearx9kv9RW
8zVU5oOarwEy68f1BJlHa762lDlM87WozJU0X7/Ifmmp5ustmfX70LfJ3Fbz
1STzQc3XtjJn0XwtIfNozdcfsj/S73u/K7Pe/+6Seanm63SZ32i+dpS5reZr
GZkPar4mkTmL5usD2S+N1nzdK3OY5utsmStpvnaRean2fyvI/EbzNYXMbTVf
n8h+6qDm60GZs2i+zpO5unZeW+v8o9/Sy/14f8O6rJcntQLaPRDrxn6sv9Ye
BB8x/PeynurjgtZBWDf2a/rrjwrBurF/0+fhJy5g3djP6e3C78tYN/Z39bVv
qGko1o39nr6tWnrT8P3Jer1Ve7nhYVg39oN6+5HlruH9kfVcH6cdDce6sV/U
358u97Fu7B/3aF79eIB1Yz8Zo/0AAY+wbuwvK2rHdeMnWDf2m2M0nOMp1o39
p95fLn6OdWM/qveXlV9i3dif6t/PsAisG/tVfT5c9xXWjf2r/v1misS6sZ/V
578Rct3Y3+o/z2Ez1o39rj7f9bJg3dj/6j9vZyvWjf2wPr8tbcO6sT/W57Xf
5bqxX9bnszftWDf2z/o8dpMD68Z+Wp+/jnFi3dhf6/PWRlFYN/bb+nw1ZzTW
jf23Pk+1y3VjP67PT0+9xrqxPy+n+b8wBuvGfr219uvoKbNeVyvGCZs2rlG/
Xh/LZPRH5n6eM/fznLmf58z9PGfu5zlzP8+Z+3nO3M9z5n6eM/fznLmf58z9
PGfu5zlzP8+Z+3nO3M9z5n6eM/fznLmf58z9PGfu5zlzP8+Z+3nO3M9z5n6e
M/fznLmf58z9PGfu5zlzP8+Z+3nO3M9z5n6eM/fznLmf58z9PGfu5zlzPUyc
pV9c7xKvS7+4nnHm+sWZ6xVnrk+cuR4lfj3pF9ebxN+P9IvrCWeuH5y5XnDm
+sCZ6wFnPv9z5vM9Zz6/c+bzOWc+f3Pm8zVnPj9z5vMxZz7/cubzLWc+v3Lm
8ylnPn9y5vMlZz4/cubzIWc+/3Hm8x1nPr9x5vMZZ+P9qdzf8/yUM89POfP8
lDPPTznz/JQzz0858/yUM89Pwaf5Kfg0PwWf5qfg0/wUfJqfgk/zU/Bpfgo+
zU/Bp/kp+DQ/BZ/mp+DT/BR8mp+CT/NT8Gl+Cj7NT8Gn+Sn4ND8Fn+an4NP8
FHyan4JP81PwaX4KPs1Pwaf5Kfg0PwWf5qfg0/wUfJqfcmbfuL93127/STCv
1//uOcG8PpV2+SbBvH6Qdv9Pgnn9Ze3+nwTz+hLa/T8J5vX631knmNfbtD+H
SDCvd9d+3ATz+h3q9qZcgnl9Ku3PPxLM6/W+JsG8/rJ2OSPBvL5EUfVfgnn9
PE3nBPN6m3b5JsG8Xu+jEszrd6g2504wr0+lXa5KMK8fpN3elWBef1n7c4gE
8/oS2mkswbx+nnY7W4J5vU37848E83p37debYF6/Q/t7lwTz+lRaX5BgXj9I
0znBfvGydvkmwX6xhPb3Lgn2i/O0wzfBftGmnWcS7Bfdtdu7EuwXd2h/75Jg
v5hK+3uXBPvFQVrDlWC/eFk7jyXYL7JfvD/kzPtBzrz/48z7vURfP0rWR97P
ceb9G2fer3Hm/Rln3o9x5v0XZ95vJfp+usj6yPspzrx/4sz7Jc68P0pU7xbL
+sj7n0T1dZisj7y/SVRvM8l6yPuXRPX3sKyPvD9JVI87y/rI+w/OvN/gzPsL
zryf4Mz7B868X+DM+wPOvB/gzP0/Z+73OXN/r99OkeB6T+IciMz9VuL1IGTu
tzhzv8WZ+y3O3G9x5n4r8euFIXO/lfj7CUfmfosz91ucud/izP0WZ+63OHO/
xZn7Lc7cb3Hmfosz91ucud/izP0WZ+63OHO/xZn7Lc7cb3Hmfosz91ucud/i
zP0WZ+63OHO/xZn7Lc7cb3HmfivRfrVCHNa5/+Ks305Syh/1kesn10fOXB85
c33kzPWRM9dHzlwfUZ+pPnLm+gg+1UfwqT6CT/URfKqP4FN9BJ/qI/hUH8Gn
+gg+1UfwqT6CT/URfKqP4FN9BJ/qI/hUH8Gn+gg+1UfwqT6CT/URfKqP4FN9
BJ/qI/hUH8Gn+gg+1UfwqT6CT/URfKqP4Gt/D9rjz3m+fj/Vh92Jr6f5yHmp
fl0on5yP6ue3TnIeqp89Nsj5p3542+S8U69/FeR8s4T2+hPkPFP/vKTecn6p
H47J5bxSP5x2hifmt5DzSP3+6Tg5f9yo/QfL5bwxQntfa8j5ov53wc/kPFH/
vJ6Zcn6oH2eucl74QTs8B8j5YE7t/FRdzgP14zqNnO95aD/PE5knae/3Xjnf
W6v9fNPlPE/f17SV87un2s9bVM7j9PtdP8hcQPv5L8t5nF6v18j5W2/t/Rgm
5216va4r52ubtfcnk5yX6fU6Qmaz9n4dlvMyvV7PlfOx4tr75yHnX/pxWjpO
FNQuKCY4XyWat3+PE8e1+616JLjfQtsvusuv1+tQfpn1/eI7w37xqmG/uNGw
Xxwns/6+NpdZ3y8WTrBf1baLnwz7xRuG/eIWw35xksz6frG1zPp+0TXBflXb
L34z7BfDDPvFHYb94lSZ9f1ie5n1/WKpBPtVbb/4y7BfvGfYLwYa9oszDfvF
zjLr+8VyCfarmtfJEuxXtf3iI8N+cb9hv+hl2C92k1nfL1aSWd8vpkqwX9X2
i8/k+am2m/rvsMz+2p8DLZD5m3Zc9pK5o7Y9rirzAK0ejpb7x4taPXSX2VWr
h/ll1u8jfSf3gxatHl6VubFWDzfKvE2rh+NkTqHVw+Yy6+eVwjJf1OrhJ7kf
dNXq4Q2ZvbR6uEVmi1YPJ8msf+5Ya5m3afXQVeYUWj38JveDA7R6GCbzRa0e
7pBZ77unyuyl1cP2Mlu0elhK5sZaPfwl93/btHp4T2b9PBEo8wCtHibYX17U
6mGC/aWrVg8T7C+9tHqY4H4wvS9KcD9YY60eJrgfbJtWDxPcD5ZCq4cJ7gcb
oJ2AEtwPdlE7zyW4H8xVq4cJ7gfz0v7cK8H9YBbt4xES3A/WWBt/JLgfjPs1
vT0dJ/cHervYXe4P9PpzVu4P9L8faS33B7qvo+T+QL/t9ITcH+jt62+5P9Bv
h24i9wezNW+X3kych8v9gb4fzSL3B3p7fjQ88fffRe4P9J/vh9wf3NDa2wC5
P9Dv62gs9wf6dX2H3B/o/f9iuT/Q+/3Kcn+wUHv9YXJ/sE/b39aV+4ObGi+T
3A/EaT9AhMyZNf5huT+orPUnXnJ/0E77fjrL/YH+9yil5H5gufb9fZf5mPb7
uin3B/e173eT3B981s4zY+T+ILd2Hmsk9we1tDcwp9wPdNXOw3aZp2i/31Ny
f7BOqyML5f7grPYLTrDffK7VwQTXk+L/fqiR3N9q788zOd/Qtw9L5HxD//OM
R3K+of++hwQlzlPlfEPfDl2U840M2vub4QryEu0/6CTnG9m0n3+DnG/ofoyV
8w3dj1xyvqH7ESTnG7ofveV8Q/cj+cPE8/adcr6h7/dayPmGXofj5HxD388t
l/MNff9WQ8439Os5I+R8Q/dDyPmGfj0nq5xn6H5YZNav5xyX8w3djwVyvqFf
z+km5xu6H+XkPEO/nvNLZt2PMDnf0PuALXK+ofsxTs43zmh+uMv5hu5HHjnP
+KWdL6JkLqT9/GfkfKO+dkLylfONvlp/2CdWBCx2DPes5cB8I7NvKzGrqRXZ
+nTm1M1YD8T8+U0/W/mvPttE75Q3NxfOZsU6z+8PXTRPyeS1H/P7/eW+PB/p
e1isWLLo9L92O+YlPL+u6Wqp22zJHsyvIy1Nc/RdvB/za4+XHSstCzyI+fXO
IdWW1cp9WD4v59f2DWsnHhFLO91uUb29Ba/P1wt8/b8/qvj9KK4XBE2tlsP3
0nFcLyji3f32II+TuF4QafL8WtbvlDjzYWeBkOp2zHN4Pl68vfv6E3OPYj7+
KaTTuf96HMN8fNiIn1OGlDyO+fiulXMKP8t+AvPxazuLVzqT+iTm49VPdBM9
3p3E9YkeeT09/c4Fyfu7W7n1y5LyDK5PuFQ+OO+A21lcnwj9b+2b/m2CcX0i
9lSv+qNaKLg+0ajejsyueUNE6moDZrWqYcM8iq9X/Jrk0WLHxhBcrzhWNG7b
2NLncL1i1dBPSUccPIfrFQ8HFxu+2O08rld8cblUs/fB87hekWvxhfd7Sl+A
L3kObsznEXBBbEt5+Hzj4lbMv/j3365JmtTJm13E739f5sKjnv24iN9/sbpr
bfmOXsLvf9WKPhlW9bks/tt25dGVnhbMz9iHWwO3ff1R8gp+X9+qPf+6/O1V
kbvg4sdPslkwXyvxqXh+pZAF8zX++kPDPGcWH3RLLIq2Z1ngYcG8jfmZ25pf
7e9wR/xzKpXrmc0WzN+Yv+JIpSve6vmQf565pSe2fzUzXAzPv/Xfp88tmM/x
z9dj+7dJHdvfxfvRtt8Wj/vP74kJXnO/lc1sxfyO30/PReVK1D36QLSIG3p+
RyUr5nmdSl2cl7mhFfO8ZUU7jfrRzIp5Hv9+Jrk1eXfl6FNxtc6hJffU/p/n
e3VDB9Q8P9aK+R7/fsvPzO3V5+dzkaLJ8TZRAVbM+9jfvQ37X28x44VY9mHs
5lnT5TyQ/em7sXP0uSYRIv0Oa9izZ1bMB9mnL99Ovkg+8CWOl8GdX+VrlDpC
lElprl3miZwn8vHzI9vJh24dX8LXnhXG+kwKiRANvk686F7Chnkj/z5LHK7e
+1vtV+LshDoFWqmZ1/n49Rv940iZ8Aj5PJpaS3f3+C8Cx8/mLPv7Lzr6Siya
7/uxxQQb5pd8/Fi/TJme+Z9X+P1v/+Ry9tW2V6Lck4DzO2dZ8PV8/LopRS5O
uRIp6rZZVqP9Exvmn3w871u74mWLkZE4ng9OmTxreJ5I+OJWwDR4xMJIcco9
ZdLu1yz479lP32Mncoar9QzPV6t4vnZ/T7NwFumzZWFzO+arfH6Z18OzZ7eC
Zvj3aGuHh1V3mcWgkF5tXyW34uvZ534vts7Mls2M86up/4Ebb9paxNRC1aMm
fbBjXsvn24g9nQLnFLDgfNt654Ofh5xmnG+zJ6uzyXTMDL+vdp87c2dDi8gU
UOL9nHpWvB5fX678+WCfSjWs4vAYt5u7Yh2YB/P15hXFJ6W4mMOK683h58au
u/zWguvNH5TJvmlvW1CvnJlfTTyw14J6VdEtfbFhaj/J/s+t1nFz49ZW4Rxz
7kut2Vbw+HgKGb/aluamBX4+8H9erVoTq/Ap3tlUepGcV/Px8uvl3O6p1a/n
6+1D2vZ76txqxfX2zN/bhgofK663W5+127RytBXX22c/L5O5rYcVx1fgs0cX
RtmtonnwYGeSz1bMw/n4mv71/ciU663wu+4Z2/Xl0VaRNDi6bcVPcn7Ox9+d
pCUHhqyxwr/TD1+uO3bdJpzFT88I2GbDfJ2PjwpHD0bm2mDD8XB6wr83Bw2y
yefRVvS4vq+iDX52G+WyM/MHm4h9XKd93DwLXo+Pn2XejxpYjttw/Hb1f9uu
qsmG43X+mtFv39S1wa/P5TK8fnreLjpnGl621z475v3s2/351Xtf3WaHb33j
tl6bNceO42N2wStfV/W143io8WnknFr/2HG8nlmTbl/G/HYcn6Wyu2Qq8M0G
X/u2Ds9UZ49d7BzrM3iV2j8xn4+n9h0yf344zY7jxznpUKUlbew4nrf9HjLG
vYgdfqwzTShXXP1+17/PFlBhnrx+wT6MvLB1cdf1DpGt1OMrbQrK+0fYD88t
hzyPejtwvExxO3LTZ6wDx0d1+6B9b7o6cHwUL/BlfIWGDhwfKWxp69Uq68Dx
8WuSX9Ix2Rw4PlJV2hSZ9Ysdx3/5xQ0X7npul88ra7xduC51iDd1qi24U80m
n19PPqTbXWF7w2EO+fyybytOvf/XAV+zuu7b9LqIA8ffhwpddli/23G83Tkx
PPeSB3b40vFRcpcDUx1iwpsmk63TLOCxPxU3by3z08MBfxYNfd4je1UHjgdz
38L2a5kc8L/V2cFJfF7bcTynWHq+hPsNu/z7wqr7UiQ748DxWuL0uLtV9jrk
81LHFErdtqtT7GlV1Ltm/T+fX+8WvjzH62ry+fX/rq070yOHfH792ud7A0Z9
cOD46+sS1yfTA4c83tq3a1z7qAPvR+W00UuUDk4xwBq4ZKfnn8+f75wzY6+e
FeTz53vezNWtZTr5/Pn7rv8knWJ3wMfaXqv6X7vgwPG6qFWv9Fc3y/erXONR
6Rd3d4rFW38WCHr/5/PlY/bcT52jtny+/KzueTrXyCefLx9xrtK+TN+lb0MX
fknyuXyUyP9wQPiUoX8+/73+6BFZ/HPI57/frXi/aIEvTvn50xPuxSx94MT5
oNSn9179jjtx/G84MO7T1NVOHP+Hqzf+cGOyE++nZ+Drem4qL6Jh0XmR/8/z
248PtqSomFs+v/3Gj6Ct92Oc8HdlkjQHil92wt9FFzYlSxXghL9Dbw/cPN8k
3+/jt+4MqFU7Shx+3+ta8pd/Pp99UdCThV7Z5PPZt4fuLbL2tRO+H1rVpfFL
lcd+zyn38IPLFif8Dh2zJeLf6fL9DtiZY55rhShR3vuNcmDcn89fb2/ySvMp
LAo+3/L2KbUrJArnm6V3XDLmPxiF88uit3XbtN0UhfNLzREux/LPi8L5JabF
sG5jBkfh/OIdvCe/o2mU/DzAlSEXqqSOFu1cvF3vJ5fPR+fjoWtM7NYq4VE4
HrYnc3/zNSAKx8OHTqb9Y0ZH4f1Ns8/1Vr2M0aJLQNPsw73+fJ75W78rd2Mf
RuF4COhRIaTL5igcD/krlo7ON1w+397jpP/STpFR4vJx3xIFK/z5PPKVPdrH
nDwon3ff8OzIMb9ny+fd+46vtGZWpyj4FpUutbns1mhxfdONrlnH/fn87lpb
uhVo1kk+TzvnyUePB92MFpNqtCgT8PzP52uvW3uvVL1h8vnXjfp3aRr8MFp4
Fky5ub33n8/DbtdnRYnXE+TzsGsX6jO6VS75fPGemTMda1vvtZhe7OrKlVPl
856DK0zs6/LE+sfzkE902nxg4cDXouXrLTfGzpDPO+bXqz1vcUjZEPk86Uz5
S80MTiqf91vwpm+hrk1ihOPk8AEFk9n/eB5vxHO30p8vyuc9e3VJn655dvk8
3iP1/GMDe8SI0Mp5G7kMsf7x/NxCPdYvn/xDPp/5ba+lAYvcY8TkK9OPF05l
+eP5ty4jO2Sc6Cqff5vbu/qrbGXl829nO+tFuVeSz7/dGqlM3OYmn387ooJH
/bkN5fNvv//Ifety51jRN3ao/5ZlCZ5/S/6HFE+5f/Ey+XzjKh17vvA/LZ9v
vLzzjq2vX8nnG/tU/5FnS3L5/NmQPlPdKxaXz58dNOj7uI2tY8VP/+bPl+a1
/fE82TwPC91vukE+rzhJf+e4i1fk84rT3clwK/iNfF6xS5k3FdPkks+TLXpo
dETnmrHi4PARtilz/3xebE7XUaXW+8jnEdcruXi12C+fR9zO2uD6+zvyecTv
3bKd7fhRPo94x86y/z3LLZ8XPOBjwfu5BsnnBe+YOqVWTU/5vOBjC4bl7jdN
Pi+4ZIf1a2osls8LzlbBvfncLfJ5wQOjWsxPckI+L/iWrUGjY6HyecHTpv03
cMpT+bzglTcmfzwbI39fZQ+Uz948lbw/tEDyBg3uFYgTfYOrbgk49OfzWTNc
WHN01Sj5/N99SVdV+bFQPv/Xz9zafHi7fP7vz7vtC4oz8vf1X/re/m0fyef/
mucXaNXnvXz+74o8nR9OySjv9+zWuPTdgBJx4uDYzuP3XP3z+az/nl5s69xT
Pv/34OtFvxyT5PN/n5fMl271cvn7/DHn26DQvfL5v/fnnIsIPy+f/+tzd+v5
tY/l83+nLJ64d/ob+fzfkAIZLPtSyftnU60q22ePm7x/dphP0hmt3eX9s09T
P5u+q7O8f3blnuDTfsPl+3n9+5f/Vs6S98/eiZjW69xKeX9riFuXK7dqyZ83
eZZ7QWtay/tbk7Z3/1G+v7y/1W+ZfUzSifL+1hvrmqwr4BMnmpl++C0p5VC8
xpZ4U2ztChGyf5ZoUt2q1C3cdNvNIctF77ig+SNrOpRl4w7UOjFxi7g/aMmC
ZykcyvPM26fsaX5IbD53+0jOHxYlonTw5EjzHhFW23qy9mWL0nay/f701QfE
9jsjKvsvtSiDzqdf8t/6QyLjvfpXi3a3KFm/zv4cOOiIKOMxKGZxiF3xyzvj
iM+gY6LNjRKfLsy3K6H9nrU+eOyEWNe4z+B8HeyKrXy71Zd6nxKpDnfbVa20
Ranyyv669dajYsq2R4X+/WpW7Ct3156y9JhodHzkB5drZiVw4I4fM+cdF1lK
lR6Uc41ZOVX1Q6WCm06IcMu643kGq8drqwlrKh0/KWqOSZV0XSG7MurGNd/G
T4NEz9Hly3yNtimr5xbJV7zHGdHi47Vz2U/ZlAke+fuvUM6K7GaPyC/zbEr5
K73ceyVXxLfosZPzd7YpuaeF3jmcLkRsLF33aXVXm3J+4rXAkbtCxIUta62p
3qn95w23Ll9bnBOX8s85lS/EqgRl3u9eM+qcSOLiVmq4r+r3r+0Fds45LwoV
eTahQ0/1+GlTenyfrBfEzV17SrUrp67PCszYbcMFUT9pjcC1ny1KjgEz/pvi
eVHYC85yS3veoix8MbzC0m6XxGHPHvfNiyxKnXTJUjWpdVlU2pqz25sOFuVl
oYaueQZcEY+vVMtyMp9F2dtQcU57dl0UmJ6vef8GFqXvyDHD5g2+LRp1qLna
RX1/zcvuRUSnuCU69m1S6Z8lFuV68QE/vFbeEZembhrnN049P35tnbnMjzDh
93BA7cAuFiWm/cfseUaFidNFDs4u9MSi+L6p6Z1qZbhoW6tFpSza82ai5s6Y
++queJTe8ijfbnU/uMq5M0mNu2JIpolVI1JblWa20/mOZr8vimQ0Xy7/1qLc
ffSy8LL290TTJy+aD65gVTK7fjq7+ckDcc5l58tM+a1Ktikz9n6PuS8e1yr0
+lkdq7Jtdq4jxb48FGWUgKFn/7UqZwfvyTi51mPRvbrfXq/O6n70g+97y+On
4tTyDVNTtLIqQ6qO8rux4olYc16cfD5Y3U+s6BviFfZMWKdX6l1yqVU5OqJh
8KO5L0SHVDdc1022KkXTLrxY88Jz8e7hmSmnh5iVtxvGtAgKeiGUXVkGd31o
VT4vqu6ft1OEuD7h16+JilWp/X56cvuHl8LnR2zvMjvUer5p/Jd7rV6KddmC
A9cGm9X6U2pD+RIR4kjSGiWvbDYrtkofXExXXwr/HoN6rPAyK9u8J1zu3vSl
eBz7aXm7jDblRNPu37tFR4gpHfucHq369J8w5Ty8KUK06Ti9v7t6fKc/e8Ar
WZ1Xwv9Cu1v1sluUcXPOtCr8MUJUO3xhdcnPZqX5zYP1Zh+IEMfbFJ2g3T+1
bW/KSzuGRYghqevfXNjTprT62F/0DnslHqcau61VQ5vyKWp11IJ5r8Q/Xaa9
S6qen165L270qe4rMeX6gA9FBluUEXPC39698koED81sbtvCovzqtbfk05mv
ROG4Zl8u3bUp1baaokffihS9s7+54HlM3Q9HDA375Rsp4nYpHtdX25RYu/eN
Ou0ixQV3s8ejyWq/eynlnpgckSL/+ikPbp+wKIGrHzpXBEaKZ7u9Xdw3qP79
q4yq2TNS3JjcccOB2RblS6nPl1yyRIpP8z8NeFrOrgy55Veh/GyzyN2lyZsO
mezKjoNlO11qahYr3x3xHPXGpmTYVHtrhQxm8aVe2LseyazK+ZU7gr/tMYuQ
Sm16HHWq/V1oV9+ancziZrv+//a8Y1E65ykW8eJHpCj80PW/peFqf+d18Yi1
m0UsGv+xQOghu/Kj18scJytbRDrL7nxZl9qVQaXnp2iaxiKGruriMnCkXRkW
0CJi1QuzePL6QoYbLe1KTnOfNPOPmsWkKhkbXqhiVeY4847L2csiMjyNzNoo
n1WZ5ufS2DuVRZi6Hnh27YZD6dLxVt+idazi8YwSgdt3OZTe83fVCy1gFYPO
hN3d5uVQprSY0+7cb4u4db/18U19HEonpbZy85VFpK9x2LGwrkNJemPilmIX
1fWvKa4uzeNQsr1NXfzXdosol+n7uTZq/+AyfXDR6l4WkbpE3GP3mWr/3abE
y8C2VrHY7emAmIFWxePXidQ9k1nF14k3PMq2VPcL6yqWynfIImY/rDE5lbdZ
qVg7smabllYxwnk2x+mRZmVS+JhMp39axKHw9AvX93UqF4s3nVZrnVW8qPNg
TtW6TuVS5tkzq3pZhffqEsFncjmVNjUL1p0+wirmzNnev7raXzZfcudlFg+r
eF32ToHLz6xK0q5VYjt9sYoG92udf3rWqlT92XH1sxCryLr2QIdPG61KigLV
NzX3tgolY/Psq8xmpWf7n2t2/bSKlHvnVom4ZFZelk/6rJT69X5VZnabttOs
JJ/Z/H3aeVZRYOOtUqnm2JS9vbt29wi3iYHOxhv39bEprk9qxKXYZxNeazbt
Pv6PTRnSN2BlqJdNmD4MqtavgE2ZssB5qn9Xm7gbum9g5h/qfqrFsZ0fyttE
5bfLKhT0sihXi+452uCjTQxxuVRuS3+Lsrzhi/UBl2yi0dlMsekbWZSyGdYf
m73KJgo9mZd+aVGLoowck/TVIJvY1yL8+dukFuVJ6SKXomrYROY0B9Im22pX
3h+f//PeBbtYnqZeuZbT1f3izriKnXbbRZux/j1ydLMro72bF+i9yC4yRsR1
jq1mV9Z63MyTZZRdLByQc8T1rHYl1VHhfaidXWTYsq6lEmNT+njeSvfKzS5O
rtjeZP41mxK5KzTZ61x20Sz19Kqt1H4lpldwg6TfbOJCj1xld1eyKkubVx12
46BdhD2Zaa2YyapUvNJqe4GFdvE2X5XGh6ItypDJKfd4D7SLgEUzvPtfsyhP
3Q5WTCrsIiStye3SDrWfPvb1TPp8dnExW6yrrb9ZKVPuc6H0gerrpYzJFKru
L4b/O6/s6PUOsctFOVvto0PJfX1tQNOFDlG8f7i1z22HMrtLvxP9JzhEk2PB
H0N3O5Sgg5/dG/dxiMvJMwQXUP0v6LK17trmDjHknxXzWvdyKA8dJSuvqeYQ
V+pbyo5X+5Wnty/dv1bYIeZ28DuZM7tDSTVw2ce1aR3C4rzvdjrGrqQZMnR4
u3d2MWjH65dtrqr7wb3F43o8tQtzzwbnDpS2KbcCXPqmXuYQ43p3rlg9ldqv
LYzI222MQzR3y7piZqRVWdR9SNLH7Rzi1xDX/MuCrYqtQfWa49wc4vDVZZej
/K2Ke+e6F/ZkV7//iZsL15toVepEFI5I9sEuJvqMGDu5g1Up7dm+xNV7dpG6
42B3Zy+LcqaBRy+PWQ5hGnytaq06FqVXuP/KoL4OEfi00+x+uS1Ki1np3r5o
6BB1av1esOy9WekU4Nz/qphDOFetDrl626zcDi4w6VIKh/CsV/fo0j1m5dfo
HCvD7HaRv97lpznVfnXZwKX7S9+wiyzHNrR+O9SpjHp/vMLlUw5RssEHv2cN
nap/Vc8W3uMQTWfsKNu1pF053imiSo4eTlEuQ3DV2cntSpEFayy16jmFs47n
gGEvbUr7RXXvby3kFL3qNKiY5bRNiZo1ILhrcqeYVmznk4mr1P7o9YrG7g71
/bro/fv0GPX8e7rTf5abDrGm9ICRy1upx9cRUXjLQYe4uqjs3PzdrMr9WfXT
HfFwisKmIxsWqv3nzzuXR5pqOMWZmS6rrmazKuFbX3vWzeMU04eY9t+PtSj2
zPUfx3x1CK+6B8JOhKr9zIuBGSc8c4hqZ98fvab6l7t1vYmZgx3iaYYCN3zV
enH88PrIUpsdIu3ORyWPvjArngumHnPv5RRZezl3egeZldKOzjkyNXCKLsfK
TSq5St2flagaGe3qFFf/S9Fz0xiz0sW7bLP5aZ3iiOnXxEytHMqm+ydPv6sY
JdaVXRa2oaRD+dohRUSevFGiR9+v7aclU8+3tSu47U8SJZJ8mbq/7Au7otQJ
bVrL4hTfBzy69OCUXTmdseKRe1econS5Gd9ar7QrR/K7LBy51ynOiZ2vV422
K/77Zh746ucUq4sfHnOkhV1pUWzSx56TnCLD+JyjJ6n7h0EdR3Rt1CBKnCm+
Ka1vBZtyNzyqZmiBKBG122/vsvQ25XblHs7t35ziXpJjz7s6rIrL2Md3jz5y
in/CGx2zXbQqzqb1ptpPOEVEi0yf6my2KhsiJuSutMYpPLJbs3tNsyoVYsf2
DVJ5hb4Xrr70kUWJFHc6dK4TJa6P6Fau7TGLMvTjy/7e6s9bZ4htUbCfRcmT
on2fjl+donG1nE1qjVTr9ceV61+pvGGblkV4N7cocffbTm1wyik89z3xOlHC
omyanatEW3+naDd4W/sLySxKmXsdkqSZ6hSNGlfavrKPWcnao2jSS5WixO8n
fWa+nuJUivfsuSblgygxcVlAseiOTmVvUMsmvy9HiSs9e/X8UN6p/D56KeXF
E1Hia973A9OkdiqR39IHtd8VJe72u+z9LMKheM/Kayu8MkqU/dx2xcbTDiXQ
d9nSZtOihGWh+5aPqxxK9NoPpb37RQmvBVc8Go1V1zdsmPa5SZTImr34zAnf
1fPjjFr7fNNGi26xWZLbH9uUnmVu/Gz9MkrsjsnbIP9Jm3Ks8M0dNY5HiaKb
vXbmVv2vucw6t4FvlAg792LGK0+bcuBV27KNBkeJYV2L+vVT623WQEulqZmi
xecsl7bG9FLf79TWwyfMUeJx/gal19WzKluDd3xyPxklji8p4lte7XereI59
3nNxlBiSqmnF5d8syuocEas69o8Sqw522OKeUd1PzVx4xC86SsSY3i/vGW1W
/pnh/yTrhSihXB2VMre6H0oT0232wPVRwuNft6wLd5iV16NPlMgxMUqU7zC+
1bc5ZiWg4LpHT9pFiZ1tsgzo6mFX+k7Kvb7J0Wix8fWWNAE17crwbkMaP54S
LaIPV33YNp+6PxtxNl+XBtEi8J9pl/c+UPtnjxULKt2PFktd/fuXC1L3+zcq
d97uFy2UEY6N/husine7RxnGtI4WlWZ0XFtzrlof99zun+FZtEjxKzLDjCHq
+c21WtJNa6PFj8YnJitqP9npaL2QNh7Rosxbr0B7BYvSrvngPZNzRosuXd5s
GzvFrpQf3H2teetrMbbRzU2jx9mV+edrLov4EC2euxV9M+2JVengX/5xyRWv
RdHJtZsWHm9Xal5wDJlx4bXYmKXlgcM17MrekODGq1xjRJmMXya0uK2eX7on
qeF647XocChJ/oWLrYolb/LnjxrGiMrdTg3M3diiLB7wcODhIjFiYcyTQpVV
H19XbfQrskisSDbLvXdoG6cy1d0j4GGpWBEYt2vdYlenkjXL2nbfKsSKDq5r
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
Sf351jVadNTXqqQ5UCZTZfX9jJtfPPXmPlYlb/K4eXPV89OwG3duBl9Q/Szd
s+eIrXEid5M831zV/cHb42V691V5p+/truw/xKxstM4sle6KPN9msS1vnPyW
/DyPheMbbmnyUH6eR9aNDeeUscjP89i+u3/Q2jfy8zxaxGZpuO6H/DyM630v
Pzp8U34eRrVzZSpmfyU/D+P3/j5Jjr6Xnz9xuIXb1Yw34kRW/2dvsr2zK4dG
maYmL9hX/I72dU/ip/bHMXcnLrjqEJmfrasTnMKh1D/S5G6noJmixG6lTNOc
VuX5l+Wpyi+eIhYbfn+N59/v8ryBWSlS4dqKZzaHWLdhz4pDvur55dKIoqWf
R4np6Qq1mrrYqVTL91l0KBQrKnzblNKZ06Ek6zq7UfKwOPF8/7E5t9T995KY
kCcLH6t+N57jX+uyXbluXzXioDVO7MzZOOvSjXblbNryESPexonx60dEaZ9P
+OrkrX+uqe+H21dLsrwt1f20263+d++ofmXYd3WLen4osnlB36XmOFFo4LgG
GX5blGxDxYu9H+JE9NDgorPU479vCtuiSbfjxK4w7/w1q6r9y/2dpzpfOSWy
FR3fLn91s1K22Y6RmzwsIuRLWHC5mmZlsXOR9/OZ8vkPx4/e9f0+1y7a7hhU
bGldszLx0X82V7N83kOhru7j3qr5ifurZBvU1xs8LVPc6ExR4tqLhmf3VTMr
vx+O3nmiutrvec6zj1T5SsVWrT3V/qPizs5P/NTz84GyTTusUuuv57SkRzs1
U32f17BaiHo8eOz8+G1eIacye+DjkxfU42GiZwbz3o8O5d9RBfr5qsfDJ+8P
x/1uqPX09cQd2dX66/rJZ8mHrQ7FnKt2sswn4kSLcqmG9JniUK5VGdezRnCc
2Fw/6bEL7R3Kyu3lf1e9pPLm/Wq3Y69V2X+vfoFxO+NElsaFmgXNtSoRK49n
tR6PE1vLt/xRpbeaqww93Eo9fyxdn2p1n67y89Ir+4W9TvnMrFzy77so0l/1
c/v1hUmPmZUVmVyuPla//zRmn8Gpfc1K9da73VKo9fxs9LsNn9X+5OW8OQPO
q8eLZ1XfITN6yc8zd/NJ/eSo+n4ltfvWGvwkTqyP+uaZRD1f7FtQuPdR71Py
+bgtz1XeuPKUuFWj4Otf/5iVZ4WDF3adIJ834rX31ODbYyyixpP1yzM2NiuN
f2b3+r5Q/X1+zN8sWvM3i/ftybnl8zRSTLzY9Gv2KBE7Ysmr4arvJTeXmbGn
nHz+hO/PVJc7q/2wv8vZtqXV72ep1a1pj5zyeROj7u0a4p9LPf7/DSx1obz8
vH3Pnf28G/2Wz78avynH8iOpHcqbNc1uRuyZLbK7p/9eOaNVKRNry6McHSHe
ZD2WdnwO+byp2OIrPYLzWJWYiJ+Hek6fifrS8XlkkaOZX/xxfsXzPUSaO+WW
WcTGfJfXRy5S/clpnfTzskNELPssyqv9zaHyM7c+viifT2KeuT+kdbRDzM2x
cP7HZU5lY5GKA96dlM9bWP1kcq3Vx61i86DDn1euUl9vXulOIaEO0bfioJ81
tOeTPm/coMdz+fyEoytGjG2rZvv1+eFjvNV6uj80U5mnUSLp7Yi9O9X15Sd6
Tk1ZSD4vYdajrZPyqvnI6prJ8qlf3/bxtwFv1DwlyZYqd/qq+yuva+6ZVJ86
J724ukZNp1Jxcep7OdTjYXGWW8/XZ3Iqoae8l+dRj4cHA6uv8rA6FL+Vn9+8
3av2X48zXJx/1qG0Pvvl/ejDcaL+1u9f+qn7/Vpnji9Yp/qYvlvO8uVHqf1x
+j7r1qn1qtNG+0dbE4eS8eyDzWNVP/tvTFbpU4hVCdjUoPQUtV4+eWmpNUzd
zz5t1ufuVrUez+ifclTjyVZl3lp/ewu1/xz8eOjblqFmJTrpwTtF1fq46MbP
sVnU/baHI12JZWo9fTJhbr/wWWYlME+TjEmCZX2o/nLV2fKPh4nMb4a8XK6e
P5xFnlX2DjolthUZenVlLbOSNmB88+79LWL9rynN56vnnwJ77m//v/0XemU/
5Scb31RroH2slhV/DIH9q+tyk8zMH+8X2zeZ5ZEksPyYJv3vseaL/QazhB+J
AuuDk7ky7lL/nu+/Fm4b8vMKsDy23DW16SKwf+UXtuoRsD6p9ct4e3bJ8/28
t2Qvx7wH5r8OhTdGFUD5VZt2hAHLXx61ZRYORsD2+f2ZeTF339t/YDJeyc/y
dP+ZRnZpp0/A8sOPaZ0h0D27Kr/MZL8BbO8un82T9eH5ftezZgcrsiLtW6wk
JhcCy9edijUxHvvu2m95tEXLFdif5vOo6EsFln+/xPbuPSoI7B+u5WB8AKwv
jJK3bld58Hz/k/rzqyYB7bugN2HZ7TXP99fUHhfkeAtsD8+1/vat8vn+VNGd
Otd+v7d3CZRj1nV9ul9mrWjdS5D/zm1+1cz9dH/ade2P/969t3d1f3q0zP/x
fodOnW1PgOY3Q92zA+oe9PoNtp/bZ89mabnTO+H8wG1TVO8uQeyfn7/pbNwj
P8T+drPPLUr9NYj96lOeTlc7dwdh3rNVczP4eRD703Wm3XhaaIHYX/7CYeb6
b9KI/eQNgvm/I24D/edvr2z7BrH/letsg7kDC9J5R9D9TvtXHTc8uwexP+vs
VLkfF08j9lsJP+mYov8Qsb+qd3nK1DWy7+zVmY4asAP7D3O6P13QBMbHng26
q6QKEfu7V5YLq+e+QOxfBgD9YpHG
       "], {{{
          EdgeForm[], 
          GrayLevel[0.8], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
xNy6lsvdSrS0y+3lOlIWa/LGDVFX0mqiut8pFWUu9/tifMcrNkTI90fal3pW
9yTmzQ5+DvPg+qINPKcTbtgQ6/RGfl4PpxHv5vZYz3Xi+Us1xDpEWmvPoW1E
bT3XtvUz9nI+eSs1RL2YVzq4jKU9Z6/o/JfUHwcih6ahK0Kfjr4c/RA6X3S6
6Jb+5zz0UujN0aOje9pfdEAhdFH7OX6uyyB+ostA39zbchb6zkMcogc9yfno
kg8vhD4D3dmhzkffSR3RI6OX6eM0dB+d3R+8z8kuA731qYXQU6NfZ71cTbR6
Q6zDa4jWbIj1dk2PiZ2cT15Xt83KDbHOEa7SEGvvqi5re6cRZ45r729vL2R8
jYGNk9Db7eO2O8X1ok7o77q7HZ9qiD06+3bmAGRi1jz0fHv5Op7DesA6wPMI
fy1Gvehb8tjzIx8g71zrEJnljoaQJ5CVrm8IWQRZ4zrn9/ezj/H91OVox9Ef
HOX4cN+H/HJLQ8hYrOe3NYScwZp/p5+DHHq703j2DQ0h6yA3jXAZxG91Gdx/
o/ORv7apRRl/akxeqfBbtWdPtec94s9rCJl3pENk5FEOkQFHO0Smvtch89cD
DSGLMH+NaYg5DNlnSEPMr7znEw0x55L2SEM8G9nqUYfId3eLznU9HnMaMuBD
Lg/ZaqzLoP0edz7l3twQMiVtd5PflThyGPMacxjfJ2szcgfj8TeFvxdjXBL+
UYwxS/hnMeaMkqjcEHMZ9yETMUYZI9zPd8+6TrnMJazfxJkrkUuQC5g7kZ+I
b+TyKg0x11Ieecx9nxdD7mBeJKQs5sXPipG3se9jj7KJQ/YuHWoR/prG3PaP
rv23GPNWUdTQEPP+4mLkMYf9Vwx5B3mUeZR1oI9D2ou5kDK47v6GWKPoY9aM
v4tRFt827fRXMebdRrcX61VTQ9Sd9YB87mFNauG89V0v7mE+LbiurGm0BW1w
nPaTO3pveb5of+vFzhXtK9pP9G9joTBbNEd0ttrhA4WbZmpj5X0i/lPRx6Lf
NM7P0DhvUPqHin8k+kc0y/eXSnEd91RKcd9c0Reil0QTRU1KX6DwM1FaivBz
0ULRi74uKzWn1Utx/yJRrRRpxKulKHueqIX4+Y1RLvdNcFmTRXeJ7ha9Krpd
dIfoZdGtottEx+p9b1G4ht73SIVdRF1F/ZX+oMJ1lP6Kr+X+SS7jTtFbovtE
94veFI0W3Sua4mfeI3rd4Ui/8wuu31SnjRK95vKo6zSXQblvOJ9ynxb9qvY/
Ve2flOK9eee/RTNF74kuFB0oOkh0kcODRZeJeosOEV0i6inqJbrY+cQvEB3g
+88X7e/4QegBFC6jdrjU91HWINERon6iy0WHivqInhVdJ7peNKQx2vQo0dWi
o0XHiAa4Ltwz2GVw3WK/B+NpvMsYLjqjFm29kerwjfuANvtT9I7oXdF37m/a
/lvnE//L+bTR1x4H3P9VY/Qr8S89JogzziY6/rtohuht0R8Oed5P7hv6/DfR
dF/3g/ubvv3edSH+o9O459RavNt6WYzX5z0m6MvnHH+lIdYt1qhXHbJOdqrF
GvaX5qjJCu/yfP9yQ6xV3DNX9KxovGiew+dE8x0+z5wkmi2aQ1mid0UzmZMc
vid6vSHWM9axxU6bxfyi+n2g8EPmP5fxPvOl82e7vO81Vg/jbM51pKyJDbE2
U9c3GmJdZD2c1hBr4X0ui3WONeoDh0/6eYTII6nq8BlzveiFhli/WZ8nOGTt
eqkh1jOe96LTiD/TEPIH8sVUv98otxlp17udkCdGuL1G+BnjnU8eh3Xvu44N
jVG/j0QLfA/1+r4h3p+2/MEhz/yuIfqPvB+dRnv8LHrT7bG/+rqzyl0qi7n1
MdHjjTFHEz7RGPP0WNGT1MVpYz1Gx4geEv3i8t5qiO+AtIf9nT0ietTf26N+
xkznk/eT60WdvhW95np/I5rkeEXXfepxV22MkHFXFv9JQ+QljZHGGGxqjDai
/1o0RhrxxsZov49FV4nv6/ml1BhplPWr32O6aLtafBuL0yjrBff/jkp/W+G/
aYyPCe7/LzwmGIOLHPLdLHT+S+4/xhfnVL1UzuF6dku1/860hcbzsRrPOyq+
jubfi5W/k/h1Oe8Sv7P4LcVfJn4P8R3FXyl+N/EdxF8ufgfxrTh3Er+7+K3E
XyG+m/itxQ9Er5/FfHKc+L2yWLsHi987izV8iPhdxbcXP0D8PlnojIeK31P8
NuKvEt9DfHfx16BnyuKM7Grx24lfW/yF4jfIYr09RnxN/Bbiu4mvil9Z/C7i
l8+iL/YV3yqLcXW4+HWzmK+OEN86i3mrn/gm8auK3018WXxd/E7iS+J/V7vu
IL5B/G/itxdfz2LN3Uv80lmsO3uLXz+LNfxo8an4zcXvIX7ZLNalfcS3EL+K
+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
lePUe4jLZQyN8P2MF3CpYEhPcRnET3LaCL/3UN9PW1zt+PF+D94BHzWMY3yy
sa4zlzG35b5smMO2dBpx9i34i2GcsW9grDG2kAsO8f39Pa+AF8n94zDvst9g
LmYuP9btl/vhGOb65b51DnT/nO62zH2T8a6buoz93W+nOS/H9zLOjvfzwU6x
/oHVAsM11fJvrpcdVWw+hx9dbD4bJ8zPxu+zLP225e0xlqnYp7BnmWI5DZmV
dR8Z/knLHuwPcrsDwsctY4zx/XOchuw+0+WxT/nQZbBfeN/5Yy3jPeJykU8e
cJ0aPG8yFw7mLETfy6NJ2KZiC4r9Zm47Sxw72VaeR7Ehw04RmzJsHwfp/l/K
YSO2nudpbMVae57O7cmIN3rO5dlFP5+86W4z6lfyHMp1VT+H+bjsOZq8itOI
Y9+2rtcK+uoLvctuSbQB+5whltHecT/847aebdl3ptvpL+cTz+0hnrFs97bv
/93t+Lblt+mO/+q+n25Zco77ARkO+Q+ZDvltnMtFdvvEsuG/rsscy53vuX65
fQZ6h1zXwLj5yP1MWewL2R/e5nLRNeQ6BkL0FrlOBB1JrtcYXmzWa1zvsob5
fsq+2nHG1FDHn/N9lPWKn8l+Fx0Gugx0WZvVQjeFPor9PfuPXLdxp9/hBdeF
e151GVyHreI6Xrexf23ncZbbYRMHZ506DVtmbJqJY9OM7S5x7KSxpcZWENwv
NrTY9ILxbmpsxny38FjGtpprsS/Mba+5P7fzxn4X223sdokP5bxQY+yxJGQ+
7ILJw1Yb+2/uB7eMfTL2wMiG2AZzHXbhlLecvzHkZmRecMNg6y6wbAJ28QzL
JWc5fojnJPClYAXB9IGhQ84429d19305JpIwx1ASsmYiv4DdO6+x2U8Hzz7A
zz+/sdkunPoh01zs63r7+eBVkXcucV4vpxEHZ580NmPxq43NGP2Kv2Pen30F
+wz6h73Elu6DDo7TJ1s5Tptt63tyW2riYAWYg7C1xpaaPcYOju/kOJhtZDWw
CWC82f/g02BZP599D33F3ob9xKouY3v3a2c/bxWnbefx0dH14zlDNCZ+Kwce
Iq8Ltu5gJZBxwZmTB24i93PB/ArOYaDu/akcMhBpzMFXKe1CjbFHkrCxp82Y
F8F5gvcER4z8tNhl4fuBOZ05FZmJ+fdfr23Mv8SRq/7xPbOdTxyfA8zL3A+m
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
GYCvAfwM4JMAXwareD18wmsLPjDwWYC/AvbT7KurldhX/+k4e0H2hGXRTPaK
im+g8D3RteI3rEdb0+b4uAHLO4a5shK2ofhIx1Z0mK57ABm9HnajpP1ZjnN7
zu9/L8eYYGwwRtFl4zOZdR7bRPzN5raKhKwh+AHm/xfb1mNMPOZ1B1kcmRw/
Lw/qg1qsht0sibZ9ohrr1L1K/0vpGyp9MX6Bxd+s8GTRMtXwMzxLdJ34jewf
4nGvffiOebAaPmXw6fNQNfywICsjM+NThvH6qNdf9hT3c009fJPglwSfJJf5
/ZBxsF340W3xQhL+Y+8T/2E5/meLLfvzSfhfGq30oc5fphK6HHQ6NfqZCSaJ
PnjXbd677v28+5KzB/xw5mcRhI2VOP9hnS5WQje02OUiS3Fei2zF+dBvvo6z
cP7pwN4L3Sv/PGJfzt6etZO9PjZMP3i+H2b/zPhpPt/Xsgfl3Br/ePk5NiHr
xtX27YyPZ/aizOPsTS/0M1lPLnLZv/p6vju+v9uz0FnMqYXvFvzC4BPmoyT6
i347LQv/nY/qmlOzONd8RPyRWehLRiJX1MPfzzEKH8rC99oXSj8lCz3dw+JP
zEKvhX7rdPEDxT8m/oQszhseYE3Xc0eyRqisk7PQ2T3EepqF36IVVP5XWfgJ
WlH8oix8G7VkDhR/Pt+s+LniL2DuEj9P/IXMXcz/WfhLWlb8+/XwY3SUwoVZ
+E5aTvwXWfhOWl7811n4NlpJ/BlZ6NzQvX1QD79HRyv8Jgs/SiuL/z4Ln0er
0HdZ6LvQe12YxRnwePFnZXHePFb8seJPET9a/DFZ+HYdJf448aeKv7cW+/ej
vK8/Ogud4Ei3/4nWh81Uu41Su01UnS7OQgf6fC10Akda53BRFj6Vn6uFDuEY
7/3RAxxt/cAPWfhpWrUeOgT0d+hx0S/tbz3MOeKvFf+U+HPFXyd+nPjzxF8v
/mnxZ2fhz/VJ8ceLP038feIfyMLP3me10G8cbF0QuqwDrL9C57Of9TzoSQ60
jgv9ST/rNNAjHWT9yWdZ+JNaRnVekIX/qaXF/5iF76rV6Gvxp4tvIX4O9UHG
YD7Mwo9UkXUmC19SjZ638anQFz4LP1tV8TOz8ClVQabIwvfwn8haWfiR+lv8
K1n4kfqL8ZyFH6qyrn8nC/9UJfEPZqFnRt88ux4+G/p5LgXTfwT6Ir4l8X0U
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
q5NYVxgj5ycxF9Cut6l+21TjWz4zibWNdezwJPS86EFPEN+hGvpd5ir2XMxh
xyWhF0Yn2i8JHSu61aOT0B1f7XmRfqVP2YPsUo3vkX3ortX4lhuTsGHFHgv7
VkLss0pJ2Mti24T9DfLQBfWw3UF+upAzymrYYDEPFZOw48QGqyEJe1lstrDD
xe4L+y9sPEnDnmtcNa7FbitJwg6V/m6RhL0m4wD7XGzAlvxDJQmbXcpiz75H
NeYfZO/dqzH/sP/arRrzTyt/b3xra/l7ztdk9sKsvfQfehx0ONjw8q7Yc1WT
sBvm2dgLY9OFbRd9g+zBWVU5CTtj8r7XGB6exr+0sDtHvjm3Hrao2H5h4/OM
rmlMQzYcJ74hDfn0SfHFNOTc8eJLaciqL4tP0rA1e158OQ0Z8yXx1TTkxzni
l0tj7NxUj774U+EEpVfSkDdniV82jTG7k8LfJP8sEP+q0lukYdc2Q/xSaYyp
qeKzNMbgjeIPF7+q+GvF9xLfknVCfC2NcTdFfCr+UMa4wp+bYr15S+n1NMbj
jgp/Vfp88TuL/138Z4wRXbNMGt/Wdgp/aop16F+9w9LYTKPPFy1P2yr8SNe3
TOMbeoU9Nu2ksKvSfmyKtq5oo9U3jfRFun7VNL6/Lgp/aApbuVbiZ4qfiFyP
Dbf4l5ERxL8r/iX2HOLfF/+a+AaVuRrzeT3mf8bPonrISHz7X9RDNuN7X0io
a39pirW2pHvXVHys0j9TfVYWPxBZU/weaXxnF4nfPY1v8ULxu6XxDWEv92Q1
7J8vUXq3NMbdpeL3TOObuED8rml8f/PFr4SNr/iF4ldJY04qqg4rYufK9y5+
ddYU9lziVxB/O+dHur63+BV0/TXie4pfXvww8QeLX058Te/0RBo2kkuJfzIN
m6kWKmdsGv+jZ+7E7of5M1H640qfVo/5FdwFc2yqex9Lwz5rOfHPpKH7ZT7G
1p85GcPA0WnYWLFuofdDniNkfoVHf4a8g7zEPA0WZYLXAbAorAU/qf43pvHP
F/bB9D+2ez8r/aY0/pfBnAqOgnn1R6XfkMY/a8CZYPd4jsIflD4ijX9wsBaB
sXnOawt4jBe8LoGbYm1CL4UdDzY8/+neUWn42aPvu1q2XFrv+FQaetEmtdXT
4t/Ws67Q9fuIb1L6EPEHpCEHVXT9mDRsA4cq/cA05Kb5ddvrKxyu9EOVvpLS
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
/wEixO09
             "]], 
            PolygonBox[CompressedData["
1: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
c4d5d2mnOK7hoeWd3UMqUpSJlIX+28paVMejbsc16dzLo8ib+A1cu9653rWu
YfeKd4x3i3vGtalORl2Ma9S1q45H3Y5r+JNO7mjv5pda2UvyBPIC7in3ijKP
so575j+d6FDUnTzfylqWh5F3cU27luWJ5IVc064deSZ5JdeQPJS8lDLC2+BF
N3eGd8UXpA11cyd5F33pHu3mjvNu+xa63Q3PJq/2dStr7XroRTpZc/Im35N2
Xic8yo/QM3ofudZJWwZ6c+hVoM8HfoaeWf4KfPpOeKMfoM/vhEdSNvoO+txO
ZCRljW+hz+lE5lCX8jP0RZ3oVNRF/Ah9QSc6CWXLX6Av7kTGVHb5upu1pQyj
LPRNN2tXmWhZ6C2gV23HjrIa6+MHebFWdEpLk7+Z+gnyznONMIdreg8o64B/
rLztWgL2qaMP34G9tGOjz/5Eedi1DuwL3uqGx5S3/Io+FgFfn7Rl3S/t6MOt
u1OjX19D/fZg2lS/rv7dvJ0b/fzy1N+K+qtT9yJgKehNoVcCPxdYEnoT6FHg
5wBLQG8MvaL71zWpPM/vKcDe8rfkb6m+APrCds5SdYrqEj1TV2V+viftvVZ0
hktAfySv3IqObyHPFvlrvy+wjLK3Z1Y7cseC8rNACT4dsLz8sjIm+LzAcuBT
KWODz+P3kBfVzkjbi0AvIC+qPsCzDZhP+VZ+17MaWFjeSnlC3gSYX3lVftuz
GBjp2lR+AJ/BPu1b/tmz2D7tG2i5foHV5fXo/z76XxR6DWVb6PuhF4NeU1kc
+gHoxaG3BD+vm7N1A89s8MuYv6mgf4TeivwLutkbG0FvrQ0DehrPAc988Msp
Py30T9CX9tKmbU1O2pzaX+Dlzmzsp6MpPw+/r3mW0/+qylbQ90AvDL2Kew36
buiR0CvYl3Pm3HnfgE/rHDlXwMrOH+Xv8ltCz628R1+XAb+U+S/+B8fuf1rE
9pXPKDsTsDT45N5J3k3trL0ZKP9UJ2vwG9bYI53sGffOcrQ/nbYoYLx+1u6M
lH+6kzX8LWUe7WQPuZe+U8fWyR50L36tDqGTNexaXob2pqGtaYFxaG9R6K8Z
+zdAD3rZKnn2OS70ItBfDU+Zbj97cWr6f6yTPbmB8wX9uLwE9Pf08bJ8ifeJ
8gX5s5P/orwJadtBzwX9irwN9KJ+D+UP8JmBxV1PwLjgswIL0f8H9P0hMET/
S7l2utGRzOF+db0B44HPBmwPPjftv0r767SzV2eFfr6TPetZMBv0C52cCV8x
xofku9y/dc6ymch/ppMzbSn6n4C5mBCo+zmrZyb/2U7ObM/GWaCf6+SMXNL1
DowPPns7vIFr1LUpj7CFsjJp37eiA9q8zJ3uXa7MtBj0h/w+14pNawx5C5H2
jvei/0f9DWO5vrG3LkreB+Q924rNTHvoxeRd0thLFy9zR3o3alNaBPp9fp9p
xUa1K+2PJO1d95frn/pzUncuYHzq/8CcvOedS95n6t6r5M0N/IH8dcrwHPIa
2nzWLcMzyCuoI9U+7FhvcE314y9xM/gtjf1R++pNg0nTf0L7t7LKCY19VHup
+ImNfXQX2l6QPt72fHD/QU8IDIFPAewMvgD5b3XiB6J91bonNfZv7eHiJzf2
TO2b4qc09nLtvzcOZkzae3egvXlp73XaW4/2NlM+Hswca2/ekfz5yH+D/PXJ
3wl6fug3Pd+gr+Lbb6edXH8P0sYl/2rS5gT/rRV8e/K3aSXNsle4Zjupsw30
Jd3wApspc4BfIY/aiR1V3DLmmTY++deSNj/4MPq/Bnw0+dtpr/E7luEB5f3U
MW1WhqeRl1Gn4dnqmetZ6xm7QRkeU95SHdaGZXgkeSN1XhuV4ZHkjZSxNy5z
h3t3K8NvUoZHkjdSZ7QD9HXOmfwQaUuV4fnk9dTRLMD8PslefwoomN951BeA
3wv8RtlxqHulPBJlf2ll7q4ibY5O5nBbz2D3sHyfMlk338C5/7WVupYxzzbG
62aOnJsB5mv9MjyzvLI6nR2hb3DNiaujrzKW+4Bh/cy1/8n/4pwrW1xH2kKd
yBjO/TWeSZ18A/Ns07YsMz/tjR2e/zy8H95jevKf7IQHUfbS5qGtQxlM3ksb
qbZRebC6zB3j3bIxee0yd753/fLQVZk737t+A+gRZc5cz9rNoP/Uj2+CPiP6
jrTK3Pne9cuQ3yK/dq8CS5Lf0WYEPi+wtHQZHkLeYRTl+2V4CHmHdaG7ZXgS
eZFVoMsyPJC8z1qd2I7leeR1tCEXZfa0e3kxvzH/dRbviHa+6ez9+Obo86Tv
07va4z0XyTsF/B11vO3wCyeDj1vmjvjf3UDaXP3G96eI7045grnuRUf8JeWH
l5EZlRX95vP340uljktd12AZGVPZcmHXFHVnlQdrZ8/+5lrzDmtnTQ5Qfnbv
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
H3h94fX5Hl4lXkVZ0TNJf2ZjooyNMiZ0JcdWJ9Z19lbiWZWdpiujG1OGMn7r
ZX1RBxLvNUcdOeTVxt4ye52z++nGPukacC2o37d9YziM5TCmYaCKP6qyqnvc
+FT9ea8i6+rG/9f42GvArwXeKBNvZt+vDiR+Tv50JP933W7sl9cyhl/4/n/T
37YKP7oQ+et0Y4/Uf/dy6l7R+Ov+UiVWdUbKP0zdB7Thg08J3A4+C3XmlO8E
3gKfGZgD/EngzTr6mJ9of6ZudMHq28ah3cW60RU/2U+8w/zA3eAv9BNrsQRw
P/ht/fRVADeA3wMsBv5X4Fbwk/QxLOIzqu/o2f3EinwL/Bf6gn58bX8DPnfv
1eHD5MdOA5+pzrccC7zRfF9jlfWZ7Vbxt3aur2nij72PJuB32W50Mfo3O1dX
Nv7HnueTqhPoRveif7J5VzX+18aoGaumD2+rig+uvrjGsLWr+PTq2zsTMFQl
HtJv+RrwbhkfXn159eHteNdU8Y30zDKe1v3h2eUZ9FqzHzyLPJNfb+67P9LO
St3ofpZnfv5dZE5WqRP/uyp9rQY8UuZ+X5b8KYCj1bfXiU3xm/ntCujNmniV
p6CfqeO7p7+k8c2/UWd18lYDHvEsroKv2qynAcqsMZQyj0L/SP7iQ/nGfmvt
m+sPRiet/dP43y3I2xx4ph8dr7re9Rv751CdPMf0NPRPVdaSbd4L/XOVu9w1
7FoeRvk1hzKGx6CH17l7TXsc+vxeYsqMJTNuWvv7xIOxuchfqfNX9z/JYOz1
6rDVZX/X2Mu055tnHe312tPM+7axL6kDVxeuTUd7ujYBbQNjGv9P/UHFd2n8
P7VBaItYufE/0B9BfKXGP0B/AfFRjT+BOnx1+QcOxr9Vf1dxddz6m7br8EbO
qfHU2pS0Lc0IVP3oYNXFqrP9vkw848GUPaiJT/ye/PmGcod4l3yiTrTIHXOl
dzF0i7wh4Pp+eBJ5kzZwk7rzKrhlbtS+XeUssM07+9nD7mXbvBr6M20GRc6w
a/qJn3P9y+PJ67nH3euWua6fO867biLg5n7shR8Njw1C+6U2Gm01HzX2Q+PZ
jM+U55P3M97N+Mpdm/g247mMHdy9iYczfvOQocyJ8Z3Gax4GfuhQ4kv1bz5g
KDydvJ3xp+ZZx3hP40UPHEoZ/Z+NRz18KG0Y72k82JHgRwwlHtD4QHHLGK9q
fJ5jcYzG4xnPJG+6QxNPZfyVsX+eqZ6txluZN7qJhzI+StwyxmcZf+q3dUz/
i1+twput2rwHsESVtaFNrGzWj7H4iwDP9WMP03dFG6q2VO2V1WB8RvQdkSeR
N1m50d+qLzXWYoFGvyoPJy+3ZaP/Vac6TdRZ/9PPaj/S90QbtLZoz0TPxqLR
z2t/0xasz5G+R9qXtF3rE6RvkPY8fXdKYPEq9iJ9J/Qp0bdEe6q+JcpQylK7
1bkbvNOudK7r3G3eeVe5FurcfXMBV9eRr2Zk7VXGF1SxV/4Z/Efa3KOKPLUU
9L+Mz2nkqS0be+Y5jTyzHvhcxn808tkC4JMCh1axH+obrs+QvkPe+d79Lzf6
cW1y6oLUCRUjooNWF63OW923+m7nUp24unHPeM/6vRv7jDKJssnljb1E+4q+
W7s09hptzNqa52n8b7SnnMLcjwamqmI/2RF8Wd/cqBJveGyzP+XfjK87Zihp
8lvGKx7X+Pd7l/l+xQ7D0obvVdiGbS3XvI9hH/a1Q/O+hfGvRw+lzWHyh8Dt
5N3RxJ95Hyw0lDcjvC+MFz1qKHXkr7auYzfQfiD/Mi1pJ1H35CaezPgy8VOa
+LqZoN/2bYJhea9kNr8pc7Nicz4an3PaUGRE73ftWeZN09ivtGeJd5r4Bu1P
jtU+7Vv7kv91ysa+pQypLKnNS9uX8RHWdQyORfuZY/E/+9/13TeGwdgFffiN
j3csxljJXxj/I24MmvyD8UHi8rTyO+90E1NhLMWBnehmTRNXR6v9zrXgf/a/
GxNnbJw6AvmHR+v4jutD3h4ReUFZVRn4+Tpr3rUvzyHvIb82tpFPX234tReL
xMu9VUV/YGxKSf3V6/B7dxaJ332mirz7VpGYtPerxAdOVmTPGf+ivnhb7WNl
fOF8v+aP5P2pSPymaeb9txf7q/Gd5tmG8YXuOfeedXzvRv+rhW2rF/uSMpOy
05feUVV4VHnV16G/qMK/evdN1fDL8hezgs8GPNHwH7MMJe3xhh+aeShpjzX8
krz3TA3/JD8lPnPDL/3Q3G+TAHc197F33cTN/al8eniRGOBrqvDM8s4/F+H/
nUPn0pjoE/uRD8x7Xpmxyn/yv31V5P5UfhR/HPi4Ck8obzhlkfhW9TsnFHmP
4uYq8a/mTVUkPkqZS9lrjjK+kb6f8zNnyS+DeU9HGURZZIoyvpK+t2OeMvz/
v6fz02Dq+N6OMo2yzZRlfDU9Yz1rLeN7O/LQ8tK+EfRtP/y/forqao3t1Aag
LcCYoc6IvIehLKbPyvV13q/5nLa+GMx7NMrQytKfDea9Gt+vEbeM79sYPz1D
kTvA+Gjfx5i+SJrx1L5fMV2RNN/L8Iz3rJ+7SLyy/qNT8V9e78WeoAysLGya
ec6Zc/dJL/Z9bQzaGvQB7Y9I/PU8tDVvkXht46Ft2zTjsfUR0FdAn89qROLJ
pi0yJt/TMJ5rmiJp/x9fNnWRNOO7nGPn+rVe7Bf6g+zWzZ5wbxgP57e2jvFo
3keTlSljWeWHBfgWCzbygvq6G4q8afNYc9/qy6Etfcs68rO+isaMP9jcv/qS
aDvfqk68wGbq0LuJd/Q+3qSxBXu2K2/rC6z+9X7wueroMrUXPFJnj7pX3yjC
n6q/UXeg7X5z5Rflo1Z4sP/2o9/Sb1ZfiS3q8K9vFjmDbmr4XdsyTX72njq6
OWPYWyPCv75Q5IyTP3WPuddeaPhZY/6VpY5q+jMm3dh031xR3yj/1R8MTyV/
fmodWVYbw291eBp5m37Dn3kmeDY458rXyvPKXuPxn9ag/IOkTT2UNxzUb7qn
3dtPNPy7/Lz42Ib/9szy7DJmT/2kPJ+8n29YqF+9D/jHUGL+ld/Vp6mr0fdh
0zr6yH3cC8CltL2J90UrPj531nnv4RLzisQbewd4Fxgfbbys8bPXNvo240nV
h45sbJ/r1dGXLtTYLteto39duLElrl9HX7tIYzvdoE586fVF1qDxpOqfLy8S
U31/FXlUXcnfG/nReFb7to7xqMqX5vmf/e/qp88mb1fg9irypme/c+xcq39e
rLEFblRHv7h4Y7vcuI7+edHG1rlhnXjg02nrjCLvFfh+gfiZRd5rMJ7ztCJl
jBf2TR35+9Oa8874TnXvljHe03hu5/ayIu9j+D7PWUXG7Ps7vgdh26b5Xo/x
vXcUuXONxzVeWt29acb7Gr9srLhpxk97B3sXm2Y8s+9x2Jdz6nsd3vHe9X5j
3/PwvS/PVnW2vt/lnerdunYvvhzy1PLW+nRcU+d9oyWou2SR95DkmeWdFy0S
fz5nnXcY9BnWX8X3uBYjb/Ei7yMZr25Z03yfy/c05i/CY2/Q1NfXRR7msTp7
xL2iTkPdhjYRbSPakB+u856V73FoP/E9Lu+Tqznvzu3F1uyd691rGd+7eqjO
u0rLFKnv+02Ozf/ke02+9+R/U0bwfSjf3/Asn6/I+x2+F7Y5+BZF3gPzDvAu
WKEX3y/fIziEvEOLvE/gewTaRkzzfQLfF9usSBu+N+YZ5lmmzlT9kGeeZ586
VvVHxmB91skZ61nr+2GOXZ2Q71u5x9xr+gs8W2ePudfUEcvvuSfdm+qUn6vz
HsJhRXgS3zvwPTPnzjH53pk8nrye/KexyL4R4FsB2kBs3zd7lL+1Ra/TnOe+
DSD/slc/b3b4dodv4igPqJ9Wd+8Z80qdN2J8K8Yz3bNdfbe2FW0qjk/9tbYa
bTov1OGJbFv78Wp19MnaerQRvVhHP64tSRvBy3X03dqOtDG9VCem3NhydZTW
f6JOrLIxy13ug6fq6MqMMe6NyHsPa3tXF3nPwfcU1yqS5vsPvg+xbhEZ0fcb
PEM9S9cs8r6b772JW8f3F30fwras43sS6uu8e5WJ1I+p/9R3Tf9G32o0Rt5Y
ed90c37V5+qr5p2s/GuMurHqfoO16vhgjOqFx5bX9o0b37rRfmq+7zn41oRr
0PcwfM/OtavM63tz8tzy3urk1c37Xo1r3T3p+zbaOPdgPz3Qje3TeHnb1qft
tjpnrGftbkXi8Y33d23o03ZHHR+OV3qxOWh7MB59D8ruWSQ+XZ+OV3uxIWhL
8H2A3YuUMV7deHbL7lUk3t07wbvhf/+pHx5NXk0du7p23xNwreijd0udeJbJ
y4zBsfh+4AjqjlPkvUDfH6yLpPmeoDoDdQem+R6h7wta9ndF3ivUxqGtwzZt
2/cMzRu3yHuFvnc4XhGbj+8fykPLS/sf/a/a3LS96aN9Y533Dq1rHd9HVJ+v
LCyPpX7D+1m/GG087h/fP3CunSPfT5AHlBfUhqAtwfflji8iA/h+iO8X7F3k
zvc9BN8P0XZsGd+fk8eT13MNqn/3TvZu1obk/vN9Et8+9H1C3/vw/Q9x2/D9
EXlGecf/vZnYz/sn4tbxPRPfa/Es9Mzx/RV5RnlH17T2Ce9Y71ptRO5n38fy
7Tzf0PN9KmUYZRnTfC/LO9q7WpuY+12eRt5G/07ftvR9Kd/rG92cR753ZVum
+d6Ud753vzYxzwffU3BtOUe+7yA//0YvNjBtYfLrn/ayx9xr/wfIeYQT
             "]], 
            PolygonBox[CompressedData["
1:eJwlzj0rhmEYxvGT8vYoUpLFU8qgLJRJvoBBREyiTCY+gMJAIspg81ZkMFhI
SkLEI0TsDN4nSllQ/O4M/+77f1zHeV1nZe9AW392RJQhB49FEU0FEVUoyYvY
5gdI5Ue0Fka8+97zcfSkIgb1+vQ2+BNaeQ3KZTt8Ckd6Y2ZncyMyfAIrslu9
Ifed8pOi//eSd5N+MneJTXOr/NvZFf/GpOxOb9jsNL/GtmxN71fvhp9jXbYk
+5Rd8GN0mdmVDTn74ofo9Z/lvjf7HfE5lMqaZQ1m5/kzOngtKmS7/Awjyf6p
/52S3V7RrVPNM872+QLKeIu80ewif0Enr0NatseXMeO/wX1p/Q8+inY+oNfl
bJ0/oJ4X48fOW/wPVa5Eyw==
             "]]}]}, {}, {}, {}, {}}, {{}, {
          Directive[{
            Opacity[0.3], 
            GrayLevel[0]}], 
          LineBox[{3836, 3737, 3811, 3765, 3764, 3669, 3670, 3025, 3353, 3024,
            3352, 3023, 3351, 3022, 3350, 3021, 3349, 3020, 3014, 3013, 3345, 
           3012, 3344, 3011, 3343, 3010, 3342, 3009, 3005, 3004, 3002, 3339, 
           3625, 3668, 3640, 3780, 3723, 3779, 3778, 3846}, VertexColors -> 
           None], 
          LineBox[CompressedData["
1:eJwV0TkvA3AAxuG/I1FXu2DAghEjIq4gergG6mjLoCPFgME1OWtzH9+A7yFh
8GGskorH8Muzv29bfntuqyyEsKVSNIRv/ehd/SrVhjBUH8Ivx1lZF8IYyznK
CqZYwySrmWAV44xwllHOMMYFNjHNBs6zkTm2MstmZtjCPNu5xg4W2M0NdnKd
XdxjH3fZwx328pgjPOIwDznEAw5wn4O84jSLnOIlJ3nBFM+Z5BkTPOUETxjn
C1f5zBU+McdHZvnADO+5zDsu8ZaLvGGa11zgGzf5ysL/vv741IeK+lIkFsIf
BOIwmQ==
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0DcvxHEAgOGfUaJ8Bl8AIzdpq7pKlDuTxP9OCSbcqYlzZleZ9YVJFzYM
utXnEM/w5tnfhnhyIKoKIYzrry6EvH51rjOl9KCsHhVTc00IUW0IjZxgE+cZ
4xxbOMtWZtjFNDu5xA4uso0LbOc2+5ljH7fYyyy7ucke7nGMu0ywwjjLHGWJ
IyxyiAUO85QzPOE0jznFI07ykCkeMOI+k7znBu+4zluu8YarvOYKr7jMS6Z5
wQx/WOE3y/xiiZ8s8oMFvjPPN+7wlYNevyinZz2puj6Ef0RnQPc=
           "], 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0TtPk1EcwOFDKAUTwR28fgfxAyAyeqkDziQiYmzjACqgKxERHE10gLaA
E70hVgfQwQuw4HUSWmcFFKmxkzwdfnn+J3nzvuec90RPIhavCyE81P+WEB7r
iW6oqG5dUuygZ5pDuMinvMY59nOWVznDPqZ5hSleZpK9LHKYzznERd7mM97i
Am+ywAHmOcg1TnKVE1zhA77nON/xPt/yHt9wjGWmWWKKm0xyg1P8xmluMcef
zPAHs/zLF6zwJZf0z7zMKl/xtdZV744+MMKPbOAnRvmZjfzCr9pWq/UO2/iL
h/mbR7jLo/zDY9zjcVZqe6q927c7rM8qaj7Nc2o0d/K8msxneEEHzF21f6h5
nVRJ1zWijNpVVlx3lNUpfVdCd5VTXqN6pGrtDCoociiEfTdDW7o=
           "], 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0DkyA2AUwPFn0iCWM8R6CadQpJVxALlAggtkxt4xo4ilDQ1BYWmMJTRi
aQiTDp1IMH4p/vN7X/PNvJeazI5PdUREWtEfsdoXsaaCWjrXmGZ7Ig56I2ZY
5jT3meMe87zlCm+4zAqXeM1FXnGBl5zjBef5xm2+cos1bvKFRT5zg5/c5QdL
fOcOv1jmsZrmE7Z4yjPdqdMOVXbxnt18YJKPfGr/o5R3gwP85iCbHGrfg8P8
4Qh/Oco/ZjihQx2prnUl3PQfcBs+VA==
           "], VertexColors -> None], 
          LineBox[{3841, 3743, 3813, 3770, 3769, 3673, 3674, 3223, 3539, 3224,
            3562, 3246, 3561, 3245, 3560, 3244, 3559, 3242, 3558, 3243, 3572, 
           3256, 3571, 3255, 3570, 3253, 3569, 3254, 3260, 3261, 3270, 3580, 
           3271, 3272, 3293, 3596, 3294, 3597, 3295, 3598, 3296, 3599, 3297, 
           3678, 3677, 3771, 3772, 3814, 3744, 3842}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0ttPDnAcx/FfF7HV85CyRTo9dHhKOlOpyQWzxdbBRhcdTKhuiv6K1r/i
L7C25IoOV4p0IHIsnRwiauN18d7r+7n/xm4Ptg0khBAeKvFwCNuHQhjWisY1
oieq0XXFlRQN4VFyCBGOckxR92OO66lS7WdM4wSPcpJTeq4Me4YnOMtMvmAW
XzKbc3yleeXYC8zlImNc4km+5im+YR6X+VbvlG+vsIDvWcgP/KhPituf+UVF
7lWe5hqL+ZWl3OQZrrOEG6zgN5Zzi2XcZhW/s5I/eJY/Wc0dnuMv1vA367jL
Wv7hef5lA/dYz31eZEIkhEb+sy8w2JeZyEs8wGuM8iqT2cQI25jGVqayhSls
5hG28zhvMp03eIy3GGM3c9nFHHYyix3MZj+L2cci9jLOeyzkXRbwDvPYw3wO
sZoPWMX7rOQgK3jFz9VrWlM66E//A5MIVXw=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0Lkyw1EUwOHzj1RGrLGVXoEaUUqiMUqVzjLUaNGq8A7Cg2QhgxaFJbFF
K03Cp/jmd87c4t65U2s7y9tJRKzQOxBx0x9xyzF3rNLJRJT7Irpa0V+tajir
aaJXmtJrrfPEoP1Zh/RFh/VVR7ShWW3qqL7pmL7ruH7ohH7qpH5p6/9uZu2L
hHfMaZ7EPK8FUuacFukxL+gSafOG3rPOLudM88Ame5SY4ZEt9rngkgNO+KHF
Iae0+eaIMzL+8g8U8DG6
           "], VertexColors -> None], 
          
          LineBox[{3851, 3826, 3746, 3626, 3796, 3681, 3698, 3747, 3627, 3797,
            3682, 3699, 3748, 3628, 3798, 3683, 3700, 3749, 3629, 3799, 3684, 
           3701, 3750, 3630, 3800, 3685, 3702, 3751, 3631, 3801, 3686, 3703, 
           3752, 3632, 3802, 3687, 3704, 3753, 3633, 3803, 3688, 3775, 3816, 
           3711, 3728, 3827, 3817, 3712, 3729, 3828, 3818, 3713, 3730, 3829, 
           3819, 3714, 3731, 3830, 3820, 3715, 3732, 3852}, VertexColors -> 
           None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
Z/6qvsnP55WFGiSY8nMb3rGoc1P4uUu1VduyQn5/KX1QWzTvID9/mpLct0qI
n6urKL1d9pDfd8kJcYmqW/h5eHZU/XmS31/bvjX7+Xvx84nqMsv8JvPz7au3
jntxn993Q+85er5a/Hzb/SUmo2sYfDzV64WM604GMknxvdpnhrmDT+LH1I9d
YGy0rM9U+lv/rLUq6rNFF6Re5Q1pNQ77S0Xv9I7D7E5MkuZ6BAQN81k7syZ+
PNkJwTPTv7/THOZq757oVPZ3ILPGyqGSNeyvbwtdyOUeHWCPv6Zhc32Yz5kw
MXKVYAd29xuaSGwc5g0h5ge9AtqxME55SdSXYX+FT3u8uFisHb+MRCfNiRvm
VKh4ywK1NoSV63dtNxnmZ3yXF0StbUWhlGljpfAwD5t91jHRpAUysYV5tc/b
4V3Vamf2KB8LLntoqtVxkWggs3TWOiYEJieP20Hk4lmSpVl8KRdb1q2qX6zA
REzFxZj2HTkQuTNK6EceF8/njB6zUYLuP+Xi/J82ZCG1vWd3XQYXtywd30YI
M6GjOM3lal86Lqvcktlzl4v+aUX9b990Iyb3Skzk+hT8YC932XCOi17ZOvGv
PnQeSJS6joWxsImvqlC1pP2+uFNN6l/fVw/eeBSw4DJ+mR/O2LyRi4EP5G7B
b3/zb6Aib4Miv9/XnItWXveF34/n45xPSyXz88pSw9d9R/n5sdN3PvMW8vNi
JwW3VoLfjzvcz0sbPODnb74KDG405OdbHT0+6PTy+3HhyvuMVTf4+WXy3JUx
//C9x4GD0zx1P/P7dNJQSpZ4ID/PvrFloG3uP3xPYvvAYNYLfp9yJWdsSTbl
5+8ttL7Xf+X3qWeByYyfvvxcVu74irlT+bmlHet4920G/IKXXVZP+tvc1+n2
vlqNAeWmsLNvrYf5vt3jdLILuvBh4dfjdrOGecakzR12dJ2dtrVctfNvddbl
WuTjp7WdYA0kiB72GOaLJFmu3/d0Ij0hkM1WGuZ95Y+ildgd0HKZMCq9bdin
1ssd+nluHVDP6VrTGTbMO4iacdIiHVDVqNZP0h3mP79mLmwKacdaVv74cz+G
/Sj6O3ZzhFQ7DCNTy3ckduCTYzQV3ViP2qxFxRUNPHAsslya7rCgFthpY+RR
jzO/Js+Kf8vD2zgFLA5hIb98i/RMxXosd8jTsynjwUNo2tAtbxYiG90lL35/
h6FAB633xTw84CUFGbixYGG8R+v6qHewnDmx1foZDyu1ylJ0trBQ3RylOiuu
Flc+XY2dFcVD3HkTRa4YCzJHGufHbKxBdun0o7VneRCtbbsTXtsDHWqslUDr
W4TOeyIkc4gH04FrY2Ou9yAl6+GotuI3iJN5tlDEiIfa/rvp6Ud64F3k2TTq
YDlCT9/d6qvGw+85VaIts3pggdkrOlKLEXZqjKObEA+7p2anFT5lIj8z60qe
wCvcOGEfbt/ARe7oR+aPNtP5xDa9QetOBqJt6zKsEriQHIgQvtrejXybKmtO
awquJKb8VvHjYlAz+kF+IJ03XCMcnk26jYLnxu837OJC6qFt/1eZ4Xl27/oQ
a8l/uC5c+NN2MjP/H65zPdXLfubAz8+xVzTcUOTnRhKr7Va18fv9a0Gi/Zuz
/DzqxCwHy7n8fPXciye+5vD7XVV7o/nQIX5+ZOv89pip/3C9wChgZXkCv99f
7iAuf9bh5/tNjZmzP/xDX512buzFU/w8Z0xbiJoUPx9s2ttknsrv93NBv9xd
N/1D3deIkQxt4q/ve9bvEbCk++z6WfVRqiHD3INc1aE0iYHrGvmq6Vv+lseE
Zhbpx3Xh9c2hEpkxwxy5K49uWtkFe8lpy51yh/2+yt100rryTkiEK8YWn+rC
3IAvo2e+ZOC2rvaX/q0kTg5qhYRP5GH8lSAh47sM2FiRzEMGJG51N0itF+GB
ESEjcDGQAdUztz++0yVRWHUy/tMgFymhITrPPRi4QXlcf7WRRO7HinEzv3Ph
+Xjx8yWyDDw+rNKkokEilDo6dOwDF9fvmO5beLMLOdZLBcXlSEziuj45l/Cv
7ZwVkZXowhurVQrfxUhcZPqbRZ7motw//olkSCdaLbClZYDAmM5r45Lpfjng
kGf+W6lOaIq599tyCATNL2YPzOMi0v622rsTHThxhRHDqyZgHn/M9UwPh66z
5Nl1nu0Y+hCrvOYxAcH7dVMZVzmonuZ1w1KsDSGyBzMuXSBwP3Z1kv5qDnYv
kVmpLd+CmcfmbWi1IrDm3v3NqUw2wuYtlBy0aEK5hNDzNh0CjepjjA5EsOHs
G3tAx+cjTq1XHvN9NgGbW9mTI9ezseytfV7e+wbsWq04UMrmwWXlsy8KlSyk
SGlIQ+Udli2XoyLSeXCrSfjwwoSFE4dHeeX61EBisUzXEV8eLtjGZOu29CD/
g+DL6OY3IDfMP91G5x+l/sHZaUfpPFO81nrrmjIITDHP8VrAw2MFZTGlUT2o
jlLOSisqwHe32xYWPVyskypdseIknWeaFsutiMwAu71daC193CtErfavo/OM
9/hxcSJbH4CpN/+BrC0Xx4cG/bduG84n+Y0Vg71K/Pkk5nl9vG0Pf374NXbp
4inB/HyH+ZXn6Wr8PDWZWG1ez58fJgkZFAme5ueKFTeuv1Dm54adD2LTavjz
g1bBt4JFzvx8/j3dznvT+bm4T4Sg1Ev+vJG31GCq9RF+fl2GkX5oyj98b9Zb
v8/iH/qNrYWlwmb7/iP/999/NqL/udXq/LOZL7IpFBCN61lfKTjU/9ZzYlFI
EfOxf/yIxJdZ9pPfVFJgcHfIBwZQmL7/feaEKAIcKfuCV7EUZMN+SxUpUggY
/f53dQQPYY2r5JXP0H//cMme7CoSonZeP9tDuKhiH+gL20lBo7ItyMyR5vcU
g98HcTCru1bWfjEFru3auN/TSYz9UDOnyp+NI+0bjTaOoXBrQmzO3SwCoyd5
JBfR/VpaU4b3nHYS2xKF32+woPOlkOuE6Cs9+Bk/12ZGNonPjdG3VogSyJev
Wdd4kwmhHxo5FhEk9t1QtQ6m82LYg7hu9wfdmD8TyRn0fjzQvLZe2JKHw4pu
ATOfMbBu1ca7k+n61dvYP89zAg+rEwwWvaTrntUeg2s2C0ms9tg76stzLuTU
D54+/bYT3Cdmof4iJBS49Y9WWnFRGRKkS37oQNFrE7mgdgLzvE4M8SZwke/8
Mdm/uR2zbVUePMkksGFbnlr4Mw7SUtZMWi/ShomarfYV5wnIqKfu9Nf88/PL
abLbpH85dqBxitdV1BAQ8FL8rc3683rJYqePC+SYuLKvRtzOn8SgH+tDfPCf
3x+SO05p+QPw0NxzIKnPgcKoOct57ckj7/8Z0f81vR3OeeaQReHk9TKFF3Q+
2Z+26KkA68/vV5y6xepikyYJ890skzF0HlKpen3isOWf17dHzjAR1uFhZ86K
eIETFGaJ1fsKpvw5Pk8/ifGSS2GjliknfmcinWccEpWdyok/rh9/XObO4ttM
nJvstiSTzht+8pJz9734s1/kXxuI9m/pQq3Sh3NnJUmsfbnFz/Pyn98HIiwi
2bZ2Vjs+L23RTblFIKQq6cEnhz/7d/Jr000nnjbiBuux7eulBI6Vse7Xuf35
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
PZ0i4daCIoELYYJHCZx63J0s9PXP8+D3eWefbg/7AJGEwXjpCfT22+75f5n5
5/WSrttw6cI7ZH1dULEvh4cJrCd+/tb/k/eTuGgyVi+qxsTBOVfjjvLgdPfT
A6W7f54HLUIiK2ZUFCIso15/ZS8Xu/fcSloU8D95vpu1OizVzwhX/Ywu+dJ9
V0KQ+J2Wt//f82D4pV+eXrnDfdFp6/OJrXRdcv8qI+DxlULR6ns7nXuov9Zn
dD72Eyoa/r7ddPdG7gkVNj4e1p8vTNcn4427jdOiib/WH3Pau7zVcvh6XKSH
1dC3Dx349P1c1MV2As0bVA9/msD9a/3lZcV5nMJOxGaXHr94sgs2PK9pG7fX
w6QiO8y2kocS1YMp9y8Mz1Pbbq9xrLJvx9snBd1vOjtQbenxWbepEK2js57W
0sfN/FCawfXA4Xnte9uJKoX0FvAuTws0amiHgMaql7fLUxA/1f1apS8Xjd5S
u1sChufB8cVyKdy8ZtxSGzi7xo+eH4v6trudegHP/BfOb2K5qLTdNTmobnh9
eNKbVDHTVsgsbH13e0IHLM6I3Ygtq0JamAVVsJeH73s7fE+eHZ5nvzQ/nyuw
pgM9yjZClF0nrNOl101saEO7RcES5+sEMoKL54od4Py1/twCwc0hxxnYuO+G
9I9LDGxyWFD23oEDhpDyfgt6Hsx7dvj8xYkkmOlNnCH671YrvhscUqCw8lnU
96ExJAoOjdNW3M7B+rc99+4soHC7a7an8ygSekmnplcspOfK+KsurdIUlqol
TBvzlQDT3eDkyUo2PP1/V7dMoeC68kHP3ncElJ92H9q5h43zDySiowToOrak
ZfoUuq46crz2rmKycLVM+chOisTDReKbSn3pOXGe1LY5TixEc9erT2kl8WrB
5lNnzAiwhNrePf3Wg8F4k9GXK0h8b5SyNlAj0LBox+jVG3ug0t4nUJZCIvf5
ilH1vfTxu94qf9qeiQm/NHm2V0ic3LpMwSieh9mjjulmhHeDM9P3/aQTJOR6
lhi+oY+3sv3XI/05DJSsqChI3Uai2kv15GYxHpJY401NOV2Qakjb81mVzj+3
t9esLObi9Q6FOja3E0rMje5l9PycWbjlxCI7Ls6/3DU9OLMD78zyjw7Q+eeT
t+1dfUEuNkkH7Fkc2I4zNZp7VZIIyGsH1h69zoHa+JOr7ia3YqHuc/0D3gQO
DsQLBS6i58TZypGh1s0weX60YpcJgVKju42VRWyIPtn64Tj5EWFMkTkSCwik
FE2MOm/KhvM3s/XfBd+joDv+dh+Ph1mSao4X61hoX3s06ZzEO/QydGWq0/51
vdLY4Mp2Fq4Eu8ycsLAGcgzW3SeedD7Nc5YLf9MDmf2Jl+JSKpE1envxnU08
jDt0qNJ5Ww+ueDo7Xp9fisdF+nE7p/DALBdSmlPHhNp270Hth/l4+3ZD/6w6
LlZqGrC5a+l5UFdy4ts9aaAatfU6w7jwTQh9mJlCx/+LPD/v4FsQY2rceGjK
xRvJxiOB0sO+yJnm7eswhf865uu1ZjNESvjnu43mhcLHHfm5SpPhwLU5/Fx0
b0Pvy9f8853oFpNL1s78fO9ut6DUhfw841JCRGrjP9wHtXyMfFIgPx9otk57
pDEyD47o/56qm7dJJ0lQGHvOcm5jM4WpKpd7B59QqK7hDFQLkthkd73P7RmF
e4P7LzrQc4KcW9P6D8IEVvn/bDh/icLHFZ/1u+n+T/NcbpvAIBdW18zJykMU
tJ74nFsaSeJK392S6C8chM849EKf7t+edXAThej+rfWg/xMNgo3Sm/ber6dT
UJy+s6GujYB6vU3Yu24Wfkq7bN5E5+07+rkCcXTedtwy6Vbkjx7U5JoxGuj8
zDqy6NhXOj/LTZQfYyDSgwMstwdLHpBYOleq2amJB0Mt5yM5YkxIrp571NyH
xOWOm/o+/jycOFpQqirVjeqQQqUL++jtxM15eUWVhxsRkxXvyTEQ1GXDS9Ug
sd7mjsKdj1woM6auKF3VBc172zxcJUi0vH0pbXeBi0gvu5cmGzvxqe3o88pP
dP9wwPBByxIu9JyLnTs3d9B5fM4iiQoCPbM2ijV/5MBc3MxB8nwr4t/J1689
Q2DJp+RNG+Q4aMg82vpyZQfqHpp3mL0mELnsw8RzdXTedghyZ5Pd0FXSqnU4
Q8JoYhBH+DQPozb5rlo6kYdnZ2L0LG0obF0ga6Jxe+R63//QdCvDAN2TFKom
3b8QwaEQPO/catEqOp4fXr6wgEPAOCpgDC+ZwvQs7Wz5jRTSNc1XlXK4uFn/
xmPlQQr5uu0yyqEkQlXkn73bTc/R56duPU/3FZ9DvCcwEglkVx3x/LqJibeL
EmrjgkiEZAVx6yN5SBucuqS+vxNpjualdhNIxE9QqfnlwEXAvvTE8xfbcKu9
3bDlCoHidNH9wsYcWB8xXD9pQiPyLzgmaioQkAy16A4wY0OvRvF+yZt6PBU7
aFhfz0OMXI959C0W3KZYLPb4XgPfZbonVgfz0PR2u1lnbw/a13zaaSRfDv/l
dvGrF/OwstbI79L0HlgUGGyd5/Ec922nTNh2g4tz2+tmHswZroMVGff3nP6H
59eusmsEFd/8w/32UmuND4by38cS7meVrDnQhcFe/0nT1w7zhqwNr/ft7YCi
XWmZj/fw/aLl22y2W19vhXralAOTZYfvF62pqY0qt2rG8qAgV/VDw89ZRD40
u1cc14x5Chlv1TyGuTv1IKrzchvs2fLzup2Gt7PM1lZT+nQnjqzokNijM3z/
2yaZX4LvZw7vv0107FBFTjvEenMrp6QTWNAydem7h/ScudUr614xAxpPeTYf
tpNQ+1r75Tvdj5C/0qe9oI9XClhiX1Uo6MLpNFNixHf/Q2fPnSiZnUPhxTfB
Y2L9FHZFCN+rYlHYNOr6fSFdug/eErugkf73oWcKTx7Q9aF6fJbHqiM8jH74
VaPzFAWrlh6/zBwSwbustxUOsLFTx6e7X5LCSa5qAYdBgFFls/nshB6MlV6R
K/2QxDG9s4fvtND99uQAd6q8C8dGHfdfs4hEnIjpSs1MLuSl5IPWXmtHxnZp
rZRkAmbZnwM/RdHnd9/Ph+32Tai/1ob3awncETrAiYliI9/hQndrSwMsFY/5
reHwEPLs2zJN2gftj86u4nBqUWOYrmR7m4eefQkHt81mYXKGxuU7QZXoOR/w
Wn0j3Q9f0V4oa0j3t+t/jzYWzsGpIpP5Hrlc5EjP+lU2ZXjuS3G3uNxf9w/3
xbXrPdXR+ofn0d7kzM2Q5r+v7Md0WQG9+wyE79i7wfnp3+7vzVlqqivYidKC
w4pl1LDvfPKDB9putqH445zIVW7DfumbXpLygGxGeL+aV821YX/VuGmmjglv
RvurXV69p/7mR9dTNa8aWjHPzrbNb8XwdmwqtQOXVXVguWvhnew3w/+vipJ0
t9rfnnNp7FyjtNLgX/dxzhOXiKRwWGzw3PmJFIz1/VpNQc8tE0rHbLlOQUjK
48j+cRRSKn81uywlsNUteIx/GIXxx/sOrxCh+5RsG8EGAQLRPtFMXjAF+6YZ
Umc/k4hu37Ntyj0eGNN6Kp6fpXCsqbjJuJaEm5bKMVsNHnivz7Obj9Px9y6k
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
DjCw0d3Fj3il4nPZJIwDg7TKx9EiLu1wxC6Vu0UQ2dXsjlzyTTowrYVd61ZQ
YLfDzM4oHIdUQa7nduJ0sA55OaDS1gqbnbQfGSBe+b7EY7tSKg04uJ+bL13S
AkYORLw04pURr91wHsQrR6TXS7lnNcIq7c0BXIhXvpHa8eliVQ9wD7nLnqys
g08mt3ewIl65U9VparFqDxrXoo37qDVQaM84jRnxyreWibNYS6nQ6sKxe93n
Sgi+qJv9OQkD3aD2+ft2USEjJk/AeF45nN6VKvrJHs1v7ZGjNwu7YR9P+drn
YcWwNPpsbesWDJhcDPek7+6Gso81l6vq80DCulkilBWDuSe1jmcXd0HvAZ3G
go4c0F/bJKyLeKV8VfzHddu6QEe3crd9UypEvmtYsAzxSmuY4pf4HOHj8MuR
E+23Ibv28jVCjw7z9x5IktwwGmcuRyS4py8byyuHNpS11bePjT/K7rytqWP6
dhkYruQbNAeojeotFOcmvOxvBXGuud1Ts3CYe9HW7OhTGnQstFR2v9kJCTZM
z86bE7BpQar++qMYUMvElkpnIFxvEXwQeYQEgZlDXdauk7j5N/nlLjMNX0HC
wKoUx95WEnyF99qeTychsPn+wY5oHArzr8deiCHBbVmmR48kCRnCjU+w23SY
Oy0qNUiDhDez3tw5ZkfArkeJx4/O74FVKW+GeN+heBHtrRB4FYfjy26880Vx
1l0wOCse2X3lYGpmsBsGIsqLugdSKfDq4n29R1MIeBPUGbAd8TFHd8XV52e1
wIijatwmLxxuL86ihMvT4MSci5s1LtbBao5Dsq4LcVgqXVRbvbkHdBaasAdv
qQaj6hSviCIM+vpiNuR7UkGWmpgpaFwOss1LpfzR9WqOTHv+obYbhAw39Z+b
WghFagn9BxZjUMd93Yfvcxe4ho6UYJAMtEUOCtf96VASe9bfMHp0PqsP9H16
Yv+DviSx7OiG3LG4mRb2kVPl4ljcjPfWNq7ra4c5796uqV7/3XuGazj7GPa2
gZroXX/SdhQ3ZQq5zslbNwPDqiheDa5RvHNn3Lnx05pGMLuRlLDx4Cg+ej6f
nWpq3Ah5HtslsoxG9W8STrF82NYCF8XmhytrjZ4nKnDqu937KJA4EqpgKzK6
/6j8+XnILvJfrVNlYGBvuat6b2S038o6Qlk6MKkNPrA4mRbW47D55eI41y+/
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
4aQdJuWknJQTTf7uuPBnXXei2edXXXeijdfvcj9/9P3/Wff5Rz/Xz/QhIipX
RFQqYMk3cQWDKf/3/NRx6/+3Pe+flU/+qvv/XZ73d7cbw//8+jiPof/Y90n+
vX6i2e2vOi5/9Dj+WfpJ+08M/ZmGbwYf+97+P0o/0cZrcnwnhh5T/VYA2wYU
e474bW2Un+on2nyYqPNkoo/jr9ZPNLtNtOf9Vff5u8/b/9T+Ey3OTNT4M9HG
faL57+86rybn8/+O+f+75vN/7jj+6+uBPzt+vOeZaOvek/vXk3JS/r7yd4kP
f9Z1J5p9ftV1J9p4/S7380ff/591n3/0c/2qdf6/6nNNtP3Nyf3c38tuDP/z
m9y3nVj8dGLy1sl924lm53+m/9+ynjM5jhND/1dbr/7fOu6T+7MT83l/dp9/
tH0mul//6vkz0fx0cj/xrzFPJtq8+jX6//466u/CE3/tfPjP7fzvrY9NnPz/
19rzj7P/pH3+sX3+vfXt8d/nH4WD4z3/3/T/alydaHFvoq3n/Kp5+1ddF51o
dv5r2+E/3x//9/D6P8flv+q4/Lv2/G/z6H+mn8SF3yn/+e/vg/yz+/mj16/+
03zm/x09cepz/uj4+Y/t9p/bYaKtt0y0+DPRcOrf0/+6/OF3xaM/K3/73Z93
vHHp164v/fF9Z+PbH/nv5+2/Kk7+7Dz/B1fPB58=
        "]], {
      DisplayFunction -> Identity, AspectRatio -> 3.333333333333333, 
       AxesLabel -> {None, None, None}, AxesOrigin -> {Automatic, Automatic}, 
       DisplayFunction :> Identity, Frame -> True, FrameLabel -> {None, None},
        FrameTicks -> {{{{0., 
            FormBox["0.`", TraditionalForm]}, {0.2, 
            FormBox["0.2`", TraditionalForm]}, {0.4, 
            FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
            FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
            FormBox["0.8`", TraditionalForm]}, {1., 
            FormBox["1.`", TraditionalForm]}}, None}, {{{-1, 
            FormBox["1", TraditionalForm]}, {-0.9, 
            FormBox["0.9`", TraditionalForm]}, {-0.8, 
            FormBox["0.8`", TraditionalForm]}, {-0.7, 
            FormBox["0.7`", TraditionalForm]}, {-0.6, 
            FormBox["0.6`", TraditionalForm]}, {-0.5, 
            FormBox["0.5`", TraditionalForm]}, {-0.4, 
            FormBox["0.4`", TraditionalForm]}, {-0.3, 
            FormBox["0.3`", TraditionalForm]}, {-0.2, 
            FormBox["0.2`", TraditionalForm]}, {-0.1, 
            FormBox["0.1`", TraditionalForm]}, {0, 
            FormBox["0", TraditionalForm]}}, None}}, FrameTicksStyle -> 12, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> {160, 350}, 
       Method -> {
        "OpacityFunction" -> None, "OpacityFunctionScaling" -> True, 
         "GridLinesInFront" -> True}, 
       PlotRange -> {{-0.8, -0.6000000000000001}, {0, 1}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJztl4dTFFccx7GODccYdOxjQaOjGcZYSBD9xmFijL3FWGMDNVGJRqKMEkuw
xJKoAcSCQbGgqGhQjBpFROwdMai0K8Bxd7t3GjVoLMm+3753O3PvL8gMO3Oz
7Gd33+/9vr+2tJn6zYiwaj4+PlW031Xtx/7Wj8eoPFeeK8+V5//recKGrOcd
J7ixPC5k3WybG++n7XAnX3LjZKuVzuEnXajaeXXjh7fcGBfaq3joT274pX5q
XuTnQnTmtV2fnHCD3a0Y6cbc3nXyds9VUX10fbYEjl9ZkJHYzI0bdChgq7Va
6Yb2sraCCx3JsIKaZNgNeivZhVX0nNOzbrBmNT7cBQu950CtQy20rbjx1SY1
Cj1c6MPM9nZgTd/JpXfaurGZufFKxbat7LCDbtdx48JzZlHF32S4HOypA09c
eJx8aWDgGhUjyOFy1COHXWhJDqsgd1Nt0DbRMDrThQH0gMrXtXn2vVDzNqBQ
wXQ6ykCybnBhDwmjgC6zStFgzEeaNC7cbZv/csnXCkjmVqUgd7504W1upL1D
VwXk7qISNCShXaAwVDjxgJnNsyKmCVPahbFsuQwnundjh9UTH6HjRjJsQRzX
5RgL70AnFLptBslsVWFiMjd0or8eIJC711T4kh4O7ocJZDZNRRAF2MHzyASS
e6uKGeS/g+dPETRR/GsuVxFLLzp4nhRie3bro9/OVHGepdFTO8+HArTguruY
HKftMNF2HoG2HaiiOa1nxxay95Drp/J92zGMDD9AIhlW8R0JZUc9ilcemNVN
qoLdmtU3ueXIprjcRxJdK7itqbF3ezmiSMhctGNhOqPg9YEnOYOnlnOd73ni
2on2Xc71vIv2lNAK9DKw8efuYB85rPC6sXF9buG9riyjFdC2omxchxvYz9Ky
rwLmbVyIjft7ldtTPPlXi86XkcK210BBIBVCGSJp/9mevKHyjS9DOe3zPKiM
ip0878qQSfvJ4PXvxDkSsAw7ye4pXgcib0qxjNY/DgpHnBNNKS9K+Tqp3B8n
+jFZI8Xze0Duhjoxn92G4LFI43m5k+JWyvPKx4fk7ubETeojJR5ezPPVm+t1
7ZC4rovMtWBrgZG5Xr8yJxnDZc6s5gyWeQzPe2/OsvuzejLXy9Yucb0eZU5l
fUDmel+TeQLVncxF/XjzZ29YQ5K5HieZDyKhyyX+gpVVtsz1+pD5MGq4Mhd1
6M31epH5KAqwzPVD5npd2CRObTtD5vq8k7moZ2+uz1uZ63NN5voclTmbdvkv
yySuzy+Z6/1G5qIveHN9Tsn8bATLaJnr81jmjahxyFzv+6USn0OFJHPRX7z5
RWroMp9Hc0bm+lyX+VUmc4DM9fkh8zYU4BKJi2tvnh74Iis0RZvnfrhUkG7w
HUntTr1eXYIvxv92TvnV4Ct8hx6JDStBAr8v+OzIRXu7hJTAYo9LqzfPO89L
+DwxePCQu5smvLVCvCe4v7bqs3wrmNXgLgav699xyfpTVlTUnLRlUCODP/15
ZIR/vBViPcFpPEZY+fejwS+EpkweNcLKnF0RdcfgB2/fH60EWCHsCB4TVGXw
Cl8rhs/atjAhyeCLtV23cFoQr3l7aJ3Bp1GCWlDA7Qs+cHF0wKB9FrTp+2Ta
jYkG/6AstX1JtAXTf5w2saCfwZsNf9Q8aooFYl+CVz1TQwuVBY8b9x/2uonB
HR2YwBb0ZO27qsFzNFVC/jFD7FdwkjnPjEwmc67Bd8045pifbkaN7u/0DD5r
8DU5Raa6MWYM4H4Irn83mfl3pcHH7O9xs9cQM+7Xntl2dqTBP353yoV7nc0Q
/gnOVJ9V2wwW3fUDDN7A/vuRajYT9hRn1E/oZnC9b5sg/BbcxB5LMiEgfHeV
MzUMfrlT0C/Xl5oQkd7o1XWX2cO1ZNaUN0HoIXj8vxuXvAoyQRNPdWYafKkW
1ZgmJujzzeA3U1igiiF0EjxhWYesVcnFuNWUOWzw8NHfp56YWgw/JkeYwft0
yd1W1rIYY7l+gten/lmERPreNHhh3vL5/WKLYO3ZLHN8a4MfOvxg0oKhRRC6
Ch7FwlenCHMuvk1b/JfJmI9jV33458VCHGPpnG9w/bu2EEJvwR3VWYIUovf2
zxMPHjb46Udr34RVFOAHy+Utf2w2+NqjZq0zFOAKj4Pg45jZOQXwZWZnGrwT
/+7W//8x4T/ufq1G
                "], {{-80., 
                  Rational[-15, 2]}, {80., 
                  Rational[15, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[15, 2]}, {80., 
                    Rational[15, 2]}, {80., 
                    Rational[-15, 2]}}, {{80., -7.5}, {-80., -7.5}, {-80., 
                  7.5}, {80., 7.5}, {80., -7.5}}]]}, {
                CapForm[None], {}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{-80., 7.5}, {80., 7.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{-71.50837988826815, 7.499999999999999}, 
                    
                    Offset[{0, 4.}, {-71.50837988826815, 
                    7.499999999999999}]}, {{-49.162011173184354`, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {-49.162011173184354`, 
                    7.499999999999999}]}, {{-26.815642458100555`, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {-26.815642458100555`, 
                    7.499999999999999}]}, {{-4.4692737430167595`, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {-4.4692737430167595`, 
                    7.499999999999999}]}, {{17.877094972067038`, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {17.877094972067038`, 
                    7.499999999999999}]}, {{40.22346368715083, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {40.22346368715083, 
                    7.499999999999999}]}, {{62.56983240223463, 
                    7.499999999999999}, 
                    
                    Offset[{0, 4.}, {62.56983240223463, 
                    7.499999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-75.97765363128491, 7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-75.97765363128491, 
                    7.499999999999999}]}, {{-67.0391061452514, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-67.0391061452514, 
                    7.499999999999999}]}, {{-62.56983240223463, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-62.56983240223463, 
                    7.499999999999999}]}, {{-58.100558659217874`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-58.100558659217874`, 
                    7.499999999999999}]}, {{-53.63128491620111, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-53.63128491620111, 
                    7.499999999999999}]}, {{-44.6927374301676, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-44.6927374301676, 
                    7.499999999999999}]}, {{-40.22346368715083, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-40.22346368715083, 
                    7.499999999999999}]}, {{-35.754189944134076`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-35.754189944134076`, 
                    7.499999999999999}]}, {{-31.284916201117316`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-31.284916201117316`, 
                    7.499999999999999}]}, {{-22.3463687150838, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-22.3463687150838, 
                    7.499999999999999}]}, {{-17.877094972067038`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-17.877094972067038`, 
                    7.499999999999999}]}, {{-13.407821229050278`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-13.407821229050278`, 
                    7.499999999999999}]}, {{-8.938547486033519, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {-8.938547486033519, 
                    7.499999999999999}]}, {{0., 7.499999999999999}, 
                    Offset[{0., 2.5}, {0., 7.499999999999999}]}, {{
                    4.4692737430167595`, 7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {4.4692737430167595`, 
                    7.499999999999999}]}, {{8.938547486033519, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {8.938547486033519, 
                    7.499999999999999}]}, {{13.407821229050278`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {13.407821229050278`, 
                    7.499999999999999}]}, {{22.3463687150838, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {22.3463687150838, 
                    7.499999999999999}]}, {{26.815642458100555`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {26.815642458100555`, 
                    7.499999999999999}]}, {{31.284916201117316`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {31.284916201117316`, 
                    7.499999999999999}]}, {{35.754189944134076`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {35.754189944134076`, 
                    7.499999999999999}]}, {{44.6927374301676, 
                    7.499999999999999}, 
                    Offset[{0., 2.5}, {44.6927374301676, 
                    7.499999999999999}]}, {{49.162011173184354`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {49.162011173184354`, 
                    7.499999999999999}]}, {{53.63128491620111, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {53.63128491620111, 
                    7.499999999999999}]}, {{58.100558659217874`, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {58.100558659217874`, 
                    7.499999999999999}]}, {{67.0391061452514, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {67.0391061452514, 
                    7.499999999999999}]}, {{71.50837988826815, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {71.50837988826815, 
                    7.499999999999999}]}, {{75.97765363128491, 
                    7.499999999999999}, 
                    
                    Offset[{0., 2.5}, {75.97765363128491, 
                    7.499999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["500", TraditionalForm], 
                    
                    Offset[{0., 7.}, {-71.50837988826815, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    
                    Offset[{0., 7.}, {-49.162011173184354`, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1500", TraditionalForm], 
                    
                    Offset[{0., 7.}, {-26.815642458100555`, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    
                    Offset[{0., 7.}, {-4.4692737430167595`, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2500", TraditionalForm], 
                    
                    Offset[{0., 7.}, {17.877094972067038`, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3000", TraditionalForm], 
                    
                    Offset[{0., 7.}, {40.22346368715083, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3500", TraditionalForm], 
                    
                    Offset[{0., 7.}, {62.56983240223463, 
                    7.499999999999999}], {0., -1.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
              PlotRange -> All, Frame -> True, 
              FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {160., Automatic}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.02`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.04`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.06`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.08`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.12`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.14`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.17`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.21`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.24`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.26`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.994, 0.986], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.64, 0.6626666666666667, 0.6573333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.96`", ",", "0.994`", ",", "0.986`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.994, 0.986]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.994, 0.986], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9199999999999999, 0.988, 0.972], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6133333333333333, 0.6586666666666667, 0.648], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9199999999999999`", ",", "0.988`", ",", 
                    "0.972`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9199999999999999, 0.988, 0.972]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9199999999999999, 0.988, 0.972], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.28`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8799999999999999, 0.982, 0.958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5866666666666667, 0.6546666666666667, 
                    0.6386666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8799999999999999`", ",", "0.982`", ",", 
                    "0.958`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8799999999999999, 0.982, 0.958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8799999999999999, 0.982, 0.958], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.29`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.56, 0.6506666666666667, 0.6293333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8400000000000001`", ",", "0.976`", ",", 
                    "0.9440000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.97, 0.93], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5333333333333334, 0.6466666666666667, 
                    0.6200000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.97`", ",", "0.93`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.97, 0.93]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.97, 0.93], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.31`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.76, 0.964, 0.916], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5066666666666667, 0.6426666666666667, 
                    0.6106666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.76`", ",", "0.964`", ",", "0.916`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.76, 0.964, 0.916]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.76, 0.964, 0.916], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72, 0.958, 0.902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.48, 0.6386666666666667, 0.6013333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.72`", ",", "0.958`", ",", "0.902`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72, 0.958, 0.902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72, 0.958, 0.902], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6799999999999999, 0.952, 0.888], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.4533333333333333, 0.6346666666666667, 
                    0.5920000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6799999999999999`", ",", "0.952`", ",", 
                    "0.888`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6799999999999999, 0.952, 0.888]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6799999999999999, 0.952, 0.888], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.34`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6399999999999999, 0.946, 0.874], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42666666666666664`, 0.6306666666666667, 
                    0.5826666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6399999999999999`", ",", "0.946`", ",", 
                    "0.874`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6399999999999999, 0.946, 0.874]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6399999999999999, 0.946, 0.874], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.35000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5999999999999999, 0.94, 0.86], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3999999999999999, 0.6266666666666667, 
                    0.5733333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5999999999999999`", ",", "0.94`", ",", 
                    "0.86`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5999999999999999, 0.94, 0.86]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5999999999999999, 0.94, 0.86], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.36`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3733333333333334, 0.6226666666666667, 
                    0.5640000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.56`", ",", "0.9339999999999999`", ",", 
                    "0.8460000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.37`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3466666666666667, 0.6186666666666667, 
                    0.5546666666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.52`", ",", "0.9279999999999999`", ",", 
                    "0.8320000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.38`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.32, 0.6146666666666667, 0.5453333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.48`", ",", "0.9219999999999999`", ",", 
                    "0.8180000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.39`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.29333333333333333`, 0.6106666666666667, 0.536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.43999999999999995`", ",", 
                    "0.9159999999999999`", ",", "0.804`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804],
                     Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2666666666666666, 0.6066666666666667, 
                    0.5266666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3999999999999999`", ",", "0.9099999999999999`",
                     ",", "0.79`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.41000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23999999999999994`, 0.6026666666666667, 
                    0.5173333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3599999999999999`", ",", "0.9039999999999999`",
                     ",", "0.776`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.42`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32000000000000006`, 0.898, 0.762], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.21333333333333337`, 0.5986666666666667, 0.508], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.32000000000000006`", ",", "0.898`", ",", 
                    "0.762`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32000000000000006`, 0.898, 0.762]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32000000000000006`, 0.898, 0.762], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.43`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28, 0.892, 0.748], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1866666666666667, 0.5946666666666667, 
                    0.4986666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.28`", ",", "0.892`", ",", "0.748`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28, 0.892, 0.748]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28, 0.892, 0.748], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.44`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.886, 0.734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.16, 0.5906666666666667, 0.48933333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.24`", ",", "0.886`", ",", "0.734`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.886, 0.734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.886, 0.734], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.45`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0.88, 0.72], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1333333333333333, 0.5866666666666667, 0.48], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19999999999999996`", ",", "0.88`", ",", 
                    "0.72`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0.88, 0.72]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0.88, 0.72], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.15999999999999992`, 0.874, 0.706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10666666666666662`, 0.5826666666666667, 
                    0.4706666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15999999999999992`", ",", "0.874`", ",", 
                    "0.706`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15999999999999992`, 0.874, 0.706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15999999999999992`, 0.874, 0.706], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.47000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.11999999999999988`, 0.868, 0.692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07999999999999993, 0.5786666666666667, 
                    0.4613333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.11999999999999988`", ",", "0.868`", ",", 
                    "0.692`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.11999999999999988`, 0.868, 0.692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.11999999999999988`, 0.868, 0.692], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.08000000000000007, 0.862, 0.678], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.053333333333333385`, 0.5746666666666667, 
                    0.45200000000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.08000000000000007`", ",", "0.862`", ",", 
                    "0.678`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.08000000000000007, 0.862, 0.678]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.08000000000000007, 0.862, 0.678], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.49`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.040000000000000036`, 0.856, 0.664], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.026666666666666693`, 0.5706666666666667, 
                    0.4426666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.040000000000000036`", ",", "0.856`", ",", 
                    "0.664`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.040000000000000036`, 0.856, 0.664]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.040000000000000036`, 0.856, 0.664], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.85, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5666666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.85`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.85, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.85, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.51`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.842, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5613333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.842`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.842, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.842, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.52`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.834, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.556, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.834`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.834, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.834, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.53`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.826, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5506666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.826`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.826, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.826, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.54`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.818, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5453333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.818`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.818, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.818, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.55`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8099999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.54, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8099999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8099999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.8099999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.56`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8019999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5346666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8019999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8019999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8019999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5700000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7939999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5293333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.7939999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7939999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.7939999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.58`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.786, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.524, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.786`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.786, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.786, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.59`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.778, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5186666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.778`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.778, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.778, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.77, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5133333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.77`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.77, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.77, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.61`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.762, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.508, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.762`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.762, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.762, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.62`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.754, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5026666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.754`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.754, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.754, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.63`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.746, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.49733333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.746`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.746, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.746, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.64`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.738, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.492, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.738`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.738, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.738, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.65`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.73, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4866666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.73`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.73, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.73, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.66`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.722, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.48133333333333334`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.722`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.722, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.722, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.67`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.714, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.476, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.714`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.714, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.714, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.68`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.706, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4706666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.706`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.706, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.706, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.698, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4653333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.698`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.698, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.698, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7000000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.69, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.45999999999999996`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.69`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.69, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.69, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.71`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.682, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4546666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.682`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.682, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.682, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.72`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.674, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44933333333333336`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.674`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.674, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.674, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.73`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.666, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44400000000000006`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.666`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.666, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.666, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.74`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.658, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4386666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.658`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.658, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.658, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.75`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.65, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.43333333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.65`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.65, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.65, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.76`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6416000000000001, 0.6444], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4277333333333334, 0.4296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.6416000000000001`", ",", 
                    "0.6444`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6416000000000001, 0.6444]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6416000000000001, 0.6444], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.77`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6332, 0.6388], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.42213333333333336`, 0.4258666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6332`", ",", "0.6388`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6332, 0.6388]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6332, 0.6388], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.78`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6248, 0.6332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.41653333333333337`, 0.42213333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6248`", ",", "0.6332`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6248, 0.6332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6248, 0.6332], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.79`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6164, 0.6276], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4109333333333333, 0.41840000000000005`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6164`", ",", "0.6276`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6164, 0.6276]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6164, 0.6276], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.608, 0.622], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4053333333333333, 0.4146666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.608`", ",", "0.622`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.608, 0.622]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.608, 0.622], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.81`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5996, 0.6164], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3997333333333334, 0.4109333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5996`", ",", "0.6164`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5996, 0.6164]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5996, 0.6164], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8200000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5912, 0.6108], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.39413333333333334`, 0.4072], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5912`", ",", "0.6108`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5912, 0.6108]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5912, 0.6108], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8300000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5828, 0.6052], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38853333333333334`, 0.40346666666666664`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5828`", ",", "0.6052`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5828, 0.6052]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5828, 0.6052], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.84`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5744, 0.5996], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38293333333333335`, 0.3997333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5744`", ",", "0.5996`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5744, 0.5996]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5744, 0.5996], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.85`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3773333333333334, 0.3960000000000001], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.5660000000000001`", ",", 
                    "0.5940000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.86`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5576, 0.5884], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.37173333333333336`, 0.3922666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5576`", ",", "0.5884`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5576, 0.5884]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5576, 0.5884], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.87`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5492, 0.5828], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.36613333333333337`, 0.38853333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5492`", ",", "0.5828`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5492, 0.5828]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5492, 0.5828], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.88`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5408, 0.5772], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3605333333333333, 0.38480000000000003`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5408`", ",", "0.5772`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5408, 0.5772]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5408, 0.5772], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.89`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5324, 0.5716], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3549333333333333, 0.38106666666666666`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5324`", ",", "0.5716`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5324, 0.5716]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5324, 0.5716], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.524, 0.5660000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3493333333333334, 0.3773333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.524`", ",", 
                    "0.5660000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.524, 0.5660000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.524, 0.5660000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.91`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5156, 0.5604], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.34373333333333334`, 0.37360000000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5156`", ",", "0.5604`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5156, 0.5604]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5156, 0.5604], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5072, 0.5548], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33813333333333334`, 0.3698666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5072`", ",", "0.5548`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5072, 0.5548]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5072, 0.5548], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.93`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49879999999999997`, 0.5492], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33253333333333335`, 0.36613333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49879999999999997`", ",", 
                    "0.5492`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49879999999999997`, 0.5492]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49879999999999997`, 0.5492], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9400000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49039999999999995`, 0.5436], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3269333333333333, 0.3624], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49039999999999995`", ",", 
                    "0.5436`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49039999999999995`, 0.5436]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49039999999999995`, 0.5436], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9500000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.482, 0.538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.32133333333333336`, 0.3586666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.482`", ",", "0.538`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.482, 0.538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.482, 0.538], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.96`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4736, 0.5324], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31573333333333337`, 0.3549333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4736`", ",", "0.5324`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4736, 0.5324]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4736, 0.5324], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.97`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.46520000000000006`, 0.5268], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31013333333333337`, 0.35120000000000007`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.46520000000000006`", ",", 
                    "0.5268`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.46520000000000006`, 0.5268]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.46520000000000006`, 0.5268], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.98`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4568, 0.5212], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3045333333333333, 0.3474666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4568`", ",", "0.5212`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4568, 0.5212]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4568, 0.5212], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.99`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4484, 0.5156000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.2989333333333334, 0.3437333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.4484`", ",", 
                    "0.5156000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4484, 0.5156000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4484, 0.5156000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.44, 0.51], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.29333333333333333`, 0.34], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.44`", ",", "0.51`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.44, 0.51]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.44, 0.51], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"1.`", " ", "#1"}]}]}], "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"307.314080376762`", ",", "3894.834198937089`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "160.`"}], ",", 
             RowBox[{"ScalingFunctions", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Left"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      GraphicsComplexBox[CompressedData["
1:eJyEnQWUFNf29XGXAYJb8ODucnGCE9zdXQM07jBAcIIHlwmWwQcp3GVg0HF3
huBOvq7i7H1n6n3/xSzWytvv9u7TfetX95x7qrq7QN9RbQckSZQo0a8uiRKZ
/11VLrXzX4iRa2c9578N6nXpgFelA4Kp25U81rbkMa2P/LLY/ZfFWmcp2idz
0T5ajytUdWyhqlp7/Zz+wc/pta6YL6R8vpAg6lW5T63IfUrr1zmWvcyxTOt2
2Qb8lm2A1key1PwnS02ts2Qy/7QelyFidIaIQB0/7VnPtGe1rmi+3VVar0ox
ZHmKIVq/Tqr+Taq0bpc4a5vEWbUe+PVRr6+PAqiLfpiV/8MsrcNfWRNIvfv5
sy3Pn/lrf+S8npHztC5qTkd5rcP9rD/tf7po89NFWg/0qtzDq7LWRe8G5bkb
5Kv915f6Ov9p/6Xqmy5V13rgubBu58J8tN+c/hVahx+p7eP8p/0HozYcjPLW
/n1ruu5bo3VR679ah2+x3rCe3wR8udn4crPx5Wbjy83Gl5uNLzcbX242vtxs
fLnZ+HKz8eVm48vNxpebjS83G19uNr7cbHy52fhys/HlZuPLzcaXm40vNxtf
bja+3Gx8udn4crPx5Wbjy83Gl5uNLzcbX242vtxsfLnZ+HKz8eVm48vNxpeb
jS838vWTedj+OUK+oMEXNPiCBl/Q4AsafEGDL2jwxfjCF+MLX4wvfDG+8MX4
whfjC1+ML3wxvvDF+MIX4wtf0OALGnxBgy9o8EW/8EW/8EW/8EW/8EW/8EW/
8EW/8EW/8EW/8EW/8EW/8EW/8EW/8EW/8EW/8MX5TbB+edjWLw/b+uVhW788
bOuXh2398rCtXx629cvDtn552NYvD9v65WFbvzxs65eHbf3ysK1fHrb1y8O2
fnnY1i8P2/rlYVu/PGzrl4dt/fKwrV8etvXLw7Z+edjWLw/b+uVhW788bOuX
h2398rCtXx629cvDtn552NYvD9v65WFbvzxs65eHbf3yIF/LrXk+T76gwRc0
+IIGX9DgCxp8QYMvaPDF+MIX4wtfjC98Mb7wxfjCF+MLX4wvfDG+8MX4whfj
C1/Q4AsafEGDL2jwRb/wRb/wRb/wRb/wRb/wRb/wRb/wRb/wRb/wRb/wRb/w
Rb/wRb/wRb/wRb/wxfkVvqzD9s8l8gUNvqDBFzT4ggZf0OALGnxBgy/GF74Y
X/hifOGL8YUvxhe+GF/4Ynzhi/GFL8YXvhhf+IIGX9DgCxp8QYMv+oUv+oUv
+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUvzq/wtXbU
R+e/q+QLGnxBgy9o8AUNvqDBFzT4ggZfjC98Mb7wxfjCF+MLX4wvfDG+8MX4
whfjC1+ML3wxvvAFDb6gwRc0+IIGX/QLX/QLX/QLX/QLX/QLX/QLX/QLX/QL
X/QLX/QLX/QLX/QLX/QLX/QLX/QLX5xf4Sun9bib5AsafEGDL2jwBQ2+oMEX
NPiCBl+ML3wxvvDF+MIX4wtfjC98Mb7wxfjCF+MLX4wvfDG+8AUNvqDBFzT4
ggZf9Atf9Atf9Atf9Atf9Atf9Atf9Atf9Atf9Atf9Atf9Atf9Atf9Atf9Atf
9AtfnF/ha5P1Pu6QL2jwBQ2+oMEXNPiCBl/Q4AsafDG+8MX4whfjC1+ML3wx
vvDF+MIX4wtfjC98Mb7wxfjCFzT4ggZf0OALGnzRL3zRL3zRL3zRL3zRL3zR
L3zRL3zRL3zRL3zRL3zRL3zRL3zRL3zRL3zRL3xxfhPU9562+t7TVt972up7
T1t972mr7z1t9b2nrb73tNX3nrb63tNW33va6ntPW33vaavvPW31vaetvve0
1feetvre01bfe9rqe09bfe9pq+89bfW9p62+97TV9562+t7TVt972up7T1t9
72mr7z1t9b2nrb73tNX3nrb63tNW33va6ntPW33vaavvPcnXA4uDB+QLGnxB
gy9o8AUNvqDBFzT4ggZfjC98Mb7wxfjCF+MLX4wvfDG+8MX4whfjC1+ML3wx
vvAFDb6gwRc0+IIGX/QLX/QLX/QLX/QLX/QLX/QLX/QLX/QLX/QLX/QLX/QL
X/QLX/QLX/QLX/QLX5zfBP1VL1t/1cvWX/Wy9Ve9bP1VL1t/1cvWX/Wy9Ve9
bP1VL1t/1cvWX/Wy9Ve9bP1VL1t/1cvWX/Wy9Ve9bP1VL1t/1cvWX/Wy9Ve9
bP1VL1t/1cvWX/Wy9Ve9bP1VL1t/1cvWX/Wy9Ve9bP1VL1t/1cvWX/Wy9Ve9
bP1VL1t/1cvWX/Wy9Ve9bP1VL1t/1Yt8dexg/j0iX9DgCxp8QYMvaPAFDb6g
wRc0+GJ84YvxhS/GF74YX/hifOGL8YUvxhe+GF/4Ynzhi/GFL2jwBQ2+oMEX
NPiiX/iiX/iiX/iiX/iiX/iiX/iiX/iiX/iiX/iiX/iiX/iiX/iiX/iiX/ii
X/ji/Apf66z95GPyBQ2+oMEXNPiCBl/Q4AsafEGDL8YXvhhf+GJ84YvxhS/G
F74YX/hifOGL8YUvxhe+GF/4ggZf0OALGnxBgy/6hS/6hS/6hS/6hS/6hS/6
hS/6hS/6hS/6hS/6hS/6hS/6hS/6hS/6hS/6hS/Or/Dlbb6NzU/JFzT4ggZf
0OALGnxBgy9o8AUNvhhf+GJ84YvxhS/GF74YX/hifOGL8YUvxhe+GF/4Ynzh
Cxp8QYMvaPAFDb7oF77oF77oF77oF77oF77oF77oF77oF77oF77oF77oF77o
F77oF77oF77oF744v8JXnu+PI1/Q4AsafEGDL2jwBQ2+oMEXNPhifOGL8YUv
xhe+GF/4Ynzhi/GFL8YXvhhf+GJ84YvxhS9o8AUNvqDBFzT4ol/4ol/4ol/4
ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/44vwKXz2/xyVf
0OALGnxBgy9o8AUNvqDBFzT4Ynzhi/GFL8YXvhhf+GJ84YvxhS/GF74YX/hi
fOGL8YUvaPAFDb6gwRc0+KJf+KJf+KJf+KJf+KJf+KJf+KJf+KJf+KJf+KJf
+KJf+KJf+KJf+KJf+KJf+OL8Cl9bv78P8gUNvqDBFzT4ggZf0OALGnxBgy/G
F74YX/hifOGL8YUvxhe+GF/4Ynzhi/GFL8YXvhhf+IIGX9DgCxp8QYMv+oUv
+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUvzq/w
Ffx9XsgXNPiCBl/Q4AsafEGDL2jwBQ2+GF/4Ynzhi/GFL8YXvhhf+GJ84Yvx
hS/GF74YX/hifOELGnxBgy9o8AUNvugXvugXvugXvugXvugXvugXvugXvugX
vugXvugXvugXvugXvugXvugXvugXvji/wtfK7/NMvqDBFzT4ggZf0OALGnxB
gy9o8MX4whfjC1+ML3wxvvDF+MIX4wtfjC98Mb7wxfjCF+MLX9DgCxp8QYMv
aPBFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BF
v/DF+RW+5LiRL2jwBQ2+oMEXNPiCBl/Q4AsafDG+8MX4whfjC1+ML3wxvvDF
+MIX4wtfjC98Mb7wxfjCFzT4ggZf0OALGnzRL3zRL3zRL3zRL3zRL3zRL3zR
L3zRL3zRL3zRL3zRL3zRL3zRL3zRL3zRL3xxfoWvh985IF/Q4AsafEGDL2jw
BQ2+oMEXNPhifOGL8YUvxhe+GF/4Ynzhi/GFL8YXvhhf+GJ84YvxhS9o8AUN
vqDBFzT4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4
ol/4ol/44vwKX2+/c0W+oMEXNPiCBl/Q4AsafEGDL2jwxfjCF+MLX4wvfDG+
8MX4whfjC1+ML3wxvvDF+MIX4wtf0OALGnxBgy9o8EW/8EW/8EW/8EW/8EW/
8EW/8EW/8EW/8EW/8EW/8EW/8EW/8EW/8EW/8EW/8MX5Fb6yWdeLQsgXNPiC
Bl/Q4AsafEGDL2jwBQ2+GF/4Ynzhi/GFL8YXvhhf+GJ84YvxhS/GF74YX/hi
fOELGnxBgy9o8AUNvugXvugXvugXvugXvugXvugXvugXvugXvugXvugXvugX
vugXvugXvugXvugXvji/wlfVX+dU+nVOKPmCBl/Q4AsafEGDL2jwBQ2+oMEX
4wtfjC98Mb7wxfjCF+MLX4wvfDG+8MX4whfjC1+ML3xBgy9o8AUNvqDBF/3C
F/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF+dX
+OpsXY8MI1/Q4AsafEGDL2jwBQ2+oMEXNPhifOGL8YUvxhe+GF/4Ynzhi/GF
L8YXvhhf+GJ84YvxhS9o8AUNvqDBFzT4ol/4ol/4ol/4ol/4ol/4ol/4ol/4
ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/44vwKX5P7Fvu9b7Fw8gUNvqDBFzT4
ggZf0OALGnxBgy/GF74YX/hifOGL8YUvxhe+GF/4Ynzhi/GFL8YXvhhf+IIG
X9DgCxp8QYMv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv+oUv
+oUv+oUv+oUvzq/wtcG63q35ggZf0OALGnxBgy9o8AUNvqDBF+MLX4wvfDG+
8MX4whfjC1+ML3wxvvDF+MIX4wtfjC98QYMvaPAFDb6gwRf9whf9whf9whf9
whf9whf9whf9whf9whf9whf9whf9whf9whf9whf9whf9whfnV/g6PfXWiam3
IsgXNPiCBl/Q4AsafEGDL2jwBQ2+GF/4Ynzhi/GFL8YXvhhf+GJ84YvxhS/G
F74YX/hifOELGnxBgy9o8AUNvugXvugXvugXvugXvugXvugXvugXvugXvugX
vugXvugXvugXvugXvugXvugXvji/wpevdT9FJPmCBl/Q4AsafEGDL2jwBQ2+
oMEX4wtfjC98Mb7wxfjCF+MLX4wvfDG+8MX4whfjC1+ML3xBgy9o8AUNvqDB
F/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3C
F+dX+PpqfWAtinxBgy9o8AUNvqDBFzT4ggZf0OCL8YUvxhe+GF/4Ynzhi/GF
L8YXvhhf+GJ84YvxhS/GF76gwRc0+IIGX9Dgi37hi37hi37hi37hi37hi37h
i37hi37hi37hi37hi37hi37hi37hi37hi37hi/MrfOWzHhdNvqDBFzT4ggZf
0OALGnxBgy9o8MX4whfjC1+ML3wxvvDF+MIX4wtfjC98Mb7wxfjCF+MLX9Dg
Cxp8QYMvaPBFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BF
v/BFv/BFv/DF+RW+lNkOyxJDvqDBFzT4ggZf0OALGnxBgy9o8MX4whfjC1+M
L3wxvvDF+MIX4wtfjC98Mb7wxfjCF+MLX9DgCxp8QYMvaPBFv/BFv/BFv/BF
v/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/BFv/DF+RW+eltxNV/Q
4AsafEGDL2jwBQ2+oMEXNPhifOGL8YUvxhe+GF/4Ynzhi/GFL8YXvhhf+GJ8
4YvxhS9o8AUNvqDBFzT4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4ol/4
ol/4ol/4ol/4ol/4ol/44vwKX7PMcv9ELPmCBl/Q4AsafEGDL2jwBQ2+oMEX
4wtfjC98Mb7wxfjCF+MLX4wvfDG+8MX4whfjC1+ML3xBgy9o8AUNvqDBF/3C
F/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF/3CF+dX
+NpuvY/n5AsafEGDL2jwBQ2+oMEXNPiCBl+ML3wxvvDF+MIX4wtfjC98Mb7w
xfjCF+MLX4wvfDG+8AUNvqDBFzT4ggZf9Atf9Atf9Atf9Atf9Atf9Atf9Atf
9Atf9Atf9Atf9Atf9Atf9Atf9Atf9AtfnF/h65IZtlsc+YIGX9DgCxp8QYMv
aPAFDb6gwRfjC1+ML3wxvvDF+MIX4wtfjC98Mb7wxfjCF+MLX4wvfEGDL2jw
BQ2+oMEX/cIX/cIX/cIX/cIX/cIX/cIX/cIX/cIX/cIX/cIX/cIX/cIX/cIX
/cIX/cIX51f4CrXm5QX5ggZf0OALGnxBgy9o8AUNvqDBF+MLX4wvfDG+8MX4
whfjC1+ML3wxvvDF+MIX4wtfjC98QYMvaPAFDb6gwRf9whf9whf9whf9whf9
whf9whf9whf9whf9whf9whf9whf9whf9whf9whf9whfnN8H3Y7oq6+3m+7++
T9rV9n2Zrrbvy3S1fV+mq+37Ml1t35fpavu+TFfb92W62r4v09X2fZmutu/L
dLV9X6ar7fsyXW3fl+lq+75MV9v3Zbravi/T1fZ9ma6278t0tX1fpqvt+zJd
bd+X6Wr7vkxX2/dlutq+L9PV9n2Zrrbvy3S1fV+mq+37Ml1t35fpavu+TFfb
92W62r4v09X2fZmutu/LdLV9X6ar7fsyXVXdTeYL0N8vnZA3N9u4G8fxfa4Y
h07o97D5PTi+XL5PEePQGLcw+ucSx6Exju8zwzg0xvF9VBiHxji+Twjj0Alf
n6ft9XlyHN/ngXHohPPjZZsfL47j8/QYh8Y4Pg+NcWiM4/OsGIfGOD6PiHFo
jOPzZBiHxjg+D4RxaIzj8xwYh8Y47sfHODTGcT81xqExjvthMQ6NcdzPiHFo
jON+NIxDYxz3E2EcGuO4HwTj0BjH9XyMQ2Mc12MxDo1xXE/DODTGcT0E49AY
Rz8b49AYRz8S49AYRz8J49AYRz8A49AYx34O49AYRz2OcWiMo57CODTGkQ8x
bs+PY83pXKvrL2jkQ2jkQ2jkQ2jkQ2jkQ2jkQ2jkQ8aXfMj4kg8ZX/Ih40s+
ZHzJh4wv+ZDxJR8yvuRDxpd8yPiSD6GRD6GRD6GRD6GRD+mXfEi/5EP6JR/S
L/mQfsmH9Es+pF/yIf2SD+mXfEi/5EP6JR/SL/mQfsmH9Es+pF/yIXTC/OWq
GpR9U7/sG10f7Sh1c3upm1onLbE1SYmtWvczl4Hftb5UuMXFwi20LlTQ/NN6
Tn7zgOj6KCSPNUE6vvU/tN6R3bEtu0PrpObhbqN1v8wm4FpfyvjlfMYvuj4q
ZKUpreek2TszzV6tQ1JOD3T+0/GTt6+bvL3WO5KYb1jrpInMP62vfvrb+PS3
rq/mv+00420nrRv/awKrdYqYQ9+iD+n66qq1Dmg933w1KbVubB7tI7q+SvHY
iXcvra96mieQ1vOtdUnXV42v9qt1tZ/WKS6YE6T11dPmn66v5h8fNOX4IK0b
W+uk1in2O9+uoeurq7uHeewepvX8beYB0zphfbDDVh/ssNUfh231x2GO/2nl
k+Mch8a4VQ0sOstx6IT1y0Vb/XKR4+2tfHeF49AYt55u83WOQ2O8q3Xe3uI4
NMb9rXXnHsehMW5Nc837HIfG+Pd1X9df0BivbOXzhxyHxvhEK1/r+goa46es
fPyE49AY/2zl22cch8Z47e+ccBwa4zO+c8lxaIxf+H4ecBwa40m+n3cch8Z4
we/nOcehMd7w+7rCcWiM9/++jnEcGuPzK5kTqusraIzvNnHPpesraIxfbxV7
uVWsHofGeGQ3CxiOQ2M8jXk6LNf1FTTGS5gvt6+ur6Ax3sLEoZKur6AxPtw6
4XR9BY3xP6wTSo9DY/ygm/mn6y9ojHuah3uqrq+gMf7vZWtCOA6N8czWCavr
K2iMVzBPh1d6HJrnt/lsl3X9BY18h3yIfAeNfAeNfAeNfAeNfAeNfMd8K/kO
GvmO8SXfMb7kO8aXfMf4ku8YX/Id40u+Y3zJd4wv+Y7xJd8xvuQ7aOQ7aOQ7
aOQ7aOQ7+iXf0S/5jn7Jd/RLvqNf8h39ku/ol3xHv+Q7+iXf0S/5jn7Jd/RL
vqNf8h39ku+gwRfr1wT9LYetn+Ww9bMctn6Ww9bPctj6WQ5bP8th62c5bP0s
h62f5bD1sxy2fpbD1s9y2PpZDls/y2HrZzls/SyHrZ/lsPWzHLZ+lsPWz3LY
+lkOWz/LYetnOWz9LIetn+Ww9bMctn6Ww9bPctj6WQ5bP8th62c5bP0sh62f
5bD1sxy2fpbD1s9y2PpZDhW7wXwC3c9KqN2o0a9KOO5BjX4UNPpP0Og3QaO/
BI1+UsLn86RGvyjh6/GiRj8IGv0faPR7oNHfgUY/Bxr9G2j0a6DRn4FGPwYa
/Rdo9Fug0V+BRj8FGv0TaPRLoNEfgUY/BBr9D2j0O6DR34BGPwMa/Qto9Cug
0Z+ARj8CGv0H6O/19m7b8XSn/l4Pn6T+Xt8a1N+n/yL1BGs+NE8frPd3g3qK
9XpvU/9n/d2jrm8BfJ96rlWPaZ6uWuXDQ+pUVr2keWpm1T+apyUWXs+o71r1
iebJxXrDmqe2Vv3gb3s+zdNQ6wQIsj2/1vut+ijYFk/zFGfVP6G2+JqnclZ9
E2Z7PZqn7/lH87Ta4l3zdNTiXfP02Dqemqd31vHSOofFu+apmsW75qmrxbvm
yWEdX83TJoufOLXRWu+CZX/xQn02ywlD627W+qf1aSvfap3b4l7rKVb+1drH
Wh+DqGta+VjrjevNP62/72O07ra6UZfVjbQ+bS7fubXObabPl4E6/pJrk5Zc
09rHOg+0rrlgXLUF47TeOLfpurlNtf5sprf8Wh93VkvfogOof7eOo9ZVzHK1
vtbv4sw/f+03p3eD1r+HNh4Z2ljrKhY3ftpvZpMtWh9/2OzAw2Za/37v3fB7
73y13yyPt2v9zuJU6+Pm4fzko/0e5gHUuopZ7rTV+p1ZHn7z1n7rvND6910d
h+7qqHUVsxxPojX4gjarJ/df9PXDhNqNGvkw4bgHNfIhNPIhNPIhNPIhNPJh
wufzpEY+TPh6vKiRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GR
D6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6GRD6Ht/Xjw
hnoeGvU8NOp5aNTz0KjnoVHPQ6Oeh0Y9z/hSzzO+1POML/U840s9z/hSzzO+
1POML/U840s9z/hSzzO+1PPQqOehUc9Do56HRj1Pv9Tz9Es9T7/U8/RLPU+/
1PP0Sz1Pv9Tz9Es9T7/U8/RLPU+/1PP0Sz1Pv9Tz9Es9T7/U8///9cuhrO3z
N72/a37AXKC1/vt7HUGd1tzuz9R6mLV+an3LXL5LaV3SWk+1Xvy9TtHxrfVV
6+brzASm9d/m2+uqdVrrBNF62Pc6SMe3plvv90pab1jrxQvNP61jzMPfU+vm
3+ssHd98u2m0zma2Q87r/eFjM30N13qtmb5zaN3xex2n/ebpMFrrxyYuebRe
a77863p/2PHJ+JZPxmud7XudqP23zT+9P1xrlguTtO540WwgaZ3NPP089f7w
8fc6VPstPrTuaPGg94fZrOOv9WPreGudMB9tpf7eLz9gyz/HqLtb58Fp6u/9
6QvUVvk95zK19bJvXaOuYRluUZ+11te71N/Toc6PVnr4XedH6+XnekgdbvVH
dX78xep3PqH+Xn8/o/5eb+v8+L2+9qX+Xk/r/Djue91ly7c6P375Xjfa8q/O
h3Ws96vz4fd8rPVMK//o/Pg9P+v8eNGaH50Pv+drnQ+TWX05nQ8LW/OndWPr
gOv8ONCaT50fF1oHTOfDvdb86nx409o/aR1tzbfOj+ms/ZS+fg2+El4/dNiu
Hzps1w8dtuuHDtv1Q4ft+qHDdv3QYbt+6LBdP3TYrh86bNcPHbbrhw7b9UOH
7fqhw3b90GG7fuiwXT902K4fOmzXDx2264cO2/VDh+36ocN2/dBhu37osF0/
dNiuHzps1w8dtuuHDtv1Q4ft+qHDdv3QYbt+6LBdP3TYrh86bNcPHbbrhw7b
9UPH/9wPmLC/tPWH93Ph8VjffnR/V8J+1LEf3u+Fx2N9/NH9X3g81s8f3Q+G
x2N9/dH9YXg81t8f3S+Gx2N9/tH9Y3g81u8f3U+Gx2N9/9H9ZXg81v8f3W+G
xyM//Oj+Mzwe+eNH96Ph8cgvP7o/LWH/R18v/b/uV0vYD/rx/WsJ+0P6eur/
dT9bwn7Rj+9vw+OR/350v1vC/uyP73/D45E/f3Q/XMJ+74/vj8PjkX9/dL9c
wv7xj++fw+ORv390P13CfvSP76/D45H/f3S/XcL+tr7++3/df4fHo3740f14
eDzqix/dn4fHo/740f16eDzqkx/dv4fHo3750f18eDzqmx/d34fHo/750f1+
eDzqox/d/4fHo376v+4HLGmtN7q/BW2/PxD12Pf1bpVt/VvFcfTvodG/h0b/
Hhr9e2j076HRv4dG/x4a/Xto9O+h0b+HRv8eGv17aPTvodG/h0b/Hhr9e2j0
76HRv0/4fLq+R/8+4fNrjf59wni6vkf/PmF8Xd+jf5/w9eh6H/17aPTvodG/
h0b/Hhr9e2j076HRv4dG/x4a/Xto9O/Rj0C/Av0IaPQjoNGPgEY/Ahr9CGj0
I9gPkX4ENPoRjC/9CMaXfgTjSz+C8aUfwfjSj2D8xd/7EYwv/QjGl34E40s/
gvGlHwGNfgQ0+hHQ6EdAox9Bv/Qj6Jd+BP3Sj6Bf+hH0Sz+CfulH0C/9CPql
H0G/9CPol34E/dKPoF/6EfRLP4J+6Uewn/j9vNVa+quu1v9fnP1VaPRXodFf
hUZ/FRr9VWj0V6HRX4VGf5Xxpb/K+NJfZXzprzK+9FcZX/qrjC/9VcaX/irj
S3+V8aW/yvjSX4VGfxUa/VVo9Feh0V+lX/qr9Et/lX7pr9Iv/VX6pb9Kv/RX
6Zf+Kv3SX6Vf+qv0S3+Vfumv0i/9Vfqlv0q/9Ffpl/4qdDJzOjfo/WJC7UaN
/V7CcQ9q7NegsR+Dxn4LGvspaOyXEj6fJzX2Owlfjxc19ivQ2I9AY78Bjf0E
NPYL0NgPQKPeh0Y9D416HRr1ODTqbWjU09Col6FRD0Oj3oVGPQuNehUa9Sg0
6k1o1JPQqBehUQ9Co96DRj0HjXoNGvUYtPXyimmerpjlwE7Nk/X0lTRPg00A
+mqerDTgpnkaab79V5onK1xNzdN4c77maJ6mmQEGaJ4M8/Wm1jwlNsv/g5on
q2/WVvM0z0xr7zRP18zXv0HzlNrEoY7mycqDwZqnpebhmK95ume+3xKaJ6ue
G6R5svbX1TVPVj2WVvNj1WN+Wlv12CHNk1WPzdI8WfVYO82TVY8V0fxY9dh7
ra167IbmyarHNmqerHpshObJqsfqap6seiyz5seqx0K1tuqx45onqx5bqHmy
6rGumierHiv1Qlnp05n/rPL/2wuVymw3HtN68JTjg6Ys1vq6mc77aG3Na1Wt
F5q3I6TXOtIsL5z5D/rXkaGNR57Seq/ZnlumtXXcBmg9eKDzr6bW1812YSat
fzHTsTP/Mb5ZPp3V2rrPeZXWv3ZZ3ajLEK33muWi0jqV2V7NqrWnWU88DqBe
bnIxW+s2Zn1YRmsXM916+2u/mZ7ma73cLPcqaN3G5NDfT/vN+XfV2tOc7ypa
LzfnN9hX+835/ENrF3P+amjtac5XuI/2m/OzUus25nzU0drFfP/R3tpvnpdr
tV5u3l5SX+s2DZ1/cc+owRePl/n+K+h6yyqnUmltlb/+ul6yyoWjWlvLuKvW
Fq+9tbZ4raK1xWs6rS1eg3W9ZPF6UmuL1z+0tnjtr7XFaw2tLV5dtLZ4Ddf1
ksXrGa0tXldqbfE6WGuL1zpaW7z+pPVKs/59qOurtmb9O1PrzOaElNL6gcnr
U11frTT/O1frtiav5bTObPLqq+urB+bxWqj1SvP4VNK6rXk8AnV9ldmc/yVa
PzDnu5rWK835DdX1VVtzPpdrndmcv1paPzDnK1LXVyvN+VmtdVuT17paW+Vg
hZD/qbesdD9hg21c58uTZgLt5sZxez1mXTc6d8Tm1/nUahe08uC4vV6znn/U
eY7b6zerH37iEsft9ZxVLvx3leP2+q6u+YJ+vclxe71ntQeW37G9Pp2vd5hP
N9yT4/Z60Co/XB7Y5kfnc6uddtSL4/Z60Zqfzo84bq8frX38l8cct9eTz803
sPUpx+31ZVkznzb05ri93hxjhov04bi9/rTqy6V+HLfXo1Z9WT6A4/b61Ho9
QwM5bq9Xrf5wrSCO2+tX6/VmCOa4vZ61+r+Betxe31rvxz2E4/Z61+rvzg3l
uL3+td5vxzCO2+thq39bPJzj9vrY6td+1uP2etnqz96J4Li9frb6sX9Fctxe
T1v91zFRHLfX11a/tUE0x+31ttVfzRrDcXv9bfVTI/S4vR63+qenYjlur89L
mfwvfs5xe73eyjwcPbQeaZ4PZV8o62qu8/FWey79BmrU89Co56FRz0OjnodG
PQ+Neh4a9Tw06nlo1PPQqOehUc9Do56HRj0PjXoeGvU8NOp5aNTz0KjnoVHP
Q6Oeh0Y9D416Hhr1PDTqeWjU89Co56FRz0OjnodGPQ+Neh4a9Tw06nlo1PPQ
qOehUc9Do56HRj0PjXyYUGu+kO8Sjmu+kM+gkb+gka+gkZ+gkY8SPp/mC/km
4evRfCGfQCN/QCNfQCM/QCMfQGP9h8Z6D431HRrrOTTWb2is19BYn6GxHkNj
/YXGeguN9RUa6yk01k9orJfQWB+hsR5CY/2DxnoHjfUNGusZtP3+VNT36J9C
o38Kjf4pNPqn0OifQqN/Co3+KTT6p4wv/VPGl/4p40v/lPGlf8r40j9lfOmf
Mr70Txlf+qeML/1Txpf+KTT6p9Don0KjfwqN/in90j+lX/qn9Ev/lH7pn9Iv
/VP6pX9Kv/RP6Zf+Kf3SP6Vf+qf0S/+Ufumf0i/9U/qlf0q/9E+hwRvqe3/z
3cXbL9Yxo8XbL24x/xNvv/jNnO54+8We5vuPt188Z15uiLdfzGfOR7z94nTz
vIi3X/Q35yfefrGOeb9SvP3iFnO+4u0Xv5mXY+LtF611KN5+8Zx5O1O8/WI+
cz7j7Renm/c3xdsv+pvzG2+/aNWV8faLW8z5jrdf/GLe3hWvX3/G/DhEvH79
1JZPxreM16+vZa5T8fr1X8yPf8Tr158xD2+8fv1U53auWrx+fa2Kzr94/fov
Js7x+vVnzPM/Xr9+qnm+x+vX1zLP73j9+i/m+RyvX3/GPH/j9eunmudrvH59
LfP8jNev/2Kej/H69WfMy4nx9ovgC/tDaOwHobH/g8Z+L8HjR+n8iP0cNPZv
0NivQWN/Bo39GDT2X9DYbyV4PZ11fsR+Chr7J2jsl6CxP0qQ75bq/Ij9T4L8
OlTnR+xvEuTbDDofYv+SIP+66/yI/UmCfNxR50fsP6Cx34DG/gIa+wlo7B+g
sV+Axv4AGvsBaNT/0Kj3oVHf96/lXBDiXe9JqN2oUW8lHPegRr0FjXoLGvUW
NOotaNRbCZ/Pkxr1VsLX40WNegsa9RY06i1o1FvQqLegUW9Bo96CRr0FjXoL
GvUWNOotaNRb0Ki3oFFvQaPegka9BY16Cxr1FjTqLWjUW9Cot6BRb0Gj3oJG
vQWNeivBfrXMC46j/oK2bgv4ZQPzI/In8iM08iM08iM08iM08iM08iPzs+RH
aORHxpf8yPiSHxlf8iPjS35kfMmPjC/5kfElPzK+5EfGl/zI+JIfoZEfoZEf
oZEfoZEf6Zf8SL/kR/olP9Iv+ZF+yY/0S36kX/Ij/ZIf6Zf8SL/kR/olP9Iv
+ZF+yY/0S36k3zwtYv+3n2/dT/VmX8Lraa66X1rGPD1z6f6otb510P1Qa/XY
rPuf1ukdrvudVv4ro/ubRc3n/133M63vS+ql+5fW6ZhU9yut02mPV8L4zXU/
0rp/+oXuP1rnxSrdbww0z6+qur9ofb+Pr+4nWt/XM1P3D63v3yms+4VvzOPa
X/cHs5rrUxXdD6xicpRK9/c6me/HW+tJ5nzv1/299eb7m677eR7m+tRG9++s
zwEX1P04637XN1rnNd//Vd2Ps86Ldbr/1sucj6G632bl61q6v7bNnJ8Mul9m
5etArUPM+XLX/TIrX8/T/bEi5vx10v0vK18Xf6Gs2/fj7R8T9Ns/v1Bbzf1l
vPsprI9PBOr1Z6x5fhzX2sprS7SuYJ4vfbVeae4Xq2n9yjx/Mmjd1twvhur1
x908nzy0zmxuF5drPdY8vwZq/cDcL9bSuoJ5vmXW2spzkXr9eWWef+e0bmvu
F1dr7W6ej/H2l5nN+7vi7S+tvlK8/aW1X3yi1ytrvzgn3n7T3C+WjbffNPOF
j16vrP3ignj7TTMfVIy33zTX/wC9Xln7xcXx9pvm+l413n7T5CpEr1fWfnFZ
vP2muV7XjLffNNfnCL1eWfvFVfH2mybHKt5+09wvxuj1arf5cfs/4+03zc/X
N4i33zTbAy/0ematExu1tvJhvPvBrHwYYNsvHrPtFxfb9ovx7gez8mG8+8Gs
fBjvfjArH4bY9ounbPvFZbb9Yrz7wax8GO9+MCsfxrsfzMqHEbb94lnbfjHe
/WDfzI8HxbsfrKc5//HuBztnfn4m3v1gNcx17IneP34y8+EcrT3MfFhWa4eZ
D330/rGGmQ8XaP3JXDcrau1h5sMAvX90mOf7Yq1rmOd3Va0/medziN4/epjn
7zKtHeb5WlPrGub5GaH3j5/M83GV1h7m+VdHa4d5vkXr/WMN8+Nna7X+ZH49
Qn2tPcz2R5xev1CvWeXpeL0/sMrFbnp/YOWfs3p/YH1+pJXeH1i8jtL7A+v2
3RN6f2CVr//p/YF1O3QTvT+YbdaLy+8k1MP1/sDaj7ro/YFVnh/1Svj6O+v9
gfX+vuj9wW2zvN2q9wcZzIW5od4ftDH745F6f2Cti0v1/sCq98vr/YF1X+5Q
vT84YO5va+n9wR0zXga9H3hhvoFArTOa8d31/qC8WZ/M1fuD38zX01HvD6zP
o/yi9wNWn++z1sfM43VH7w8ema/3L70/eG9yPEbvD7Kb+b+B3h9UNycwq94P
dDHzf4TWU8zje0rvDzaa+X+x3h+cNQ9wvP2mn7mOxbue9P3zQw30/tb6mJ3u
b1jbh2W6v2F9POOp7m9Yx3uwR0I9Vfc3rO3QZd3fSGfOb7pr1MtMQwfd38hs
vv/Nur9h8TFW9zcsPrLp/obFh4fub1h89NL9DYuPpE8S9tv36P6Gtd9rrvsb
1v7uhe5vWPu5Vbq/Ye3fqur+hnU9Z4Tub1h8KN3fsPJuJt3PsPgI1dq6nnNc
9zcsPhbq/oZ1Paer7m9YfJTS/Qzres43rS0+PHV/w7pffrvub1h8jNf9jTMm
H411f8PiI4fuZ3wz14torfOb7/+M7m/UNRekP3R/o4+Zh3rHqa57Ni85mTmI
/Y3zW8oenbHan/qXeb+13TLShxr99Qc9c077Wnwj++vD3j56XWLgPpX3aeKB
QSGB7I+gv30z4+Pn/hc3s7/dPPmRzfvy7VXbprXpkZ2fj3djv3l+6D63dHFb
9e+jnm8xp/Wt3arPpSH17x305uNxvaJFpWQbNjd15/WK/76+OF909xHVbqnH
w8TO/TL6M+j/j0r35cXcuAP695Aj390v+egw+//dvmx6eGCzu4qb1L7P2baB
9KMfn2dT8vt3V+5nP979o8c2j0mH2I//eDjb+soN/mE//khI3yEVT7urpDmK
vSy8x5fPh/75o803Q3rHurF/Pn/r0+kpUhxg//zAojUjDlc9pK+//DwupsiT
o7z+8vfda545Px/j9ZdXgSd/r5T2BK+/XH/jP9fj2wlef7mTu1mLPj+dUvPf
73xdNCKI/Sr+vuVFjy33+h3l9Y7OF/M+6HfvmP59kgvpdkwocILXOw4M9qju
aHiS1ztKn+3UvlvzU+p9umM3v4X48/lxPaLvvGE1NyU6yusRZUY0bX3w9lFe
j8j817eiF2Ye4/WI4SfO3YhseZx8bKv7W6PYgifIR5H5A1KmijzB+fwWvOvA
82UnOZ9vzzjGDk1yivO5t8mUZYFLTvH6U4Z9B0sW7ePB609FtkzNGbX1tP49
oho5dxd/cIbXn1acS9LTPfgsrz/dytIq/aIX53h+GAWOVNuZ7bwqMmjlpg6f
Atn/4+/lrZriHueMh/PjcvHVqRoPOs3zY+sI14rnup4hb9V3Jtt6s/xZ8ra8
emy6AP+z+vsGS7wrfm7pOfK2bc31Vl8qGpzvCe1bfrtyx+B8N2pxb9XR0uf1
761XH17tW5/zqmzJ2AYTvX34enF+t/8p6eeHZ87z/Knc5N9N2Ydf4PnTd06K
4pEuF3n+tH/8LnTIjovkyafNnuenql1SWzrc80iVO5D9TxzfRiffrT++5TyP
b9/p09YbAed5fCvmzpTqbu4LPL7ue//zHdnuAo/vu7i6oaHTLvD45unoPrTV
zgvkt9C3uaeTe14ivxvGNW48f8tl8juwxPA9Yb2ukN/l98uVKJPlKo/X5357
kg7/66oq8HboR/9N/uzX4vgdexKWvEatazx+7T+mrrWy8HUevz7Nl/226fN1
Hr89jTaMqXzphjr9pGWW8zX82O/F8WwYWOXa2HY3eTzTrmp892yOWzye6zbs
rp7k3i0ezwmJGhYYM/02j2eKzh9zDSt2h/M7NPeQ3Q9H3+H8liyUI8mVKXc4
vzU7j1k6ZM4dlTVjzfeTt3uz34z5PlZwV7+g1Xc43xE73JYvLnGX893WtdbK
dXvu8vkmjN+117h9Xx2sMim0UxYf9qfxfNEZClbdl/0+n6+Ly4dCV3Z48vle
+y/868V0T77ei6Pvd/3Y84HaXHzjSL/lPuxv5xu4s3HLYT7sb+Px+dXv7Yu5
PFbFxue83D6VD/vdeH3rMxf1yjDsCV9Ptf4tPBvOeapeV50xJsdSb/bDMb7/
YGSfOTmfKZf8Gxv3deYf9Mdx/nfrWDhVjok+qsvjvn8X7B/EfjnWA/fjNR+k
VD48n4pm+WVj8XQ+PJ+ypgzufOuJN8+nqTVfDlHbvHk+FWg87ujUYd48n46O
eVHjZG9v8l1q8bVlgwd6k+/I4NNfLg33Jt8PN45YuWKcN/nemfngJT+HN/nO
0PD3rI3nepPnJZVODEm1x5s8d6sxI6T6HW/yfC3/wSIV3nmT5/LvO2+pV9CH
/J6sFRma8Rcf8nv1QZrY6eV8yO/tmV27L63lQ35HpvIpXLGpD/kN/jP24JSO
Pvr3Cz7lan2riA+Pb7kZ2Uu2ve/N49khY9CA69O8uZ7PSfH02dnGfmp0RLIu
NT8H8XoF1nej4LQWVx74cn0vViCmhGtPX67vE1pPDs/s3M8gn55RpZteDvFX
j4+ceLxnfDCvdyC/JvFouGNRPX/m1+klXi3pd8yP9UihussqN2oaqG5kT7/C
/0Uwr48gn49/+9+djUkDmc8Dt+5wyzE5gPVNv4G7j+1dE8j5+Db965ToxMGq
2atenfq7+/B6Cubn9K6F4RMjgjg/q0/3LpHqXhB5Xu82/2jfk0E8/wauuVvx
9V9BPP9cVLrk9+YF8fhv9JzY6+W1YDU7pccQlyn+vF4DHoatSLH3yKFg8lBt
z2+t668LJg8t2jR/lW9qMHl42KPo4jN9gslD8a0nlx1uGkwevlRb9fRgxWDy
UP1pj1zV8wbzfNjje3LW4H0hataaAcNDxgbyehHOj0mvkq19vyiE58e/yf95
UHBwCM+Pav+6VundLITnRwq/8+2+lQ3h+dHz9t/PxuQI4fmRrkO69C++BPP8
6PDnliyDgoM5X3VW39lt7A5Rpzt8mFw8jTdfD9aHf5bWWFJrQKga2vV0/2ft
gng9C+vDzLGDdo5UoVwf3uyLbTM7UyjXh+aj0i8tEB3C9WHb3qPvvl4L4fy8
r1vQ5fjIUHW62+ier7L68vnBS98//6xbpGWoXh/LZhjXvkQo+fAv5vHvfylC
NR/rYyZVDgshHws2fn3iczmE59fbvA09+tQIUyk7P5yS6kMQr8fh/Kq9q3XI
w2+hPL8SZeh7IsXVUJ5fDb5euLFkdSj5ST3LdfaV+mHq2JN/1ZXk/nw+8OQS
9LV5l7xh5GlL0lKR7z6Fkqfb/xX7+8HTUPLk9d4j0e6joeQpa2HvAhdWhPL8
anfu/PNkOcPV251BZ3OvCeb1Q5zvHSOvVu3xJIznt1fBkhcqbQzj+Z1704jA
N4PDyNPuwhuSx+QNV6WvJSoUEBXA5wNfadb9NfPnt2Hka/Sm7ssn3Q0jX8d2
tHlRY38Y+bp2bF+lHYvDeP6tPNl8YMigMB6/xd0z1ZyUwRmvy+jGVSb6MB6O
5/DOt3LljQ7j8TzZfMGY2lfCeDzf/LFCXdwaRn4L/p7zQrNpYVxv8hRfsLTC
tnCuX3GXGtR1Hx3O9SpD1gzphzUOJ6+vZk78y/EuXHnPTnSoR3Qgr7+C39sx
0ROPeYaT39/2pa2RYV84z+fq2YrtyDEnnOdv6WadS/buE87zN33mdrVr1gvn
8R/wZsAtz8BwVbxBmT3uo/0Yj/XS1ciBb86Gk4e954ZtHbIxnDwEbCiQZPOk
cJ4//p07dL7aIVx/fnRixxnzK4ST99kl793+cj5CxbQ49N/YF0G8ngzeBze9
Nafglgj9+7grnpYpNjWCvOdrWLe+V+cIrgetky2d2KRKBM//ujmvVSucLYK8
JCvwLXTOxQg15kK/qYPWBzAe+KkVmriMsT2C/EzZmnrfudkR+vO4+9PGPe0b
QX7Kv8/9wKVBBM+397nmX6xZKILnV9r/epdpmTSCfGX6NeXyXdcjVKqTt6KG
N/RhfPA19M7S4RV2RZCvm/2S+NyYFUG+uv7nN7ZHzwjyVXZfu/DZNSLIU46x
iZt1mhqpJv97okWeVPr+R/D15vzYvQO7R/J87emVLWWt2pE8P+eq280880Xy
/HxY79e1I/6L4PnZ99DmlgMDI8hn8LlEfc+siFRjyi5cOOd9IOOBz36F+jS7
OC6SfBYr6N/Xt0Mk+cxea82vw6pFks9iiYfPHpg7knw27XlsU9FvEVwPPtZJ
FezmjA9eb5T/Oip8YaSaHX4h65kxfowPXhuU+6Nx+6GR5HXXeK9r1ZpHktdz
1/Lm/qtkJHl1f7RoYZH0keS1W5fZI4JiInj+TprkuNJ6S2S839990Ttn5yj1
9yS/d4vKBPN+B/A9bZBneK+aUeR5zLW+6Z7miyLP1e5P+21WkijyfHfOt8/t
wiPJc5OxFzJnuBlJnpt/mVJ/3MFIzke6St0+Z+kepQIaJkt1LW0g44P3rNOW
eY2vH0W+99Tp0K1C8SjyXcv15IslLlHke+7922Ufvosk36nrDNub2zeSfNdt
crlo+/OR5HvU9rpLvHZFkt+pbQYfmOV8PcmOdw+/ndWHrwc8r+jcbf9P1aLI
86jLjTusyRJFni8bWfp0i43kfKdK1LzH+czR5LvylSNFW72K0r+fXMvj3uwH
UeQ5e7Wr80sciSLPOR+5B9RfHUWew0N3zrgxIYrzm6VdnV+9y0Sr8osmvyrb
MYj3p2C+B3/qe3bWT9Hkvb5v28mJP0WR7zmpSxX66h9FvtPmf/Vo9KUo8p0i
uODQoD1R5Ntr/N1iL/6IIt+FV2Qd3NX5esDr/CNj8tQtHa12Zfwz+k0BP74e
8DsoU/463TNFk9+Vp1NlTvUmivx+mLu8U9FHUeTXLevrGr8ciuL6E9NlUnj5
uXo+/l49a/Wy9DHq3IuYDc1rB/N+HPBd94b/P7PCosnzz/lG7AoxosnzkmFB
hX7bEE2eR3ccvnvH+GjyPHHby4w+raLJo9rTOFHfdDEq8EGz+0c3BjAe+Ax6
3LnzuNfR5LNHknd93Z9Ek8/nE251SnMhmnyOOV2rTPV90eTz36eDmuZfFk0+
/01auHX/sdFcL6b2zZXKu1k0eRkWpPYO2h2j0m1v+6Dz/mDefwR+bvmdPBfQ
MYbHc02ppZWmXI1ROXxGuB+cEcjH4/g+7P78zbrVMTy+reoWXhU4MIbn69Zv
ufeWqhajGryr1HvKX8H69+jl+ct37/RsWOlYPt/IPT2Hl5rh1GndHnfPFcjH
4/V7LL1xacLDWL7eN32qFWmeXv8efenfd65u10D/Hv2BPpELsk94rioeb3Mt
yaeg//m99xKnztY+eSqWr9ev1p/v3C7H8vj1z9l1e+K7sTxescHVun15HKuP
V7Zttb/6xfJ41czY5MKM0Fger/4Ps34pFRnL47UhuUto+6hYHq//bid9OCo6
lscr58NcH8a9iuX5Uffbw2slvsTyfEjrtjVPVFL9e+/lbifpNjSV/r33Llma
rJmRTv/eu+/4PgVu5NK/9/7TisCAL2X0773nn7TZ63I9/XvvM1LWv7q0jf69
9xF9exVZ1UP/3nuSyUem1R6rf+994D+T1vcto3/v/YFrubPrmsepyt55Sx+8
9r+/195kzd6xBf58zvNp3J8eJxIfes7zqdHi6GWdrjzn+ZRywKEm1Z495/p1
Pce2SVlinnO9UhkaJLv24TnXK89H17blS6F/r711ol8XPsysf6/97tO5B3rm
1b/XPmbpH5/XFNW/1/543fP2a0ro32vPuzBL96ll9O+1X1G1D1evoH+vfdL8
rdGnK+nfa3+f/f2imVX077W/OHpgf6Iq+vfajzRc1rddZf177cfON/pvXyX9
e+2Pf/rjU4WK+vfaPQ51u5+1vP699qhmex8Hlte/1/4kT5lX8yvq32vv7dYr
TcHK+vfaV/Yv0P+/yvr32gNe/NNwS2X9e+05j5y6m7am/r32bBvjcv3XQP9e
e8YmAWG7Wujfa1/9dqXH7fb699r/PhbdO65LnIrK+luFP8rr329HvhrQP7xv
lQFxPH/bl1jyW+jkOJ6//h63Z71ZGsfz92jTv4PDtsTx/C1bcmaKwQc1PylT
5n6a82wc+bmfeqDR/1Yc+eld4W14i2dx5GeQ83RbHxZHfoanmF5evYgjP11f
zzp65l0c+SnSoGzSzN80P1fK+PWom1x/viNqd92Qt2n15zuqXe49YaGL/nxH
cKPnWZ9l0p/v+OnayypFsujPdyy70e3F8J/05zuml16baGNW/fmOwd16ffyc
VX++w33qJ6PvT/rzHR0qfW62M7P+fMfMl19zRLvoz3d06RW7rGhG/fmOgVfm
hhVIrz/f0alMg5Z90unPd2Tv2mVXmnT68x3eh/eWOJZWf76jZLaI3e3T6s93
9G8z6PP4NPrzHb6zP6UNTac/39HBNe2QBZn05zumZ8mRPkM2/fmObW031/o9
l/58R6kji9765tWf78gwOWvKnYW0fptzzuxNfeO43qR42Dbr8fr680SZv1R1
n/qb/jxRZI15gyf11p8nqjuw5fp3I/XnidTxGe2/TtWfJzIGPs0Tskh/nqhv
wTOVWqx+ofr4jz1z2clHhnYFvna+v161bTu5X9aPgUbWMQe/rvu0VA2a1zx/
4iX+xtFVM30juqxTBSa0/ni6q7/RKW2q+sZnV/Xm5qndOzv4GB6jHHP6X12p
Wk08nGp0kiBjQ0Cbvwsf2abcNzSvVLWPv1HvXa3dM323q+YZFnu0yuxjdHZP
U/yvyB2qRO2N61r8FGIsbhBQyfvNP+pP36VPFzrf76yXA8ql3HFEeT1J0S52
f6BRIbR8vynND6lqG7b7Hx3rrNeKu3t/K+2uzmfcU3niLT8jlff9vgcLHFBN
7ncuWamXnzFrwNsPbhMOq0ePT4UUe+VrDFvq6Vp1qLva2iP0/M3l3kaqKW/z
Dk/2t7qR3K3651Lexpa+r8qnnHpApU5aq/BAZ72wa/5fHdO4HFOvN/wUbEwO
NlL2qbp745DjKv+9pjcb/hpsVLnfsdPI1SeUV64Nn5tlCzaKra6xKb3XSZXu
1chxE6sHGvVSVlpdZtlRFZx7zX9NkgUad346sKdsK6e/qPedbNsCjL3pek6p
43VCJT516VBELef+p/gfd+dkO6WGNG4/vN0iXyNweNmng9I4/XeGDu1SwtcY
ONL3/fywo2pCJeN66tvOei/x0ZUdjxxTOf8bXar+cB8j32V1cd6W42p4qSHT
F6bzMdZ5Nm+/ZeEJ1W5dpS7fDngbf358XDlRt5OqrNuGCY3aeRtDSrZ8nyro
pHo76ucO198/M960auoY+PspdSRPwJ0SwUFGrsAgj78HeSjH/QbZlx0MMt5X
XVPrz4jTamTTKy/WTgkyHrvc7POm5Vl1eNaYybuaBhn7/No8bbT4nKp6NO/O
RtmCjLNNhmeJSXReTfMtkC/rU3+j8+ftv/wx0EPNXFBnYuUJ/kauKo9Kbll2
Wr0u9nPZqVn8jTwNd147uO2MOn9yZr+eR/2MrIsX7ls/46yam9fll3cd/YxL
9S836VDznHL563WlcR99jQCPEarYx3Pq38UPtq/Y5Gu09hy7o4eboSZef1Vn
SF1fY/DjMpX/KHpexbYKOT8r3Mlbn1lb+vc5r/ynpfENCQo0SrfdWb6r53m1
ff3cJaUPBBrDXt0P7bf7gqrs4llz0uRAo79j56Eugy+q4SUKuLo2DjTWV0+R
4USuS+r6ivmn8y3xMWosf9omw7bz6lqy9yM7lPcxbvqVvHU89Lx6HzY9Q7Yn
3sZAv9XpvhS8oK6fURfbTPM2zje8PGdq9wuq+N3LyQoW8TbG9m06KPf8C+rM
hXU5UmYJNCIrDBxy7ekl1ds1d4tbJwKMtqc+Pi0bcFl96Jmp1o7mzvq5SvZ3
iz2vqD1f/hjzIdTfWPQsvFvSxVdVtbNJD3+b6m/0zp9x8PK219SbjpX2O9L4
G4ujAtPMnXNdVT1z4XjMBud+7nzmfGFrb6h3vpOeLqjoZ4xvuKPpn51vqtJD
6rn8c9XXeLRm3rqrbW6p6xNcLrzs5mv8GlK0dNpKt1W5yeUv1n/lY5xasnrL
/nR3lOex6et3rnbu/z42cd81/I5akapaYHHlY8Qtujis1pQ76mWJrsM7RHsb
h78WHtV+zh3V9kjfTXlWeRv9JixI23nHHXU8ZXPX64W9jSRvS9Ye7nZXFW7a
6equN95GtzxRH1o8vq/mlFkzpulZb6P+goy9EjW5r1J5Nms/fLq3MbhRwKGq
fp7qY8UnheZX8zZGV53We9NaT5V58+dBM0b6GNUPfG5X7+wDle7C3twHKjnr
v4C3y+rXeKC23NnW8c/lPsbph71jQ457qfr7IgqM2e1tLHFN+mZ706fqj5mb
hvjv9Dbajs5/b8PbZ2rU2Zapu//hbewvknxUuotPVdEiv5893yDI8M/4Z9Dn
P3zUwBXbkm7PH2TkPV03+Kf2Pmr0/rwRTT4FGhNXXjo7o4iParcppuOTh4FG
r5w/5bv13lsVS/pk5YpDgcazT7XnDb3urVblvfHzANdAo+vTwifTrfNWB3pn
73Krf6CRJ//YBm+GeavolT8tvVUz0JiUIfrjkz7eKse//mV/yRRojGjTs3v+
wd7qQ6tTd1/dDjAapLv/4ulIbzU3ecGgKRMDjCZ9CrTN9Lu3Ghsx7fqWAgFG
b79/Fv86w1vdnLB2f4lb/sbgzysfjV3srYZ6N6iQapS/kSZ68ftkR71VwT4H
NtTN7G+UL/P0b88Ab9Xeu98Aw3n+fTi2Y3ytjD6q27FV01J18zPWtHfxOFrS
R+3+2OvhuhR+hn/oyKvXS/uoOkbfSoUP+xp74s7sfFvdR6UZ1WDh8i6+xvAB
x4yzjX1Us5XpR/kk8TWiNuT7Uso5X3m3/Zt6+BEfY1GVtEdVbR+V9dSytyuG
+RijdjZ/OiiRj6o2OfWGhUV8jLk3Gvee6uGt6uXNtHBNgLeRZcrUSQXGe6vz
H2rs7xXp3M+3zv24aQc/9XO9hY+HXnPqPmOfG598VelDfeaN2R1k9PzU+knf
rb4q8towrw3zgozbkY0X/d3QV21OVft1WP8gY3KT31Nvj/BRb1e2/WXKwGDD
xd1IuvWDv0qqahtZnOt7g4B/fZfN9Vc75yWObVg82DiRZLvPop/81Yydz1ts
SB1sxB657JnzgJ/aOiv1PxdDnPVb/zXP8rUNVO+jNhRsdTnY6N4ydmbnvIFq
yoVg49HOYKNt1oEbm90PUAtTN60zY16wsbTEpSErBgaoLC51l8xPEmK47Ovo
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
DZkYbHRd8ylV1TKR6t+6M84dahtsDHtXqdvtLJHK/WGONsXKOPd3Kfr1HfIh
Qi2qv77idOf5WPJhBs99fhHqTnTwxp+jnPVQLffEZVdFqhGhf/bo4+TRp1Wn
HP6TnPEzFP1r/V+BxvTR5w6d6BmpJg/tXvikI9Doudb3TaZGzvglXxx40iHQ
8LhcqvCgkpEqV9pZn1+VCzQ+dp41436mSLW+yf3x2dM51+O8+RJlcMZ3n1Bz
gOvdAOPbvZYl8vhHqOYnm05LUtvP2HpnWKrViyNVy6JN1i5/7WtMKf3zvkJj
IlWKmts2tHDzNZbEDp9Wt2OkalQ67/UKfXyNO4nDol/XiFSLu7fMmi6HrzFj
eq5F1/JHqvw1Uu94f9fHGH7t1bwRyZzzUcQ/6db5PsbF4enG1YyIUL5J/iqa
wbnfHzny8LvKWyLV7k85L9bL5FzPOpRt+qprlArN8qBW+9ggY+HNyxcX1otS
FwaMntPNWe/kKOxTt9MvUWrApDUFum0PMi6cap26RcYoNW/xvl/aTQsykrTM
eWXgO+f7zzRxjOocZHzY0aDaGb9IdTZPWEDpis79WvfmL1JciVT3/mzUM1OG
IKNc5NqOC/dHqq8tX9cL8g0w5rYs2rBHzyjVdH7dLUErAoydFVfVutckSq39
5eT4T40DjMsua5MmKx+l7jeb92XlZ38jU5kGyybnjlJ5JlW7tviwv3G07D/j
viWLUonv3Z3yZIC/0aXpoIxHn0eqnRv2V/g9t79RwBhaZMOjSJWyZHj74ff9
jDQ3Uh3adSZSFcg2tVmIk+fi/6pfXuyMVMNmZ+pV5l9vY0XydMs69YpS+VIN
ebBsr7dRrkTAnY51o9TF7p59P/b2NibdSHO5XoEotbJ49vDPOb2NVmdSdjuY
KEqVc2+9qV2mECNtnqCYNzmiVa2UfVa9iQ02/hlw8v3FL1Hq8fzdasn1YGO5
t+tkIzBKFR7xbWcKZ70W3jJxz1ZXotSwoBmeo2YEGwM+7+lX0S1KVdx1JfP1
rsFGr9yT3w9fFqWitgTezlAl2DhQ+udK38ZHqa4jfa/0rhNk+PnnOlKwfLQq
1fPw7tQ5g4y/ChYpcyNntPp1728L/nkdaLzaXsptfJJote7z3tARdwONhm93
HT8VHaUG5bjXWO0LNHJ0zvr3mgdRau5Dl/GF5wYaQ7Z82pPBI0q1LFeyhW/P
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
       "], {{{
          EdgeForm[], 
          GrayLevel[0.8], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
FtiT6APms2AjQR++I8Gf7J+qO6ug0XS9zVnzut0WrrE38uw5oSNZj9OObVjL
k9+Sb4A1XLBV0sW7vKdyH/8NOqK30qnLpimnKTu/Od8o4y7YIinP2owxz7Wt
8zzetylrSa5twvqR/Mb5T+Q3zP/mf87Cuqn3zKx0ZaXTCqYTrKRr06Rflmds
GdMu0ysz6Pr0ZdMBMymdseyzFPOKOcdZim+K722apsdmu8JnrR1yDVqH+3jW
aanLN7kP79A82bdmWmPmst/xdrfHm7E9PXVZ185IynfOmW9fwX6C3QWrCFYV
vNPtsed+znDT5X9Cv5PS19B50+e/r5D/2luwYlL6or9gLsHcgvWSzsPaJPhR
bd5dbV47+dkEfZPOLlgn6RyCfknnFKyblOeun+cxL1dJW2jTqknpq9WSzpj5
wbxhvjBvvg09+mTTtC504DSZT+3/SkoftMqmG6k3Vdn0L/dPUTYN+Y2gEH6d
vtumYMqyy6i3mPCegrpgEUENGkywaFKuNcumSdu06UT1z5nqn2rZZ4qP098/
hQZm/+A8tnT+2y+hM/vkm+/Kt9uRPO9mrfgs7STljMH7P8nawVmb8wXv42zO
OePDjD99wLtp+8dZZ2j3+KxB1+s/n602P6Q2L573FflP/LdG+q+V/7pUUvJL
5jr5GTUGvVhDlK6Q77t3xgp8qtT9V+86R+9aPmVcWzF1GcPV0y98CyuljPFc
s+xvhG94jVyflG943Zqr4f9Pv9MfZ+ZbYT/4OP+/mn7iejnjzzzolXlBe9rj
T8o15liv/L/2GNBH2+b/L5XxqWc+LMG3q/94fs3jwHvgtXDm7M74vtftlPF9
t9tpR8azR+bZ+IwT+f7QBqLBfmuYd7KnYC/BOfn+98ha3GQPylpZFdSyLjdy
jfWxLKhk3aykHmtld66xtha5h/W7p6Ceb/ovteHvTq/B9dTj+6bsn06v1z1y
zyJ5f4+sH//q+n+d/v4ndjrPesB95L8RjBaM6fQ9nygdL5iQsqcE3wmeFjwj
+DZl5HkfdT/tdLtIP+v0ut8p6EpbKfu802sPbSllf+hIPdajUvLz577urG1/
dvr/f5/3PyuYssvtpo2snd/lOmd0+FDwnIpu84PgUTW7zZPi2uCs3/A7+nWb
RoJuvjB7A+t7o9v3cc9aTfOMztBceDDfMfO6znfc5Xf07PZZiTxndM5WnLU4
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
wt//HuzXGt939A0u08vy5zXyzT8d/i9rUq1hHfrboOUa1p8eCc3WsJ797cI7
GpbhDRfe2bAO0E3CKw3rwd8qvNyw3u0I4V0N877ggX1TmId1ofAvC/Oe4Mv+
Wpj/NZR1oDBfbJjw3wvzwq4QXmpYrnOj8NcL80yPEf5X4fXxauF/FF43rxQ+
ujB/ah/hT4ZPt7fwMcI3E76v8McKf2Osi08J31z4fsKfKMzD2kv4h4V5YfDd
Py7Mkzpd+CeFeVJnCP+7sK7kNcL/Kczjgtf1X2H97BuE/1tYl/p64X8WXuuv
Ej6zzudrhn+BTQKyDuTu6D+hC4Nsva/2ltkEswvWSTqHYDXBDIIZBasIphNM
L1g1KddWEkwjmFbQL/fNCY8O+YpgAcH6gnkE8wo2EvTJtQ1SNp9g3dw3l2DD
lFFv9bx/JsGagpkFswjWSBl55FiXC4Z2Wr5FOiy8Qnj0Q8K/h48/KPz6Qbn2
UK5f1GkZ2GV5FjKxS5NfWzBr+mitvJ/8w7nv4k7L4kgv6bRM7pLcv55g7vx/
9IvRZUevv3/+K9dWFPROPy4paAiagk3SfwsKlkpZiz7T+E5BHyldOmW9Oi3n
RqaO3HvT3LdQp2XelCEDR76ODB55+2a5vnCndZfhcaM/35aLs0chX6cu8vYl
VK9I+5YXTCWYWrCcYMrkeWdZUMmzSauCRQQ1QY9Oy+15Hm1dONdr+a/duZ/+
+FrrzMY1z4UOQadgcUE97VhM0DP5RfPsnplbXXlWn9xHfuVOz1Pm8eb537QL
uwL04RmbPzkDqqyv+uGUTusq7yg4S7CrYDfBD6qzPf9VdU7N9Z0yFzincPY4
XbCzYIDg7Ny3e+Yc5wvOHr9yJqIdhd/J9T06PTf3Tb0hqctz0VlgTKARePYE
9c+W6p8zhe+S9p2Rd5If0en/QBuv7zSdz9npFsHAXLu203Q+55/rklLv5k6f
Qah3U6fPNeSHd/qcQn6k4LT814vzvzmPMe85c3EeuyHv5Ix0Y1LuR9+C+cg8
Q0eB7/WKTuvCY2eC3QrP/lb/cZuadUPReUVXFJ1XviHy6I1Shg0KcmN0gThr
TVTf3q50PdZOpd/pOdvXrBNzleDqTl+nv+i/ezot80UGPCZtuVJwd6fPaFy7
N9ehxe9LypqCnJkz3ahOy6vvTP7V9DXjMDZ9R1++kPGgb15Kv3DttvQlbWJd
LHV63r+YutR7PuPE/U+ljfyfVzJmvO/lvIf8cxlj7kHv45rkn0kfkMcugf6j
3/tGNwJdBvSssVvCfgn967eSR6+cdaFtW0bK2oNe+Ze5hk0ONkTY6Nwa/hr8
NuwcGGNsiz4U7X2Gyn6o27YBGwd0eLDnwh4Me6mRuQ8+X9s2jGvwIZHhIgM+
U7CLYNfw6k7J++C9DUz+5vDsyGOrgj0YdmnDw787qeS2DMizhojOGag5Myo2
ZdRFZ+mm1D05/MHj/x+/8IQ864nUpS+eTh+0bSJJsXt7W//5aNX9qm6bsglp
03kly2SR0e4tWEOwpuDluvMf1c1rPSL//1HOjmrnDGrnY5xBhc8YHdT9os/y
OOdRlc+k8oc4Uwqflv/FWVn4LMKf4gwtfHbhz5TNI51TeB9Pw0m2n+epT05U
+R0qf5ZzvPC5hM+f65o+pQWSQl48wZlbdWZWnTHQoMJnEz4a3oDwWWu2uRus
5/5bNk/4sJLl8ecIdi9Zhn1WxnY3wdlJdw/f+PD0BfKpQ3M/MqxDkt9GsETJ
OhCPqO+WUvpM3fr6yG6xgXok85d9kvs+VNsWRR6Q9zMe+2Qc1hLsm3RtwX5J
+5a85rKXr5Q1eIXkd00Z+w/7BPsl++duKYO2Yt2Hrlot932jNmymNuwvuq1v
5FbYdWDfgd3cASlDpnWM3r2ZYHPao/zauYf5tWmu7Z738I498x5oq3EN27DM
z7mh03QVdNZeuU5+n5RB+2BvgV1l29707awL23aadoFO2S4ptMk2naYbuLZ9
ypYRbNHpvZd9e8uk7OdbJWWf3zop92P7iT1q2/b02a7JNqbP5DtjvNcvWfdi
J8FyguX53jXe6yp9pe7vewXBiplTKwlWFuyculzDZgXbFWzXdlB+GcGygh2T
8lzsb5i72IkeoPw6Jev97J+5QP5xvW9VpS/UPWd5zypZX1bMu1l/4a2xB2P7
Mjbv5n98oDmwkObA/4RvIdhScFzSrQTHZsy59rTesaHS1+u2E3o344Qd3vPp
uxvyn7DTPT7P2Drr1tb5Vk5Mum3J6xwpejMnJ0W/5Pm6++Wdum38Xsg7oLvh
i8IzhYY+NHlo6EOS/w77M8Ezgp9j34Odz6/YbAnGCr7Fdir1fsl1rk0QjMm1
nwTP5/4fBM8KnhP8LnhZ8Irgx5RR7yPB/YIHUvdL9W1/9e0nwh8UPCT4psN2
ZLzjM8EjgkcFnwoeTh4blxvTl4O1Zi2kteuJiu1dhucaNurYurdt1m/KNeSi
C6juY4Kv9KwnBE8KXm84nUvf4Pi0hfd9nPbSvs/Tlsdou+Dx3P9Fysi/KrhF
MKLDthi3pB2vpezW9MvNqQcd/GP68nvBV+qTDWqmkX9I//2Re15NX14ruE7w
W8aKvubc8n3GgbMI7eP/cUb8KePMOYFxZfw5J0zIOHOO+Tp9zxnim4zzW4I7
BHcK3k56l+CdpKMyL7ATuzHzg3R45sT1uTY2ZTcJPhTcl3nwevpjpOCNpLcJ
3kx6u+DdvOduwXtJ7xGMy3Xa94Hg3jz3/Vy/N/1yU/r6+MwXvhXsYvA10PaL
MCLjhO4peq7ooqLnelDybf1UaDJ0YQ/OtR3zLJ6Bvi16t+jtooOLLi86uejt
or+Lni96r+i/ovu/ccqo19brpR62OwMzf9t2NdjZrJdn8+4N8+y2Pu9heTdt
xc8B/g7Wa4lO1hzv33LbKcN+HZ1RdPSRxWJvht0Zvg72z/W23jdp246HFL1v
7BGh26DFsBM6Lf9/h/QB7b5A7zxJc/jOmvXEuQ//Crvkf/N/0ANGDtzWCz47
/YJtGzZu+Fto+3TAxwNl7DfsM9gcQhNjw4h9JnQDPgT4f/gTwLcENm2suexX
2DbDe8WOu+0L4J+0fWTmwXGZF9xzbO7jfdhVYl+J3wP2fOzhOae+pz49Rf/x
3Zb5L3xbrJFt3xb4usB+Gp5zSTBIcLLq31VzX0BD35vxxH/HpV2TfWdcnDG+
NHlsPcek3/GJcKGe9U/Z9qBP5Vrbv0bb3wZp27fH/Xkf9qlP5562rxDePTTj
Cb08n5rbEVoTfg//iT0BntA/Sidm/b1YcEnWQtJLs1ZelGt8f+cJzs93SHpB
vt1zc439Axvhq7J28ozLsp5eLhja4b2H69gDP5myYYLXtFZfoXTWwra5f2Rs
WJPOFpyTtYB3Xtjh9XuQYDDrgGArwdaC4wRbJn9CyrYRnJh0W8FJSbdL3c80
jqvXfE6CBwAvn3YfIjg069qFeR97yJD0y4N5P/ln8p+uyX86THB4h/ePy/L/
Z4CHqXTGwuvfOem7Yal7RId5V4zJvx3mYZH+l/XuZMHADu85pwhO7fB+MzD5
W1N2Wof5Yv9l4DmPHh16CP4ZvISDc749KteGhb5ATnlF0iNzDj4y9Ubm2adn
DT4pbWLNPkNwpuB/gs/Vn2vVbHv9Z8YSO9q/kr8u9Rir65MyhnfkGWd1eC7Q
H0d22DaX7xvfHrfl/bxveMaVdtyY8SZ/Q55H/vXcx7vvzLOZT0d12HfBpnnH
xskf3GE9NfTV4HOx97AXwQuDXoF+gefFvsU1viH2OfY3+GHsbVz7u8N7Idfg
qXEftAZ8NGgRngUPj70TGgreHO8hD9+OMugUeG/QUtwDL48y8n91mP7gHfAN
eTY0y8S0hb0UXip0xp8d5q1Cw5GH3/pnngGvl/UAugP+9F9pO/xfyrhn7sK0
xDyFeaW858vMS+iJtzNfxyUPbwV64t3MP66/k3a8mnZDO16X8Yf2+UJzZp2a
7QfgDcE34vvYXbBH5vj2gh06/C3xXR6W+b6jYKcOf4uc0zjb8a3umzzfFv4Z
Nsqc2ijjzTPw4YBPgYM6rLfI2B/Y4fMfeeb3dnn3IZkX6+fdG+S5Q/JOzo7w
6f/OvLgoZTyP9WOftIk5votg1w5/tzvkPzAvd8t/Pjf/e88Oz9ldc+20/Ned
O/wdkA7o8PcwIM9l3T047b0k/408a+feaQfr917Jn5f3kL847eWeBSPTwHaR
oXxPYzSvxug5dBOEz12zHHHl/ydXXCVyRWSNK+XaHilDPgfv7lTtdz+ULRdF
lodsD74fNibYnCBHwK4EexPkpMgBkYfdnzLqIYP4JPXG4ttC7XlJ6XHa3zfs
tqx8z7yTd8Czg5cHDw/7MWyhsInCRhfdanSssW9DRoZsDPvTx3MNeyTkQW37
pAdSj+v/6L2n1Wwfi/42et7YbD6SPP8H/ib/ry1HeSLr7ejk2zb5bRv9h3M/
MuH18v+xIb0v7UAm3D/X/te0zj+698ickYshA0O3G9kZsjT0DtA/QGcBXQZ0
GvCRsU3KyMPfhc+LTRG2JsgukVnCc307185resxejq7NO7mGDQRyvbaNCCny
a2zmsD+jr9FrWCztgJf6asYDXYdFc+3ejD82SMh9sMXCZuvI/Cf+z+FN642j
w4+MaXzmQdu+a3zWDp7RXktIsU3av2ndAPQETtMc/J/G7taaZf9/CD+mZt0d
dHiwKRuV+/ifyODXTb9jI4J+CLJhzuDIt9pyLVLkVOi5o1PR1pcnRaaO7vuZ
uda2s8LuimdgP/ZF52SbK649ljLs1UblGcjj0c1HFo990KO5Tn/Bj4aXDX8a
Hgi8aXjS16bs2fQHdmXYbNFPvJ/8tU3bK2GjhA0D8lzkuG07B/Ivpwx5LXot
yEOR4zKnv8p/wO7hhtxzR9PzCTsXvgd0S5Al06+8H3sybAPOSL9gM3B68viw
QT6LLcPNTc8t7IDuTh/w/y/P90T/vZa2cA98ffj7yASwB0eWjWwbegb+PrII
6J+nk8dfBPoJ6DY90fS78d81MWXoFF6R+/husbO+N9/kTVlXkEU80PTYYCtx
UeYl87Qtv2zLMx/JtX/zbHQTkUO8lHbD6EWfEz1ObPixI6Ff2/7y2v7zns+1
X3K97e+KlDF8uGkbE2xYvksftP3ekaIr8F/ez/uG53/Qjqszd+ij3/I8xv+H
3Ec7rk8fM+cG5Zto296Rsi5gN4uNLmsBepFz69t7oGK9yLmU3l+xfug8Sh+s
WL9yDqX3VqxbOq/ShyrWee+D/UXFupZzKr2v4nmE3fV8eQc+NbB/xe8KNgjY
IkyZsmXzvWF/Pn/2AMqwnUVfdT497+GK9ShnV3pPxbq9sym9u2LbYmyMsb1G
h3eWiu0T2vb2zAvsgrF5btsWk06TuU4bsflu20JTD5tN7JOxh0ZfeFY9b1Rl
sq0y17DlxCaZPHr1+HvB1qNtR82z6OMV8v+xCcWeeeauyb42Vkib8LWCDxL0
dn7O3EG3hHnDOOPbAB3jto8W0rZfFlJ8xuBbhW+G7wNfaegnz9SwvxbKmNfo
EKNbjE4xNvLY8GPfv1BoCq61/ci0/cqQMvfx28J7eMf20V1s+zQiRXcZO3F8
DeA/ADtWfBDgYwBb8qVybZr8V/4/Nr5L51rbH0HbP8GCmRNdmRfMpx3zHvRE
i7yH/4CvAPwO4G+gZ/4T+VrKaEevzCnexzicqfH8Rc85S+nxGrvbarbJxS8A
vgqwu0ZX7beybTrR7UEXqu3HpF/XZN8obV8p/XONtsNvgi81MPehd0U78HGD
XTl+U5BdYVd9Sq6j59T2pcK1U1OGbtY5assJauftNffTZnnHqU3TEOhA0vb1
0yZsTNGtgm5gfm+Qa9idHptrhzGP9MwTa7bV7505iz3tMal3WdO2adi38q1s
mGdRBi2DDtAC+a/w27DVRC+L/Xj+lLX9DG2U+9t+YeD5nZb/h+4XOjqsr21/
GKToTNNH8MjgdaEnjG7vCg37dYKXh78dxhvfQ1tkPuGHBx9F6BCjSzzJl1Gn
fVjQx9in0w7yCPXoI/oPHwWzZXyw6Z67a7K/CtK2v4o58z+Yf/gkwtdRW9+U
PZi5uU2uYVePPf9eXZN9G23eNdlHEu1mXURnGD3jtn8Q1q+2Px3mBP8Dvh78
PHSi90gee/09k+c952qu/FG2Df9euYYvMvyVbNOwPRw+v7ZJWtL4D6r5+9w2
7Ya+5Hv4t3Oyjfp/ob060mdtez/s/7DtmyL55VOGPR/2bNjFYd+2Qsqw58PG
C1sv7MOWyXXun0/QIejssN0Z9lPYJWEbhv0YtmLYpmEnhc3UKqmHHRv2aNgx
cW3FvId3YI/XTDuwn2skjw3deM3/FWu27yJf5Ey4Vofli8jJphb0LpkOYG9g
jceGDFuyts0Zac8O25VVc22JPI/3YZ9WyTXs1srJL5D/RL5P/ndX/g//++fI
0Hj/NCX3F3Zh9At9+W3Jtk/b5X/S39gEfqr/tUrNZ9llMj6cU5fL+Gyfusvk
rLtsrsGfWzxt3zb9tVTOpejWoWO3Ta4vmfPtihnPnfNsxnlAUq5B57IHs/eu
+v/GauWMP+OH/h52cNjIzdLhFB+L2CQyzlxjPPmv2LwxrqT0xRma78dVbQc1
j8r/K5nJOmuHn4FPxtk6nOLDcfYOp9hwYsuJ7WajMN3E2EILcOZgjWDNmLfD
z2NertQeB8EDdbVd6aN1+4I4Xe34Sd/T3YIxak8vtWdU2TazLeH3CH9K+BTC
7xT+hPCG8HvRHxU+pfD7hT8rfOqaab5fM+cWMpu7pEuTZLxzCuYSLOjtedK1
eQXvq8L8unfh1BVaWk8wt2AewX3o5uvCVLpwh/DHhRfCbxf+mPC68FuFPyy8
Jnyk8EeE96hZdrp4yXoGD6v8RZVPp/IHhT8vfBrhtwh/UHhF+Aj0j4VXhd8s
/AHhZeG3CX9UeE/hNwm/X3i38OHC78MOTviNwu8V3in8AeHPCe8tvH/+N/8H
uvi39NEi+a89StZTmJUxF9xfn6TyWnqo7rbXS5NMJSeddRkz6LKlS5NMdEq9
SpZ7TyGYUrCYoGfuWTTPJr9M6lIPWfpUWSNWE8wAX79kefj0ya+esplKlqlP
mXvQ0Wjm3fvk22LdWSN1Zy5Z/2KW/B/k3sgP0FXZKCk6KS/nf9AXffO/Zxc8
qIbPofSJumXpi+Y/bZWU/tg4z0CfZZOkzKlNkzLvNkvKnNo8Kf29RVKeu2ba
S1ufZ+/WeM1TM59spXzr8LSwF1496y92qdipsi6TYtPK+vhRyf5YWROxQccW
nbWSlGt839iEYk/KOkvdT0peaz8r2b6UbxrbU2xIWX8p432s09QdX3LdT9TO
5Wpeuyn7VPBvyfamvGNinjEuz8V+9bGSbUPRzbqqZHvQK5J/OmVXl2xjek3J
dqjPpIw8/ANoYuhlzufQweR59sdqz9JM5A7/P+xm2ROwt8UOnzWIMvLsG/iu
oI/YM7hOHp4LdDB08eiS9YdoH76SOF9BC3+b/0B74dlBK7d9z5BCj+NveH4t
LI9WzB+A/wL/Bh4FPB34Q+xR2MW+ULLfBGxJsEWBfzc0eXh2lyc/JtevTNnf
+r8Da+avoccOPwKeHTwJ7GF+zrNfLHlfJ32p5D2BdGzmzRMl29Uyjx5P/uuU
0QffZwwYk7b98JjSZBtp7vku/UG9H1IXe+Hf8h7sq9t23fxn+Fz0MX3HooJt
dLUw34U+Zlwn5D1P5Z7rSrabfS7z4rq0cWjGCV4G/NCvw9uYkPxmoSGgL6Yo
vM9NWZhf+XV4PfDKsfnHvh8eyre5//nsaezB0Fhfpw/gI3yXetBtlNHeZ7NX
c7aGjqOM+QL/fc68Y83s2bOELpgp+a1Cf0BDbNFhOgn6aLesAdBr8NFXzVqw
e8raeegC6Dt0vtin2/4M5si7274JeN/m6Y9Fsm7Okj0fnbDZcv/aKSPPd4wN
ddu+nBT7cuzV0d0cmTVjZOoxL/ABgZ4dttzYeF+cso80b5eomc/Hd8x5FBr2
q8y7R1IXn0rYhA/J/dhNo0/5d91z9PKM/eN5D3nswgfnHuzDByWP34ELk4e3
yDs5x++VflkjawD2X/dkXcDmC3ty5ia6oW07flJ0SLHd/Ce0zmspoy+eyfgz
P95KP7Vt/UnbNv2k+APAbp32dRSTffCxBr2b67RpXM4TbZ9hE/Pu99Ne2jpr
xozxxO8pOgroEcyeOcHYTiw7BgLy/ikFh9asVzmd8FNr9gmDXRi2ZJPsyMqO
RYCe62WFy1dv2naP68gnuirmN2NLNq3g5Jr9Wa3c8vU3dV+PitcqfFHhN4b1
C5lDb+X/V7Nt4FTCj2D9Fj618KNrtnnvqNg3PzoNiwm/RG26VDBI+bWr9ksy
VcXnsHOr9iHM2Qw/KTMpf6HKp1TZDMLPrtlPKXJMdAbRHaxWfI7HJm1mwZCa
fRpfiOy3an8oxF+gvfj1nF5lZ9QcvwD5KbYE2BBcoPI1q/bbgrx1gVyr5z3o
LDYq9m9KLIdvC/fDYOyVoMNrtodcWPgQtf0iwY3otqdsuNJtBYsIv0npduig
Vpyn7sXhL8JnhP93la5vWnXZPOFLnhs+H/w++HO3tsyjm03pbS3zCefAL0LL
fMLZc526p0WXDZ022ncz+vIZE9rB+xmbG1S2ddV10WVDpw2fWNdhi1B12RBk
pFX7welM/2HDMVhlfav2+XKt0i2q3kenUXpCzTaG5NlfeS6ySfQ/kFXic4v3
0L7rVX+rqsuuUbp51fxWeKL0DfzXq9GfrbqsT3iyPBefrowzNnD1imVi+DnC
ro0ybOImVKxHjW5135b9nuH/7NuK9ajRs/6uYt1mdKuhYbeqmDaFtt2iYvoW
X0foZj9Sdn7LiutCe+5Y8VnlZ6Xjqta/hkbctmKa9vuKdbPRoYZ+3Kbi67xj
64rL0FFHlwc9+Q8qPjdxdnm/4vMLZ5c7qvahsazKlhFcobIrBUvynSodKrir
5fw8SpdQelnZ17iHulcJfqhYZxud8buV7gl/QGV3Kt0NWrFioO7VPFNluwuW
rxgou0YwSmV7CFaoGCi7tuxnkV5Xtt85+gg6/aeK9dLRH59NZdtXTMN/XvHZ
h3MhPIBNKj5/flHxmYuzEWeJjSo+g3xZsd47ZzLyG1cm8w42rfjc+lnFZ0zO
gotXvA7RFzOq7Lya/W+0KvbRi1/gKSr2ZYs95LINr0vv6nu/Rfkdqn7GCKU7
Vt2vI1r+PmfFjrji8yZn3PEVn3M5B6/dsn88/OR9VfFZEp39r4W/VPX5kvmx
XcX98WPFevXo1H9S8TmaczZnqQ0r7gPOYxtUXMb5bP2Ky9DlWDBrGeet/hWf
uT5U+mTVZ/HTGz7Lc6bn2noVP+Pjis/ynOPRI+AbRS/jIpX1q9rPEWsM6woy
CvTO0XFHD/0cHRi3rPu8jx76nrm2Sq6jF3++6mxT93n/XOFb1c0HQB8dPXX0
089T+dZ1n9kvFr5z3bYPk97RaburQSrfvm57h9VzH++7UOXb1X02v0D4tnWf
o9HXR48f/X109ndN/mfVuaRuP1ffCx8s/HLhq6gzhtTti+Z3lQ/Ff5/K/xA+
DJ99Nf8f2oIN2XcqH6TyS2u2G8M2CzusH1V+kcqHqfw34ZfX7Zdp5fQH7fhF
5ZfW7RcIffx90he/qvwyfCnW7NsC2zFsyn5S+cXYi6h8iPAdhU9f8ztP0thM
YD1V+Q518ys4a6P/0da/IG3rX5Cif3Gp6u9St00Huj/oAKEfBG9wUO5H9wcd
IK6h1zI419AxQdcEPRR4a+jEnBIaGJ2Ss0L3npM89PC5ye+f+3jWnmkL1/5T
e65Te26JLjd6SLz7DJVvWjcf6VThG9XNV9kh/T0wY4ytVdtWjxSbs5Oheap+
5q4ZN2zELtFzBtRtR3OK8A3r5v+cLXyLuvlaZwrfTHgTmkP4JnXzkU4TvnHd
fKSTha9fN/9nlzybdgxU+QZ185dm0fsvUTpNxf5BsEHrG/1wdLP4nyfq2tGq
d3PNNiMD8j+wMTlB174uW8eJvbdtT0aKzh16+eh5IJd+KXopp7SsWzcs19DD
QzaPfPXQ1EWPAB07ZNJtnTvSti7eFbm/rReIniD6V7yTPHpflLGvo+OF7hc6
X7e3LEuds2W5K/JXaJor1K6Nqy67UukmVdM70DKsK8hgkc0io+Weo9Ne2ndn
y9fmVnpHy3LYuVrWHWOtQr8MGyTWUNbP17K/Tdpra97zyNMu3tOW5ZLyvkPS
H217R9K23iIp8nNsKZE9o+/wl8b3Ss45evbfwq8SfmNtsm0kugD/qPxqlQ+v
2d4SfSDk9thMDk+9P1XnCmwvap7Ht6Tevyq/tu75gM3hQLX1O+ZATz27bh2S
U1R2rP7nCOETVf8ald9U8zcxIs+CmXd93XVOyvuH5/vARhG7zwPz/9AdwE4V
u1bsVrFVHZL8vinDRhL7lmsznw7IfUPyvfE8bDTbNqjUY77DUxmVb+P2vBv7
S/gr8Fnadpjk8f+ObhD2nuflOvcfn35lDEbh91D/f16ld+NzEJoxZdBBwwR7
VGx7gx3Yi2XzjPdRf40rmx+GXzb85tVznv8POoZ1l7NUxXq66IxCo/1/2u3J
0HfQGuzn0Btj6n7XuQ3TjI+GToSWhK6cKTTjY6Ex3y5bJnOQ2gATe+Wa/QQe
UDHPjja9W7Z8A79++GbkTA7/7B/hi6PrqusThS9Vs+/E18o+r+9fNT26U8V8
5FfKtoHbT+WztEwDQAv8pesLwoNn3xe+iPCX+RYq7g/+/7/Cl63ZZ90bZfPt
8BGJXzvaQlv3qriPad/Ysu2c9q36TIXvAPwEbJvvsk3vtGnABjRnzXLqn8v2
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
Pkb4ag3HqR4vfNWG49R/Inz1hmNYfyp8zYbjLH8ufI2G4y1/JnzthuOqfyl8
iYb9244Tvo7wvsK/hgYTPqXwp4Uv1rAP/TeEzyZ8CuFPNSf7F2MtmKthf7vE
rycuMz6u8XWNDyi+dfwOfV+y/0H8EbJv41MCfUxoBGwssQFgD2/rY85e8pkf
HgB8VHioLOPweOHvVkvWQUL/CJ18fHFwLsAeEZqireOJjhP6TZN8D5atA4Wu
PnpN6DShnw+NgO7nU+HHwovFVgA6Aj1c9Ijhk8MjZ8pD+6Djic7mSuGnwz+G
nkIPFF3Rtt8K9EPRd0LXCR1peMXwiWGtQLvBe4LvBH2EPvLo8IHhAcP+hU5p
6yxDi2HHgR0LdBa2HNiTQLuhl4r+KTpX6FthK3p2+HLw56ChoA3Yg9sx204q
mZczMHlibp6u9IP65BhvJ5Ymx347oTQ5Jhz79BbZt9mnse+DJoEe2iz7NnQD
sSw5b79VN013VtpB3D34OE/WLZtALqEpM0kHG/1rNXmSXg06NdjgwFeHp45t
C/pm6Jphd4P+GLpj2OOcGTk78nb0zdA1w+cKsgDkAKgEwcOHf18rmScPP76g
XyKDRhaNn41GyTZJyDKQY1RK5tvDs1eTJ/lSY17jV+v8lnU00HFGHw9dPOxz
maOcpRcq+X5SzuXohqKfh34oYwwvab6S2wdPhPN0LSn3o1P6ix7wRsu8ZHQM
sXst53nwrpB9op+Dng59tFie1ZFnQ6N3p247Juf8efdp6a8xSs8TDNWzxrXs
zw1fo3y335S8t7Pff1fyd9z2pUrK3o8+JLqQs5Xs4w6fpfgp5fn4lhjdcvwg
5KbTKz215bF/smWfdfgx4x78xXEf78Z/HX3MNXQL0SvE3hkdyB2yTqD3iM4j
tqvoZ8Jrx56amJ7wIx6uez5BP0PjMm/gOeKTkm8SXiTnAP47+kvoMU2ZMuqh
C4oeKPbavXIfz2LdWSH3s6asmDzz4RH9349bXl9WyjXWoJWTZ/zgXa5V8nxa
PGPGXFwiefQh0YXk20IPC30s9AfRz0Q3c+6S5xE6nvAx+eY5a6xa8vzDJybn
EMajb943Y8qoRwxKznWP1f3f1sw9s6Rd5Lv0IVyliTOC9bxuftidjcmxOeF7
op+HzRVrG7Ksm7OGroHMqmqdBnTv+lStS4dM7Jas6cg/sGEjjxzyxqyz6EIt
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

             "]], 
            PolygonBox[CompressedData["
1:eJxNnWW0HLfSRce+Az0znhkHXpiZOXGYySEnDsdhcBKHGRyOw8zMzMzMzMz8
wsz87X1Pv7W+H7VuHUmt7lG3pJJUp+6Um+4wfPuBlUplj3qlUuXvk51KZfiA
SmU1ZPxBlcrR4MVIXxS5r12pPAVefUDKTED+leCLybsI+Yr8o8DzoM+N3A0+
pFupHEjFByDvUH5h8C99lcrPyEngQ8EHVVPmXfBp4HPRz0G+BZ8CPhv9LORr
8Knd5Jn2Dfh08HnVXPMd+CTwmehnIF+CzwRfgH4+8gP4AZ7vT57tD6QFPpj8
/cnbD3kLfCz4OPRjkf+Cz+jmWu/xPXihbp79J+RE8KrgKcmbArkM/Dj1r0rb
DEP+A74L/CH3+gDpA98N/qiStCr4OvBN6DciP9Je14NvriTtJ/AN4FsqSfsZ
fA/440rqqHH9HeD30d9DBoDv7ORepg0EXwO+Af165HuuvxX8LPozyF/g28DP
VZL2N/hB8NQ8+1RIh+vvBf9G3q9IA3wf+PdK0grw1Z3UfR3yHdc/BJ5mQOro
kr8E7TOQthmAnA5+mPxpB6RMD3w7+PlKnuEfrl+8m7J+jKeRfxP5twFv9RnI
v7ET3Tb5BbwU5auU7UPOtH7wZLVKZVJkEsoeBz6+mnf6Kfm3dPLbn0b+5Pql
ya9VU8dZ5FfAi/NuF0PWAD9K+VV41pWRccCPdKKvhIwNfqyTd22ZccGLcv2/
XPsPcjL4iU76kt/EeOBh3XwrkyOXglfpRp8MuRh8Avh0fzvyGfiKTvrWhciX
PO9i3bSN9ziV/Ps7+ZZ9J03wVeBLKumTX1P+ZvDtlbThb+ATu+kb3uMLyi8D
rlfTBmeDL6P8BZQ9H/mc8mO66bv2kbfJ/93vkwHjJmQV8DHd9JVjkE/A74I3
pe03QRam7Cvg1dGHI3OCX+5GXw2ZA/x6r1LZtsG9C94R+qvkr1HLNXORPz/4
B37r98hx1P8eeLNa7rEI+S+Ah6GvgswKfqmbuldFZgd/Bt4WfRtkWfsKePNa
6lgU/Gk3eaOQZew74C1qKbOY34/vn7ZYGXmE9nib/PXIWxeZn7x5wR/zbB8h
R/N8H/IbjuX33MvvOR79TfLXoezayHyUf6ebttkYWQg8N/hDrv0AOZLrXyNt
I9p2Q2Rm8Dzd1G2Zo8DPkL8P39JoZBLwi938VttgNvKe7iRvb2Ri8ufqpu73
kcPBn4O3q6VNlqPsF+Dta0lb3vcBXgt9TWQe8CfgrdG3QpYC7wzeiHe9IfIk
9e0C3riatKfAH3dTdktkSce6bvSRyBLg7a2fsmsij1L+L9Je5be+gqwG/hv8
2sCkDQdv4/dD2eHIQ+Cdurn3BsgT4K193+irIveDd7V9q3mmp8Ezg1/gtz+P
HAj+bzfv2t+0NPfasZu61kceI//PTp7lZWQY+DnyV6bsSsjMjlXdfGumzeKz
dtNWfrNzO7Z2U3ZFZCbw4+Bl/baQacBPgJerJW1a8FPgobY9Mj34eGR9vrUR
yON8byeAN6gk7Qnw05RfoZZrZiDvyW6utc7pHNu6ubdlZgSP6qbtbKMHnU9J
24m6dkReoL6vyN+Rsjt4DXlv+o747dshs9vfwLug74zMY//uRN8JmRv8AXg3
9F2R+cA/UN/u1LWbfdD+1kmedcxL/hud1L0tMiv4G8rvTNmdbGP7Ryd174jM
Rf7X3eT5jCuS9x14V/Rd7PPgL7t5dr/hoc61yO4D80xDuP7tTuraAZkT/Ipj
innIDD6vfRz9WGRZx3PqW8C+jUxJ3q/IjeTdgKzo83fTl+0j85L3o+9sYOpY
nvyfwCcMTNpQ8M/gEwcmbQXw9920jb9hGHlvdfJstvkcXk/+nuTt4Zhp/d3o
tulq4Ee7ebYhyBTgU30flbzTF3mf33bTNrbpyvZfZC/q3hNZkPp/JX80eXvb
x8n7CjmAvP2RJWxv8IEDk7Yk+A/tM8oeiKxH3snI1txrK20G7vcb+fvUUuda
/lZkS/JGOseS/7zzCWPR+cgU1PcFeD/q3hdZDPwC+MIBKTOl8wv17VtLnWtr
m3Ry7XnIZOR/BN5jYN7x/OAvO3l261xc+6+TZ/MZnuH+v3TzW/eyj5L3cze6
bbw6+JFu2nI+ZHK/L2QMdR2MLEN933aiH4Qs7ffaiW4bLQX+zPEYfTSyiONf
J23tMy7geNvJb7XMoo4/4L0H5p0sBP60k2tNWxj8j/M5+u/I6uCDurFN90Xe
BG/Xzdi5BvIIeNtudMfIh8ELdmOb/oicAD4XfAV5lyO/gM8DX1lN2q/gc7rJ
uwz5GXw5+C70O7XBbHvwVdVc8xv5F4KvQb8a+QN8djfXXor8CL4UfAf67cg/
4IvA11ZzzZ/gC7q51jp/Bw9yPuZZN0M21d4B313NMwzg/pd18yzW+S/5Hefn
vvIacB94KfQlkXW0R7hmKI++PPIg779K/tJ9KbMu+euB56OueZEbwA+C//S3
IBNx7QPd6L8jE4Lv70b/DZkAPLCbey2BrM31l3TzW29D/tI+7qbsr8h4jt3g
xdAXRW4mf/1u9EWQG8Ebam9WU+YW1wPgJ53bkAbX3wB+2rkVaYKPAB+JfgTy
AeUP70Y/HHlP+xb8OvprSIfyR4KPquaaD8k/uhtb7WjkY/BR3eiW+Uh7G/wq
+itIi+vvBL+j7YeMrS0OfhP9DaTn2GH/Rx/tPbn+5m7ubR2DHEu6+XYt8wb5
13fzW/yNBfkDumlLbe61XM90c6+3kLHIb2lPkrcJsjH513bTNo8jdfLb3fLb
sQz5zW5ZFtnI9U83ZR/TxqX81d3oj7pm0Dbu5l7+psHghvYN126IbMD1t3bz
W23TLvlFt6zbMuRfCb6nmm92IPn1bnktMoL8WcAv9sUGORh8FmUO4dscg7zJ
97mx3xPXLuE3ZP/rxNbXBv+C/NOcz9B3Q14G7639RtltkRftX+SfQt7JyMfk
X+ycUEnaJ+DdbR/Kboo8a/8j/yTyTnQNSv6e2r/kjUKeI3+09mA193gJvFc3
97LMC/b/Tu5lHR9x/fmd1HWCa1zwS46pjNUPuwak/D7Oz9XU+TJ4X+2NatJe
Ae/WzbNpsz0DnhX8Ul/abAx4S+0t8lZG7gXP4fdJ3ivIYeDZu9FfRg4Fz9aN
bh2HgId0s3b4DjlG+7wbW1Qbf3HnIu0V6t7Nb5b85cFj++0h54EX6GYsdQ1y
PHi5bvIGI+eAN+rm3dmHbwWP7OZZV0LucbztpG2Od01O+9xN/pfkfYGMQ96m
jk/oSznGUX7dbsameZDrwWc4n7g/g7zK9Wc6n1eS9pr7AZT/qpo6/0PeSuDx
1JGLHJ9JO7SSb+4tyq/YTd64yIWO/+QfVkmZt8nfpJtn8Zu83fmD/MMrKfMO
+ZtrX5K3gnME+St0U9c4yAXg0zt5Vr/ZVyi/JvlzkjeHY77zA/mnk3ca8in5
l3Si+83+F7w25eem7FzItZRfqxvdOq4Brw6eBn1q5Erw8G70qZArwFt00/Y+
493god08m+/0fPBvnaxdtelWBq/WzbXu4VwOXqebtvcZrnO86WRvxj2UH3i+
v8gfw7dzMLI+ef/RPnJtgWxD+alZ853F+m8V5Hr0qZAz0VdGrkOfBjkbfRhy
A/qUyBnoKyHXok8+mDlcu7xFOXAFvGMzaebdTtpWda6j/B3o0yLnoK+K3Ig+
BXI6+orINeg7IEOpawvq+Nny1LG0dhFpF4J3RFZAH0n+L+gzIkOo/xnkG/Sr
kB7llyf/R9e2yKmsbScjbVnqmgxZAP1L6jiLvO2R5dE3p/xP/h7kNJ5lBeRq
9J2QFcnfkvxf0f/1GZupw7omQYagf06ZM8j7y/0B8ucjbeLBEfXPyD/d9gUv
ot0LPg/8J7IN5eclbSLy/oPMgf4h+SeSdy9yNb9tKZ7nPvRxyZ+d/A/IPwE8
NXhJ8E/g88FV8J7NpJk3ENkZvDB4SvS/KbNdM8/ss0+KzI/+Bdef6fsALwT+
GnwOeAB4p2bSzLMO6/qG/HPJ/8c2bKYO66ohe4GXAk8zOKL+M+Uv6OU3+FvW
oszy5O0CXpm8rcG/o++LjADvAe4jfwT46SLf4Ofo6yJPFvlGP0VfD3mqyDf8
Gfo6yBNFvtH/oq+FPFbknX6MvgbyKPhU8EfoayOPF/kGP0FfDRmnnj0R90Zm
Q44AX0uZN9HXR54p8g1/0cs78F34DfV/S8hztewRuVe0CtLk+iPA76G/i9zB
9efVg99CbvH5wG+jN/jNo/nty9Bm06Gv7Dsg75BG8t9BbiDvIu53SPn9X0/e
ZsitvVzjtb+SfxF4b39zK33SvnkgeKNW7uG9bvObp/w+4AI8Pfha6toEuRl9
BuQ69E2RW9D3RzZo5R37rvezTVr55vz2DgBvCN4bXAdPB76GazdGbkLfx3fS
yjfpt7k7eNVW+ox9ZzSyZivfnN/enuDhrXxjfmt7Iau30gfti3v4zlr5pv22
d0ZWAm8F/q2XZ/BZHEMcS3YjbVgrfc6+t6vvCDwK/Af6SchHrYwxjjV3I5fT
/kvw/Pf0MiY5NtkH7Yuv83d1mnZv5A301xlT965mjbM/Y+27pG1K3hHueaO/
T/5hpf1wGPkPgIehz4hspe0HHlHNnLoD+HPwqdXYIMdra1PHEOraEHkK/Tn3
lNFHIc/bL5H90S9FvnW+bfdvEVfmRe5Fv8txwOv5TUcyH4zk99zq+FzPeL85
cjP65PWMx5shN6FPVs94+Lx7WOX8vwcVP0p9M1DfMOQx9GM72Xu0D9gX7idt
QvDiyAPobfJfrmaNdaNzMfhz9IeQu7S1tDmZm3ZDJgAf65oW/QlkPm0f1xzo
RyCTuTbTpnKtYZuDLwFPiv4r+Strq3az124fsi/dRP7C1dgcI7QdwcdRdmtk
fNdqvj/30pGua0vn5HL+3gxc1V6s5nzlKvDJ3Zz12Mft6z+5xqpm//ks8v7W
Jq9mT/9i517wc9R9BTITeHzq+4W857UXXRuR/x55dyBzuhYB34N+GjKta0vu
cTz3mpfv8S7Hpk7adwJkOfCdtPH46GtQ5nDztFGxbddAJkKfBnkI/RzkRfIn
12ZC3xN5FjytewADUuZl8GzgbdxbQF4HzwLeoNyPehU8nXsklB0LPP2gzJHO
lXPyHOPRP8ZH5kL/mP50ci990r5pmnnO4c7lznnOfc6BzoWfUv408iYEzwP+
L/jUXvqofdU087yH97LP2ndn5BnGdi8DmQl9AvLnJv8T8k/pZY5xrjHNvIec
J2mvFZCH0f9FrnSvEalwfRt5xbMnofaa4zVtO0U99s+WyG3oU9VjP41y/kGf
p57xbivkdvSp67Gf7mj3V1sZCj5UW7aT/smfyrI+m2XIm6Ye+2hb5zf0+eoZ
f7dx/vP91zM+O36fxvzxtXM0v2dVKn+J334N8of2tWtY9CORX8Brghe1byH/
gtd3jW/fQmo8yHLuSVB2S+R78geD/+XZpvMdu5/jfFyPzeV883s766k7kD/Q
N3COKjLmf+lc4JxXZE75yrkHea/InPI1+nnuGfNuPgVfSvq54OPB/wVf4jwP
Phr8IfgC513wceBPwBc774OPAX8EvhD8D7/hUMaeQ5ANef6zHZPI/5j8i8i/
AHwS+HPw5eDzfX7wZ+DLwBeCTwZ/Ab4CfDL4UPDb4LPAL6IP0lbh958JbqEf
Qtpb5P9KWhM8Bvwm+BdwAT4Y/Ab4Z/Cczqn09b259hn0MzyDJv8D8s/XDgAf
AX4PfK52CfhI8Pvg88Czc81kvKst0J9Cn7WX85WlwU+W36O2vDbSuuX3p+2u
jbReOb5ra2sTrVV+b9ri2lgjSvvmTp5zNdLuR9+4F9t6c/CD6Ach2/M8R/G7
moMzP2gra1NpWzmfuHbQBtMWs7+4VtDG0taaScy3Mgv4MfSZkXudn8CPo8+i
fcDvWQL8BPpcztG01wHg59HnRvbj3Z4CfgF9DuRt2mNX8NPoB2sjOFbwfC2e
b4zPrK0Nbg/O96ut5Dfot3gq7Xs4+e+Sdg5pF4NPBX8Fvgp8knse4FvBZ4C/
QLYA3wV+jXb5Crwl+B7wG+DPwZuD7wS/Ch6P7/Hgvqy5tnU/lfxNyL+N/JfI
/wy8GfgO8CvgL8EjwXdrP4JfcB3AM7yIfnoR3b5unzdtLH7TyUXWCHO4NkCu
RD+RtGP4fV/zdyvquJf63nSdhH5cOzbNcWUZy05C/vfoVerenzKviP1em3kG
7z0ZaYOp/4Qi9/BeF1HXKeR/Sd6VpNcofwD4VfAP2gzknwv+SfuP/Fu9N/gf
7SnwLeDLwH+D7y5i0/6OfnsRW/dm8i8l/y/nO9JudM8I/EcjdvQl7jmBv3a9
Br7JNTr4T/Cd4Nsdz1se/rP2QK4HXwj+jfzbHIfAF4B/1X523AKfB/5Z+9ff
CT4b/IPrX/BV4HPAP7p+BV8BPgv8vetn8KXg08HfuJ4F12mPA8GvgX90znAP
CvxLI3b/5e6RgL9zvV1kvNfWdszcsBzvtcUdUx1b59U+p54JkAMY3xbSXkZ/
ljKPoC9ofwQ/BH6ol/XLt43MCYugT887W9ZzEO55MfhQpEvd73PNJuiHI1OB
fwJv2suawLWB13jti6SNX8+a+qVevrkTXP838y1+S9o/RfqgfXFR5Jx63ulz
6M/af4vYvOJZuOZQrn+V6zvosyKHg98Edwfnm5wd/dlWvtWFe7Fdbc9He0kz
7/h2vkdF/YtmvtXZkCPB74J76DO55gDfCh40OOsb51bnNOcj17SubV2DuBZx
zera1TWOax3XxK6NXVO5tnJPwr0J10SujVyDuxZ3DbtvOX6+X2SN5v6Ea37X
/q6BXAu5Z+LeiWsa1zbaONo6roldG2uzaLu4pnFt4xrdtbprHtc+7mG4l+Ea
ybWSewzuNbjGca3jnoR7E66xXGtpU2lbueZx7fMdMi5tcZNjei82mraaex7u
fbgH4V6EezLuzbg+1PbQJnE+d32nraNN4nzv/o62i3OI62P3k1xbaCO5Xnf/
SNvJNYfr80M6matdY6zZy36Qaw9tLNfjQ8ifq5bxalXwUOTFWvbkVuhlv8a1
iWsW1/fuV2lraUO5X+D+lraZNpj7AwsgN6JPgoyh7vnA16FPiBwIHg4eD/1i
z9v8bcg19Xzz+5M/DDx2PT4SPs/7vfhOjE37LD0489m29fg81Rnv5wffAJ4Y
OZjrh4CvR58IOaiT+XBkPWeiL7lP1I7unpm/79VefE2+4x0t5vxFnaP6sgZY
yd9DHfPwLCOQBT2f7cbXwz0M9zKmIm0c85Cp0SdGerVyzeXeKGX+AB/fl/rW
6eS82Dl2XfRJOzkfmhw8mXv33P9vyr6GLNLN/HtqPT5TZwzKmO3YPYj2WHJw
5u9z6/Fx+8q1me1fyxilvTsZck8tY5jrF+f/XeuxaSYdFPtm93rOXKcaFPvn
6HrOyNYbFHvqzHr23O8Dv9HLXs1A7r+4e2m023Ot2AuTalNRpkfZz7l+WZ7/
SsrP3UidRzt2Un5aZGzShiAzcm1fK2Pz/o3sSWkL3dAo+zdlZ2rH3tHu2RA8
Qzv2lXbWBuDp27GPtJM2As/Yjj2kXeSeyRbOJY2ML+6pjHSubGQ8cf9iS+ei
RvZW3ONYT1u1kf6/tuNEM/sr2tzr2K+bmTO0udd1HGhmTtHmdjzfuhH7wbXD
JuTN3I69qN3ontBWzk2N7BWt57jRjM3kGOYezbra6o2MJ+6BPMu1wxvZG9mM
srO2Y09qV67ZzDuw7ZdsZM9Pm0Jbwr3AVWwPZDzwQsh66NNw/UNcv5y/BzwV
+AHwMuC1wVOC7wcv7e8DTw1+ELwseGXbH/kP+oLISrY/Mi76Asgw3xcyPvrC
yPro03H9I1w/FDzC9w9+GLw8eEXzkXHQ50eG+/uQidAXQ1ZHnw2ZGH1xZFP0
Wdqxt7W7VxMjE6IviqxqeyMToC/SyHp2bdcyjYzH7kmtg35JI+O3e14jXKs0
Mr4v6vtzzVrEntXWPNC9uCI2p2nmvd6I7buQbeteKngG28S2ce8NfXp/k7/N
vUH0aW0T28a9PL/9RtYu5/tOiqxhtGXObcZGcA52rXOBbVZkzXORbe1+mvUX
sSXPJm2KIjaltuE5vsMiNuJ+4LPAk4Nftk+Bz/T70L4Az60d4F6da+5G1loX
+k6KrLn2AZ/h96U97O/3Xu2szX5znawd4N6ga3T7tH3bvUPX2OC5tDvc+3PP
CzzU36otgz4fsgT6JK510GdrZE9yQ/5e1Yh94B7k+uhXNDJ/u8e6AfqVjdgH
7nFupG3ayHy/pM/q2gQ8O7KUv9W1CfocyNK2hbYJ+px+I34rvl/0mfyG/Jbc
W0Wf2W/QbxFpoM+CLGvb2maNjGvL+a60fdDn8Tf529xLdU8CvIztZRvYFn7D
fstIgT5rI2tf36nv0jWw+ydr+Z4bsU/mb2Xucw50z7xop81sqzVJa7RTp3UN
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
tJKm7jnBY9qmpO2DvkGRs41nSBtZ5IzDuVCbV1vXOdGzDq+xrGcelnXPzL0y
r7Hv/tXMWat9+Klm2sDfvlmRsw/T1D0DcW7+u5mzV+don3VAK2cpPrPPVmnl
rMdn9F3+0MxZqe/Ub+enZs5S/Yb8Fn5s5uzUb8Kz3ru0N4uc+arbxrataX67
Pzdz1uw3vCv4BG048JONnFXbp+3Lnlnrf/B8kTWEawm/pe+bOUv0m/qymTWy
a+OTioxd/zZztugYpu3xTzNnZ9ogV7TyDfjuXef47bn36x6w36C25LfNnEVr
U3q25T2s2zMubclfmjkL16Z0L+abZs4u3ZN5qRUbXdvcPbRPi6wxXVu+zJz2
XZExwbHgnXr4hYsyFi9W+h/LZ1wYfZFa+Ijyd+SPyS+T3yRf0L3mhWrhU8qv
7Ndr4T/KZ+y/tha+ony9JdGXqoXfJh9viVqZ1gn/rT+vFr6j/LzFa2WZcv7Z
vPSP3rycT+QqblLOX/oDbFRLmvPL3/q715Kmf4D+sRvUkrYB+E/w+rWk6S+r
/3X/b6+FDyifq/+31sKHkj8ml1FOo3wn+UfuxVvHiE74YHLb5LjJF5O/2f9b
auF3ah/JHdq3tKe0jz3b88zBswftZ88mPPPz7E97S+7SPqU95fysf/iW5Xys
/e3Zgmcanm1ov8k126G0B7RP5E5uX9pz8tn6n60W/pX2vmcjnll4duF6wLW3
Zyaenci/k8vX/5s64bPJ5+tP64SfKbevP60T/qbcwf60Tvit/b+9Fj6n9r5n
I56JeDai/eC7HFnaG9oPcl83L+0L7Rn5r/0c2dJ+kVu7WWlfyJeSrysfV/7U
8aX//k7V8JPl2+9SjU+B5xHy9fWl16defv6ppX/9HtXw+eXT71WNT598fPnI
O1dTh3x9+f+W3bMaPr/8fnWvkX8vP3+ranzm5HPLl/ZZrEM+s3xO+T1DquGH
6gOoL+BM1fBD5asugL5gNfxQ/fWnQ5++5BfIN1CfoTz/kG81WzU+cfJVdyj9
872HfFH5sPNXU6f8V/mp3ts0+bHaf/adTUt70HgI61Xjk2i8A/nV61aTZnwE
+W9yCz0z8uxIvp7cUjmm8uvk2/XrtfDj5Lf1v5ta+HzyC/v7Ui38S30i9Y2U
YyE/SH6h/Oj+d9oJv7C/r9XCNzQewjrVPJN8b/lFXiuHRL6RfKLN0beohi8k
P23taq4xfoJ88C2reUfGT9BnU99NOWvyg+QLqcsBlg8kP0jdOuS3yW/yXt7j
f3ylkdXUKb9cvpL3Nk3+kusrv91+TnNp/8vv3aa0z13/yP/r5zy6HvB+creQ
LfVt8/fKDdNnETxON/p6yCjwuN3oI0r/fn0a9W30zNCzQ/3/zVu/9Efp+fv6
co+R4LG6uZf32GpQfCD1hbTM5oPCf1ukLz5k/+OzTYI+aclXk480P/oCJd9I
ftGQvqTJT9LHTF+zISXfyIX8hOgTlXwq+VXqE5d8Nflw1j1Zed4nn828SUr+
nD5s+rJZh/EP5Dt57wVLPpVnfJ71fdEX/ot8mS/Rv+oLv8L4DW+iv9WXeA/G
K3ijL2nGczA+wut9STN+gWeenn2aZrwEfUj1JR2/Gn6c8SOsS58kz0Plz5k3
QTV8OvkaHfRuNXwZ+Tk+m8/0P/7O0+jP9IUPKR/oSfSn+hJPQH6Iz/51X/gr
8mO+6YuPrPwZ+S3mmSZfxngR7/bFp9R4CcYDebYvPqjGMzFegXU/XfKFjE/x
Tl+uMb6E/EyfxWuMHyJfzbZdqC/8NvlsC/flm5APKf/NPNPkt7nelz+8e7ne
c/0rl7ifU1yu9+T/9nOkO4mHIRfRM2fPno2XMAN5M9YSL8D1o3X1c4w74btP
hz59Lfx24wtYdqZa4inIfzfPOmYt9xu8tp+zXK7P5df2c27L9a1zaX9MgHK9
rN4fU6Bcj6v3c/LL9bZzaz8nvVyPq/dzwMv1utzmfo5zJ/sJ3ruf01uu9y3b
zynvhI8/bS2/Sf6+fPup0KeuhT8vn159mlr48vL1PZufohZ+vnzrsdDHroUP
Lj9cXR8AfQHkDw+upYx8bPlH01Yzp8j/ku9vXVPWws/X51nfZzlM8qfkU6l7
jXwl+fyW9RmNB2B8gdls+1riMRifQX2OWvjnxtOY2XdVS3wN41/4rkwzvobx
APxttoHxCIwHMDP3mqWaeArG5/DaWWuJt2H8DXXvaTwD413MXYtPhL4R8t+9
95y1xLMwvoW6PiX6lhiPwbnWexhvQH7yrNXMofKVjefgvU2Tryw/eq2BjE0l
H1x+uPo6JZ9bvveqxoYo+dTyrdccmGvkU8ufXmNg0uRfy/8fNjDXyA+X/z5c
LnXJt5Z/rb5GybeWr23dw0t+vPEMVhmYOowfYDyE5eT2l/x84x+siL5SGQ/B
+AjqK5fxDYw3MFSufxm/wHgG6iuW8RLk+1vX0DIegfERvHaVMn6C8RGWHZh7
Gn9BH3F9xZct4yUYv0DfcH2y9c3WZ1zfcWMaGC9EfuDwSjgUcink922MvknJ
3zN+znElH9F4OsaL2a8SjoNcB/mno9H3qSTejPFn1PetJL6T/P8lK+FIyJUw
ftHR6MdUEq/IeFCWtU7jz8hfXK2SZ5KvKD9/iUrqMH6A8S3mq4SDIRdD/uCq
lVwj39H4BitW4uOqP4982GGVlJFfKJ9W7sZGJb9RvqP6xiWf0XgEciW8p/EA
5DPaFnJI5JIYD2OFSu5h/ATjCfjtrVvGQzA+gvp6ZTwE4yOojyj5/zPyPT/I
2PwAcgB4hm70+5H9wdN3o9+H7Aeerhv9XmQf8OTgG9Cvl6MBngp8M/pNyF7g
ScDnO5chu+jvA76gL2m7gifuJu9cZGfwlN1ceyOyJ3hq8C19qXPv0r45wGcr
7R3tG7mLB5T2jvaQefuV9or2i/q+pb2k/aS+T2nfTNHNvfwNe4CnAd/al3uO
Lu0hy44u7Z2JunnWc5CdwBN2o5+N7DAoHCu5VnKe9M8xPsx1A+NzbzwY47Nc
OzBpxovRJ1/ffNOM16JPvr75R5XxOozfoX50yfc03sdW6FuX8TqM5+C7XL+M
7yA/1LL67BvfyPgelh1VxvMwvof6Nv+L59GJb791Gj9EDohckHNL/rPxetYc
EB9s/a+MzyN3ZM0yfo/xvuw7x1YS38t4GMbv2af0z5JDIpdkrzL+hfE09i7j
/xgvw/gUPvsGZbwK42XsVcb/Md6G8Qe0lSasJr6AfNajKumzxhszftcRni1U
Eh/M+A8nU/aUauIvGM/hRPSTqom/YLyDE6pJM76DHBy5OKYZ/0AOklyk66qJ
H2D8Bq+1TkkZcnLk5rxQTXwE40cYX8r4b8afMH6CeS9WE2/B+BNj0A+pJl6E
8SyMF3dwNfEr5Pcb3+3CauIBGB9A/aJq4icYT0H94mriDRh/QF1OkfEUjGdx
aDUcMuNTGB/Dur2n8S6MR2FbyBmT32/8Cp/Fa4x/YTwB48P5DMYXMF6Ez/5S
NfEj5Hs/XA3HSX62fHv53stUw6eX/75QNRwq+fny7c1bthp+v3x/9eWq4ePL
z1dfvho+vZwxuWPWKX/f+Eeuba1TPr38e8vKuZJvb3wLn03OmPEu5FTJrfId
GL/DeAc3ot9UTXwH40H4Lq+vJp6D8RJu9luqJj6D8RrU5WT9Lz6E11rGeApy
0OSi2Qby3Y034rv2HRqPxHgVN1RzT+MrGD/Ce5lm/Ao5YXLDbGPjNRiPTi7R
i5XEnzMenfpLlcQ/04dZPyr9qfS91mfbcwbPG/TNNj6IZ2lTV8JVMr7X9JVw
7uTeGb+wk2VUP9dPH3DPCTwv8PzKeHz2VedQ488ZH1GumOdpcvOMV+fcKuff
eGvGc5Ir6Bxn/Cb578bq0SdV31Tjrcl1dM413oPxAkahb1NJPAXjK6hvW0m8
BuM3qG9XSfwF4zGob19J/Af59MZ28h7y640HsUMlafLrjRdhWdOMD2E8vn8q
4STJTTJ+39+VpBmfz3iAcrVMM56f8QblJt1ZSXxB4wdejn5FJfH7jK93Kfpl
lcQXNN7h3bZlJfEKjV+ofm/pz2t8xLsqKWM8ROPZ+S5friQ+o/Ea1eWMyR0z
vqH39hrjKRo/0HtfWQnXzPiG3ttnMp6h8frkWk1fxu8zfuUsA8Lhk8tnfDzf
lZwruVfGS3QsdIyU7288zJkH5BrjXRrfcUb0mcp4fsb3U5+5jJdpvEDvNUMZ
D9D4gOozlvEgvylyhubZ2Vv1xH9xbJ6omvgRxl+YpBrOpfEgRrbDAZH7oc/f
lu1wIOQ+6POn76KcKLlQ+ilu0Q7nRK6JPoCbggeAv6nnDGoz8EDwt/X4+K3Y
DgdH7o0+j5uD+8j/rh6fwa3AjWb4C/apoe1wbOTW6EMl5/3VIj60+tLKaX+z
iE+fvn0rtMPhkbujT5IxDN4o4tNXKfnyrxXxydQ3c/l29tDdO9cny5gArxfx
CdQ3cFQ7nDC5YPpQbtMOZ0yumD6T27bjs6ivoj6Nq4K/5e/b9ZxZDmvnHdj2
nimuAf6xCF/DMWKVdjg+cns8g1ypHQ6R3CHPOFcH/+DZVz1nhCu3w1mSq+QZ
6XDw956l1XMGuFo7ZwDu/Xsm6lnkv/z9qp4zSX0xr+F7mL2IT+YOzsH6oBTx
WZcbdxX5MxbhyOlbeXUrfC99LM3bjms2r6eM8RFeKeJTrG/xJm0HRn5TPWdw
lr24Gd8kr5Gz+WIRH0R9EeWQvlDEB0xfMDmhLxXxqdW3Vt/G+1rhy+njqC/k
A+BtivhE3qvdxj2OlO9C2sHozzfjL6iPvb7gD7fCL9MnXB85/dj0eZe7Yl1e
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
yeSBdg==
             "]], 
            PolygonBox[CompressedData["
1:eJwl0N9rzXEcx/E3YnZ0OsuulAuzEjZn6ozahYuVX9e42RVpbo9kptQWy6+N
yIUL12tjOuWCkqShxbAxbQjR8ReMbVeYeXz6Xrz6vl/P9+vzeX++74ajxw+U
l0dEI62k74WI/pqIUi4iT/V1EVXs4ZqIEX5J7wffhJ/DJmojOldHXMV+0jL9
TdSG75PpzUf00Hq9HgM61CV1ZVXEwULWS5nP6tvuu2XGrPNf+Hna755GqsMe
8xdoUOYb1mvuW36Szqhf4Jfdsc3cKewsNo4NYEVsDmt1rkB/zX/Ef6Sb+pfS
nWZ84jfLlrFhuSZ39GNbsBNYBWvFBrARymN7sZKzd/k3dEx/NJftJ+3pfZqB
vcNuYNuxBazTuSI/qfeUv0ZTMm103X3T/AxVvXVepoz3pT3Ronpn2o3cnUL2
bw3qotwfvT1mjGHr+MNm/POd5b+mHcq1yNTSWrnX2G79B3y37FZsHNuB3ctl
/53+fwLrwsawi1gzdgW7z5/iu7zzFb8CP+1t7VhV/jn2jI6YexLfhW+UeYk1
61dy2b7T3oew33xJboP8MP+E2tWHsBb6xX+gBfNq+D758/x/nixk4g==
             
             "]]}]}, {}, {}, {}, {}}, {{}, {
          Directive[{
            Opacity[0.3], 
            GrayLevel[0]}], 
          
          LineBox[{4145, 4005, 4006, 3977, 4136, 4039, 3882, 3027, 3478, 3026,
            3477, 3025, 3012, 3011, 3469, 3010, 3003, 3466, 3900, 4038, 3976, 
           3938, 4053, 3972, 4107, 4158}, VertexColors -> None], 
          
          LineBox[{4146, 4007, 4008, 3978, 4137, 4040, 3883, 3078, 3517, 3077,
            3516, 3076, 3515, 3075, 3514, 3074, 3513, 3073, 3066, 3065, 3508, 
           3064, 3507, 3063, 3506, 3062, 3505, 3061, 3504, 3060, 3503, 3059, 
           3502, 3058, 3501, 3057, 3500, 3056, 3039, 3038, 3486, 3037, 3485, 
           3036, 3484, 3035, 3483, 3034, 3019, 3018, 3473, 3017, 3472, 3016, 
           3006, 3005, 3467, 3004, 3001, 3462, 3869, 3910, 3463, 3898, 4035, 
           3974, 3937, 4052, 3970, 4105, 4156}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0UVOA2AUhdGfOQRWABS3FncKxd13wAIgbJMBbsXd3T2cwZfz8qY3MjUz
MZ0SQphVdUYIqSrRXHoIUeWkhrCUFkKEi8zmAjM5zyyuMJfLzOMq81mgQhVp
za+YJdpwl3KdZXxgN+/ZxTt28pYdvGE7r5ngFdt4yVZeMM5ztvCMzTxlE0/Y
yGM28Ij1PGQdD1jLfdZwj9XcZRV3WMltVnCL5Uwyyk3G+MoBvrCfz+zjE3v4
yF5+coQfHOY7B/nGIf5ygj8c5zdH+cUx/nGScfvEtKWkEnb7B0vgQ3M=
           "], 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0DcyBAAYhuF/5bDJCiMWCmkUBusAUqkxcrZWNlYqpVLYE+ACXMURuAtP
8c4zX/v1Fkrz54mIKCqfjfjMRHyprGH7myNaS0ZUpSNWWckVVnCZCS4xuMC/
VMQiU/Yekyywkbts4A7ruc06brGWm6zhOqu5wTaesZWnbOEJm3nMHI/YxENm
ecAMi0xznz28YTev2cUrdvKSHSyxnRcc4iMH+cAB3rOft+zjHSdYZp6vHOcL
x/jEUT5zlh+c4Tun+cYpzvn4Vz/K+X1S/2WNJUM=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0TcvBAAcxuG/XbDZ9ElfdDEYtLtJ9NEg2p1JTyTKMemzPp66sugjm82n
8AU8wy/P/r6l43P96ZyImFBDQUQ2P+JPT3pUQkmlciMK8yLSrOAqy7nCMi6z
lEss4SKLOc8iLrCeO6zjNmuZYQ23WM1NVnGdldxgO4/ZxiO28pAtPGAz99nE
XTZyj0leMcFL9vGCvTxnD8/YzRN28ZRjfOAo7znCOw7zlkO84SCzHOA10/xk
ih+c5Ttn+MZpvnKKz5zkC9f4ww47f+tLGf2q0yf/40g1UA==
           "], VertexColors -> 
           None], 
          LineBox[CompressedData["
1:eJwN0DkyAwAYgNFfL5hxAr1CpbONWhClJZEDiL21O0FWtTWl3QlsobXHCRBO
4BXfvP7ryOZSM00RkVF3W0RCnaq1RnSp0hwx0BJRZj9L7GORvcyzhwWOscoU
jzjKQ47wgMPcZ5K7HOIes7ziNC+Z4QXTPOcUzzjJU07wmOM84TIfucQHLrLG
Bd5znnec4y1nec0cb7jNOrf4wU2+c4NvXOcr1/jCVT5xhc/c4R8r/GWZDZb4
wyK/WeAX80x6+6m62v0e1D8RXD2K
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0slTCHAYx+GfKaqZNlNOHVKdzWQcmmmzpCihjXRtvXHMfqW0/AGFypGk
a+uhwckQOmrfhCztdfEcPvO87/2bVnur4uahEEKfshJDiNcJfUgI4aTGY0No
ig9hjI0cZQNHWM8h1nGYDzjF+/zKe/zCu/zMO5zkbX5kMz+xkyvs4DLbucQ2
LvIJF9jKebZwjo85w0ec5QsesI/77OUee7jL59zhM27zKbfYzQ12cZODjIkL
4Q2jOcAovuYR9vMwXzGCLxnJUR7jCJM4zGROMIWpeus+zndM43umM0M5+ubP
5TTzOMN8zvI053iG8zzLBZ7jIgu4xPNcZiFXWMRVXuB3XuQai/mDJfzJS/zF
Uq7zMn/zCv/wKv+yjP9Yzg1WcJOV3GIVt3mNO7zOXVZzjzdYo4c6ZWOTyrS5
o8rWf+TiZ6M=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0ccuhFEYgOEzlszMPyy0IJHoZYbRr4K4BGvhSiTKLehLneix0I1erkDb
2GvP4s1zTs63+k710OjgSCyEMKzeVAiR0spFIWT1GQ9hKhnCByf5zgm+cpxv
XGReIoQFxjjPwDn+eZ/lL2f4zWn+cItF5jZZyA2muM6Ia0xylQmuMM5l5nOJ
BTxkOQ9Yxn2Wco/F3GUJK3TkXMkq1ejYvZYnrOMp63nGBp6zkRds4iWbecUW
5tjKa6Z5wwxv2cY7tvOeWT6wg4/s5BO7+MxuvrCHA3bfr23t6EtjyviblPr0
D1FJPBE=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0klXzmEcx+G7qGwcFoZCnudp1D7TsaDIC3AkMp5MDRRljkK1dY4yFKmo
hYUI0ba8BF5CigZWKjLkehbX+X5+m//if+5YWc2e6oQQwnO2LQ9haFkIS2wu
ffoWKTqHXn2TZJ3NM91Iks7iqW5gsc6kR99gkf5gj/GdPN5zlqN8YwPvOMMR
psllkCoOM0UOb6lkhAzf7rbXSdQxunQ9CTrKE32NoCN06qsssN792F7hH+nu
R/Yyf1nn7rCX+MNad7u9yG/WuB/aC8yT5n5g6/hFqvu+reUnq9337HnmWOVu
s+eYZaW71dYwwwr3XVvND4Y5xCTZvKGCg0yQxWvKKeUrmQxwmgN8if83XnGK
/YwT4yUnKWGMKP2cYB+fifCC4+xllGJaloZQZLfSrHfZLTTpnXYzt3Wh3RR/
W7rAboy/K73D5sfflN5uP/KJO+z2H/4DI8VZOQ==
           "], VertexColors -> None], 
          
          LineBox[{4157, 4106, 3971, 4079, 4036, 3975, 4037, 3899, 3465, 3911,
            3870, 3464, 3002, 3007, 3468, 3008, 3009, 3020, 3474, 3021, 3475, 
           3022, 3476, 3023, 3024, 3040, 3487, 3041, 3488, 3042, 3489, 3043, 
           3490, 3044, 3491, 3045, 3492, 3046, 3493, 3047, 3494, 3048, 3914, 
           3913, 4024, 4025, 4082, 4165}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0DdSAgAQhtG1QgUERVREC3rvQKm1jb0HkIM4o6XhAhhqQyUmQBQ7JRwB
I73xFd+8+bfc0npldWMkItZUzkZ0MhFdbaunFW2lI+pJNzbY1JN27GfussM9
drnPHvsaqGq/8ICvPOQbj/jOY37wU186sb95yh+e8Zfn/GOkIhK6sEdZ4xgv
Oc4rJplSWtf2BG+Y4S2znNSU6naODU6zyTzvOMMWZ3nPOT6wwHkV1bYX+MhF
LvlZS5saatlf/wG/RTb4
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0Mk2wgEYxuGvkLH+kZmNu5C1RVtZOEcUKbMyhQz34Iq4EBa4DPOz+J3n
fJt38S3U2+VWKiLWtJyPeEsi3vWoD63oJRexmI14ZZFLWtenu8IvbvCbm/xh
lb+s8Y9bDFvbTLHONHfYwwZ72WQfd5nhHvu5zwEecJCHHOIRh3nMEZ4wyxZz
bDPhKfM84yjPOcYLFnjJcXY4wStO8ppTvOE0u5zhLWd5xznec54PXGVZT3pW
yV//AXgmJgM=
           "], VertexColors -> None]}, {}, {}}}, 
       VertexColors -> CompressedData["
1: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
de/ZH+kRaDCnb213IZsEI9bMLOtH6bBZPf+V6BUaGBdcfbrSiwgm32/B5VI6
tA4rxiWx0MA52DqPz2MUZNptA6LvofuLHP/2K5sKcmfxO1+ivr4+dfH6Zys6
CClFCYeh/a9X9tN+dp5h4JLu/rlnHx1kXvycam6jQPMPx3DbfjzkGp/yebSK
DiqSNh83X6ZAeYz3Jq9KHHxNU2KJQfv5KOmgVTnMFLAKmE5ZMTYEHmzG7HfL
aVDxRvz9VAkZUgKO++YVDwLcuv2IDc1rY30RNVbnyJCN3HidqNcPMewE1Tlr
9PM4l1NpNDRvmBWM3xrrAWKs6sjYfhp8YKHyet4cAz4FtfVu97vgy4xGuyk7
DZTitZEAgTGYe8w3b83fCRxAci2iU8GVJMyR2UkCr6xD5TxCHXD8gEhkYAMV
TitMpNzyI/3jPlrW/1kq9/iZ1lU0/mM7/YfVqWi8z7ZXTbUg4LtV3Mc5hw5v
DLy46poQWPmOT9b9DgKim56w/Wyngdnr+wJVuQjsNiohVRxCoIlZIObWIhVW
CpSIv41A4CLxdNaqKTq4jscLr5OhwvMb32SKHRGIvP79kn42HSztaGdcgtA+
mGXt535DBF6+chwwuUKHmiL2DqFeMgibmgZ7KiOg4S8zzKtIh1zKjDavEBlM
0hckm4XR/WudZzo4ToM4cXzNhgtjkEBJrd22AoEiqa/C5nk0CDr3+cCaJyRo
VzxqGYjOI3SvVOVb9jRwLM/8XrmWBDlq/i52X+gQkdS2emYfyveIN1R6EuGa
2Mon59F8VT3HXn8TzVf/9PlZ1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd
1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd1mVd
1mVd1mVd1mVd1v9+2tx5VcT3JgI/ftTul6MhgEy4dW5sR6DeqP7WPlYERKai
LQ72IHB0vwFu8CkC5VbXFbxM6fB622AKpRqB7DVmns2OCAS4nzfLz6XBkOfW
9UVZCFjUsIll7ET+8c+3rP89NLLSq+JyPgKWY0+iNnxHYMRDWE9yGIFHY6JD
RBMEXEKfXFQhInCB4hK5vx6BHJ5GZtuVqO+2P1G0Q/3ZYVH/+UQ26s8VMdcg
gQ7qATtLyxsRSArgZ7kUiADvZHGY1To6nBre47O3GIEyHumPvvoImHkIvn8U
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
/FQIDMG4Qty6wc9d0rVQlApar3bwcUdTgNByUJy14Q3MfsFaaFiKQZsCP9cx
pwFgcJfgOyl8FFaNyPAfVqOAT4Sl3O36iXmx5GyLioUq/boxX7dqe30c/brB
5dHfdGGK9ymrtV2MTQfp8TM1Vz4XCNHzmq2vupaj4gSvteXYteTYUYDNdRur
6zYaHLT59g/lXVK6V6V0a2DRN3MVA8b/978n6pbfCVm+FbIk/ct2vhf/rb/7
vfhv9fPfw//z8fZH+efP9tuv7udfJV6/Snz/mvHz4+P9q42HH4X/6Dj87HH5
0f6YttN22k7baTttfyX7s/H4NP7fgX+vHvnV+/+j8Gn/TPvn59lH+s/xaf//
WP//Fv6z+e1X9+e/wu1bvg1s+vd6fzX+s8V3Ou4/53j40X77u/j/38Wx7d8O
rHRC1ynBtE2dXX8ZPh3f/+74fi/+s/ntV/fnj/L/z9b/n80/v4o/p/G/Bp/m
r2l8Gv/9+M+WN07j0/h/E/6r7vP82fvAv+W3P6pe93/RP+/97I/dT/t131P/
bOP8V6nn/Nne2/4q9YT/rc81bafttJ220/bXsj8b/07jvxb+s9Vf/ep5/rR/
pv3zK9bDTPv/x/r/e/GfzW+/uj//Ff6z1Gv9bPiPjsuvGt8/ajz8aL/9Xfz/
7+K/Sn3CdHx/zvj+6vVR/63+nK7f++9+3mn8j8Wn+WIa/zvgP1veNY1P478S
/qvvH/5s+zB/dj3J/93+9/P7780nfzb//9l1hj/b8/41/vnr/fDvjue/et/m
Z4vvr4J/b3x/tv5P49P4z7M+//758sfy43+e5/yrdeCf1+1/r357ej35u+F/
1Lj9u9Vd/N3wf4yHPytv/FG88KPW89+yf5Q+/aPj+5+2/+89189fn/yz1Tn8
bOvGr4L/3+Pi9+dX0/g0/ufpiN+ft/8D/6PeU/9zO9P7EtP47xm3f7TO/avH
+Z/9XP9u/vBnPe+PXcf+fL/9p+vS/91f+vb/Bxl+Bu0=
        "]], {
      DisplayFunction -> Identity, AspectRatio -> 3.333333333333333, 
       AxesLabel -> {None, None, None}, AxesOrigin -> {Automatic, Automatic}, 
       DisplayFunction :> Identity, Frame -> True, FrameLabel -> {None, None},
        FrameTicks -> {{{{0., 
            FormBox["0.`", TraditionalForm]}, {0.2, 
            FormBox["0.2`", TraditionalForm]}, {0.4, 
            FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
            FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
            FormBox["0.8`", TraditionalForm]}, {1., 
            FormBox["1.`", TraditionalForm]}}, None}, {{{-1, 
            FormBox["1", TraditionalForm]}, {-0.9, 
            FormBox["0.9`", TraditionalForm]}, {-0.8, 
            FormBox["0.8`", TraditionalForm]}, {-0.7, 
            FormBox["0.7`", TraditionalForm]}, {-0.6, 
            FormBox["0.6`", TraditionalForm]}, {-0.5, 
            FormBox["0.5`", TraditionalForm]}, {-0.4, 
            FormBox["0.4`", TraditionalForm]}, {-0.3, 
            FormBox["0.3`", TraditionalForm]}, {-0.2, 
            FormBox["0.2`", TraditionalForm]}, {-0.1, 
            FormBox["0.1`", TraditionalForm]}, {0, 
            FormBox["0", TraditionalForm]}}, None}}, FrameTicksStyle -> 12, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> {160, 350}, 
       Method -> {
        "OpacityFunction" -> None, "OpacityFunctionScaling" -> True, 
         "GridLinesInFront" -> True}, 
       PlotRange -> {{-0.6, -0.39999999999999997`}, {0, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJztl4dTFFccx7GODccYdOxjQaOjGcZYSBD9xmFijL3FWGMDNVGJRqKMEkuw
xJKoAcSCQbGgqGhQjBpFROwdMai0K8Bxd7t3GjVoLMm+3753O3PvL8gMO3Oz
7Gd33+/9vr+2tJn6zYiwaj4+PlW031Xtx/7Wj8eoPFeeK8+V5//recKGrOcd
J7ixPC5k3WybG++n7XAnX3LjZKuVzuEnXajaeXXjh7fcGBfaq3joT274pX5q
XuTnQnTmtV2fnHCD3a0Y6cbc3nXyds9VUX10fbYEjl9ZkJHYzI0bdChgq7Va
6Yb2sraCCx3JsIKaZNgNeivZhVX0nNOzbrBmNT7cBQu950CtQy20rbjx1SY1
Cj1c6MPM9nZgTd/JpXfaurGZufFKxbat7LCDbtdx48JzZlHF32S4HOypA09c
eJx8aWDgGhUjyOFy1COHXWhJDqsgd1Nt0DbRMDrThQH0gMrXtXn2vVDzNqBQ
wXQ6ykCybnBhDwmjgC6zStFgzEeaNC7cbZv/csnXCkjmVqUgd7504W1upL1D
VwXk7qISNCShXaAwVDjxgJnNsyKmCVPahbFsuQwnundjh9UTH6HjRjJsQRzX
5RgL70AnFLptBslsVWFiMjd0or8eIJC711T4kh4O7ocJZDZNRRAF2MHzyASS
e6uKGeS/g+dPETRR/GsuVxFLLzp4nhRie3bro9/OVHGepdFTO8+HArTguruY
HKftMNF2HoG2HaiiOa1nxxay95Drp/J92zGMDD9AIhlW8R0JZUc9ilcemNVN
qoLdmtU3ueXIprjcRxJdK7itqbF3ezmiSMhctGNhOqPg9YEnOYOnlnOd73ni
2on2Xc71vIv2lNAK9DKw8efuYB85rPC6sXF9buG9riyjFdC2omxchxvYz9Ky
rwLmbVyIjft7ldtTPPlXi86XkcK210BBIBVCGSJp/9mevKHyjS9DOe3zPKiM
ip0878qQSfvJ4PXvxDkSsAw7ye4pXgcib0qxjNY/DgpHnBNNKS9K+Tqp3B8n
+jFZI8Xze0Duhjoxn92G4LFI43m5k+JWyvPKx4fk7ubETeojJR5ezPPVm+t1
7ZC4rovMtWBrgZG5Xr8yJxnDZc6s5gyWeQzPe2/OsvuzejLXy9Yucb0eZU5l
fUDmel+TeQLVncxF/XjzZ29YQ5K5HieZDyKhyyX+gpVVtsz1+pD5MGq4Mhd1
6M31epH5KAqwzPVD5npd2CRObTtD5vq8k7moZ2+uz1uZ63NN5voclTmbdvkv
yySuzy+Z6/1G5qIveHN9Tsn8bATLaJnr81jmjahxyFzv+6USn0OFJHPRX7z5
RWroMp9Hc0bm+lyX+VUmc4DM9fkh8zYU4BKJi2tvnh74Iis0RZvnfrhUkG7w
HUntTr1eXYIvxv92TvnV4Ct8hx6JDStBAr8v+OzIRXu7hJTAYo9LqzfPO89L
+DwxePCQu5smvLVCvCe4v7bqs3wrmNXgLgav699xyfpTVlTUnLRlUCODP/15
ZIR/vBViPcFpPEZY+fejwS+EpkweNcLKnF0RdcfgB2/fH60EWCHsCB4TVGXw
Cl8rhs/atjAhyeCLtV23cFoQr3l7aJ3Bp1GCWlDA7Qs+cHF0wKB9FrTp+2Ta
jYkG/6AstX1JtAXTf5w2saCfwZsNf9Q8aooFYl+CVz1TQwuVBY8b9x/2uonB
HR2YwBb0ZO27qsFzNFVC/jFD7FdwkjnPjEwmc67Bd8045pifbkaN7u/0DD5r
8DU5Raa6MWYM4H4Irn83mfl3pcHH7O9xs9cQM+7Xntl2dqTBP353yoV7nc0Q
/gnOVJ9V2wwW3fUDDN7A/vuRajYT9hRn1E/oZnC9b5sg/BbcxB5LMiEgfHeV
MzUMfrlT0C/Xl5oQkd7o1XWX2cO1ZNaUN0HoIXj8vxuXvAoyQRNPdWYafKkW
1ZgmJujzzeA3U1igiiF0EjxhWYesVcnFuNWUOWzw8NHfp56YWgw/JkeYwft0
yd1W1rIYY7l+gten/lmERPreNHhh3vL5/WKLYO3ZLHN8a4MfOvxg0oKhRRC6
Ch7FwlenCHMuvk1b/JfJmI9jV33458VCHGPpnG9w/bu2EEJvwR3VWYIUovf2
zxMPHjb46Udr34RVFOAHy+Utf2w2+NqjZq0zFOAKj4Pg45jZOQXwZWZnGrwT
/+7W//8x4T/ufq1G
                "], {{-80., 
                  Rational[-15, 2]}, {80., 
                  Rational[15, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[15, 2]}, {80., 
                    Rational[15, 2]}, {80., 
                    Rational[-15, 2]}}, {{80., -7.5}, {-80., -7.5}, {-80., 
                  7.5}, {80., 7.5}, {80., -7.5}}]]}, {
                CapForm[None], {}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{-80., 7.5}, {80., 7.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{-76.76404494382022, 7.5}, 
                    
                    Offset[{0, 4.}, {-76.76404494382022, 
                    7.5}]}, {{-40.80898876404495, 7.5}, 
                    
                    Offset[{0, 4.}, {-40.80898876404495, 
                    7.5}]}, {{-4.853932584269663, 7.5}, 
                    Offset[{0, 4.}, {-4.853932584269663, 7.5}]}, {{
                    31.10112359550562, 7.5}, 
                    Offset[{0, 4.}, {31.10112359550562, 7.5}]}, {{
                    67.0561797752809, 7.5}, 
                    Offset[{0, 4.}, {67.0561797752809, 7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-69.57303370786516, 7.5}, 
                    
                    Offset[{0., 2.5}, {-69.57303370786516, 
                    7.5}]}, {{-62.38202247191011, 7.5}, 
                    
                    Offset[{0., 2.5}, {-62.38202247191011, 
                    7.5}]}, {{-55.19101123595506, 7.5}, 
                    Offset[{0., 2.5}, {-55.19101123595506, 7.5}]}, {{-48., 
                    7.5}, 
                    Offset[{0., 2.5}, {-48., 7.5}]}, {{-33.61797752808989, 
                    7.5}, 
                    
                    Offset[{0., 2.5}, {-33.61797752808989, 
                    7.5}]}, {{-26.426966292134832`, 7.5}, 
                    
                    Offset[{0., 2.5}, {-26.426966292134832`, 
                    7.5}]}, {{-19.235955056179776`, 7.5}, 
                    
                    Offset[{0., 2.5}, {-19.235955056179776`, 
                    7.5}]}, {{-12.04494382022472, 7.5}, 
                    Offset[{0., 2.5}, {-12.04494382022472, 7.5}]}, {{
                    2.337078651685393, 7.5}, 
                    Offset[{0., 2.5}, {2.337078651685393, 7.5}]}, {{
                    9.52808988764045, 7.5}, 
                    Offset[{0., 2.5}, {9.52808988764045, 7.5}]}, {{
                    16.719101123595507`, 7.5}, 
                    Offset[{0., 2.5}, {16.719101123595507`, 7.5}]}, {{
                    23.910112359550563`, 7.5}, 
                    Offset[{0., 2.5}, {23.910112359550563`, 7.5}]}, {{
                    38.29213483146068, 7.5}, 
                    Offset[{0., 2.5}, {38.29213483146068, 7.5}]}, {{
                    45.48314606741573, 7.5}, 
                    Offset[{0., 2.5}, {45.48314606741573, 7.5}]}, {{
                    52.67415730337079, 7.5}, 
                    Offset[{0., 2.5}, {52.67415730337079, 7.5}]}, {{
                    59.86516853932584, 7.5}, 
                    Offset[{0., 2.5}, {59.86516853932584, 7.5}]}, {{
                    74.24719101123596, 7.5}, 
                    Offset[{0., 2.5}, {74.24719101123596, 7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{0., 7.}, {-76.76404494382022, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{0., 7.}, {-40.80898876404495, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3000", TraditionalForm], 
                    Offset[{0., 7.}, {-4.853932584269663, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    Offset[{0., 7.}, {31.10112359550562, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5000", TraditionalForm], 
                    Offset[{0., 7.}, {67.0561797752809, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
              PlotRange -> All, Frame -> True, 
              FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {160., Automatic}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.02`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.04`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.06`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.08`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.12`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.14`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.17`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.21`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.24`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.26`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.994, 0.986], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.64, 0.6626666666666667, 0.6573333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.96`", ",", "0.994`", ",", "0.986`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.994, 0.986]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.994, 0.986], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9199999999999999, 0.988, 0.972], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6133333333333333, 0.6586666666666667, 0.648], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9199999999999999`", ",", "0.988`", ",", 
                    "0.972`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9199999999999999, 0.988, 0.972]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9199999999999999, 0.988, 0.972], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.28`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8799999999999999, 0.982, 0.958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5866666666666667, 0.6546666666666667, 
                    0.6386666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8799999999999999`", ",", "0.982`", ",", 
                    "0.958`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8799999999999999, 0.982, 0.958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8799999999999999, 0.982, 0.958], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.29`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.56, 0.6506666666666667, 0.6293333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8400000000000001`", ",", "0.976`", ",", 
                    "0.9440000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.97, 0.93], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5333333333333334, 0.6466666666666667, 
                    0.6200000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.97`", ",", "0.93`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.97, 0.93]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.97, 0.93], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.31`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.76, 0.964, 0.916], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5066666666666667, 0.6426666666666667, 
                    0.6106666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.76`", ",", "0.964`", ",", "0.916`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.76, 0.964, 0.916]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.76, 0.964, 0.916], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72, 0.958, 0.902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.48, 0.6386666666666667, 0.6013333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.72`", ",", "0.958`", ",", "0.902`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72, 0.958, 0.902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72, 0.958, 0.902], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6799999999999999, 0.952, 0.888], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.4533333333333333, 0.6346666666666667, 
                    0.5920000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6799999999999999`", ",", "0.952`", ",", 
                    "0.888`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6799999999999999, 0.952, 0.888]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6799999999999999, 0.952, 0.888], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.34`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6399999999999999, 0.946, 0.874], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42666666666666664`, 0.6306666666666667, 
                    0.5826666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6399999999999999`", ",", "0.946`", ",", 
                    "0.874`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6399999999999999, 0.946, 0.874]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6399999999999999, 0.946, 0.874], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.35000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5999999999999999, 0.94, 0.86], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3999999999999999, 0.6266666666666667, 
                    0.5733333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5999999999999999`", ",", "0.94`", ",", 
                    "0.86`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5999999999999999, 0.94, 0.86]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5999999999999999, 0.94, 0.86], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.36`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3733333333333334, 0.6226666666666667, 
                    0.5640000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.56`", ",", "0.9339999999999999`", ",", 
                    "0.8460000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.37`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3466666666666667, 0.6186666666666667, 
                    0.5546666666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.52`", ",", "0.9279999999999999`", ",", 
                    "0.8320000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.38`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.32, 0.6146666666666667, 0.5453333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.48`", ",", "0.9219999999999999`", ",", 
                    "0.8180000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.39`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.29333333333333333`, 0.6106666666666667, 0.536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.43999999999999995`", ",", 
                    "0.9159999999999999`", ",", "0.804`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804],
                     Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2666666666666666, 0.6066666666666667, 
                    0.5266666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3999999999999999`", ",", "0.9099999999999999`",
                     ",", "0.79`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.41000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23999999999999994`, 0.6026666666666667, 
                    0.5173333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3599999999999999`", ",", "0.9039999999999999`",
                     ",", "0.776`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.42`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32000000000000006`, 0.898, 0.762], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.21333333333333337`, 0.5986666666666667, 0.508], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.32000000000000006`", ",", "0.898`", ",", 
                    "0.762`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32000000000000006`, 0.898, 0.762]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32000000000000006`, 0.898, 0.762], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.43`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28, 0.892, 0.748], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1866666666666667, 0.5946666666666667, 
                    0.4986666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.28`", ",", "0.892`", ",", "0.748`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28, 0.892, 0.748]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28, 0.892, 0.748], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.44`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.886, 0.734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.16, 0.5906666666666667, 0.48933333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.24`", ",", "0.886`", ",", "0.734`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.886, 0.734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.886, 0.734], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.45`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0.88, 0.72], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1333333333333333, 0.5866666666666667, 0.48], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19999999999999996`", ",", "0.88`", ",", 
                    "0.72`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0.88, 0.72]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0.88, 0.72], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.15999999999999992`, 0.874, 0.706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10666666666666662`, 0.5826666666666667, 
                    0.4706666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15999999999999992`", ",", "0.874`", ",", 
                    "0.706`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15999999999999992`, 0.874, 0.706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15999999999999992`, 0.874, 0.706], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.47000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.11999999999999988`, 0.868, 0.692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07999999999999993, 0.5786666666666667, 
                    0.4613333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.11999999999999988`", ",", "0.868`", ",", 
                    "0.692`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.11999999999999988`, 0.868, 0.692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.11999999999999988`, 0.868, 0.692], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.08000000000000007, 0.862, 0.678], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.053333333333333385`, 0.5746666666666667, 
                    0.45200000000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.08000000000000007`", ",", "0.862`", ",", 
                    "0.678`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.08000000000000007, 0.862, 0.678]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.08000000000000007, 0.862, 0.678], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.49`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.040000000000000036`, 0.856, 0.664], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.026666666666666693`, 0.5706666666666667, 
                    0.4426666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.040000000000000036`", ",", "0.856`", ",", 
                    "0.664`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.040000000000000036`, 0.856, 0.664]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.040000000000000036`, 0.856, 0.664], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.85, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5666666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.85`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.85, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.85, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.51`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.842, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5613333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.842`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.842, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.842, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.52`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.834, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.556, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.834`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.834, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.834, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.53`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.826, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5506666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.826`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.826, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.826, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.54`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.818, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5453333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.818`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.818, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.818, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.55`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8099999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.54, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8099999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8099999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8099999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.56`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8019999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5346666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8019999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8019999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8019999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5700000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7939999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5293333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.7939999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7939999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.7939999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.58`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.786, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.524, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.786`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.786, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.786, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.59`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.778, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5186666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.778`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.778, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.778, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.77, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5133333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.77`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.77, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.77, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.61`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.762, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.508, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.762`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.762, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.762, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.62`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.754, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5026666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.754`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.754, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.754, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.63`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.746, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.49733333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.746`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.746, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.746, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.64`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.738, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.492, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.738`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.738, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.738, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.65`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.73, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4866666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.73`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.73, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.73, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.66`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.722, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.48133333333333334`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.722`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.722, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.722, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.67`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.714, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.476, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.714`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.714, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.714, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.68`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.706, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4706666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.706`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.706, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.706, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.698, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4653333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.698`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.698, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.698, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7000000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.69, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.45999999999999996`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.69`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.69, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.69, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.71`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.682, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4546666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.682`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.682, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.682, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.72`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.674, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44933333333333336`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.674`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.674, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.674, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.73`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.666, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44400000000000006`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.666`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.666, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.666, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.74`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.658, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4386666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.658`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.658, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.658, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.75`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.65, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.43333333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.65`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.65, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.65, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.76`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6416000000000001, 0.6444], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4277333333333334, 0.4296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.6416000000000001`", ",", 
                    "0.6444`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6416000000000001, 0.6444]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6416000000000001, 0.6444], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.77`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6332, 0.6388], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.42213333333333336`, 0.4258666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6332`", ",", "0.6388`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6332, 0.6388]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6332, 0.6388], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.78`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6248, 0.6332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.41653333333333337`, 0.42213333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6248`", ",", "0.6332`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6248, 0.6332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6248, 0.6332], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.79`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6164, 0.6276], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4109333333333333, 0.41840000000000005`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6164`", ",", "0.6276`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6164, 0.6276]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6164, 0.6276], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.608, 0.622], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4053333333333333, 0.4146666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.608`", ",", "0.622`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.608, 0.622]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.608, 0.622], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.81`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5996, 0.6164], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3997333333333334, 0.4109333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5996`", ",", "0.6164`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5996, 0.6164]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5996, 0.6164], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8200000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5912, 0.6108], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.39413333333333334`, 0.4072], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5912`", ",", "0.6108`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5912, 0.6108]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5912, 0.6108], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8300000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5828, 0.6052], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38853333333333334`, 0.40346666666666664`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5828`", ",", "0.6052`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5828, 0.6052]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5828, 0.6052], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.84`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5744, 0.5996], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38293333333333335`, 0.3997333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5744`", ",", "0.5996`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5744, 0.5996]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5744, 0.5996], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.85`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3773333333333334, 0.3960000000000001], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5660000000000001`", ",", 
                    "0.5940000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.86`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5576, 0.5884], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.37173333333333336`, 0.3922666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5576`", ",", "0.5884`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5576, 0.5884]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5576, 0.5884], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.87`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5492, 0.5828], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.36613333333333337`, 0.38853333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5492`", ",", "0.5828`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5492, 0.5828]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5492, 0.5828], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.88`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5408, 0.5772], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3605333333333333, 0.38480000000000003`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5408`", ",", "0.5772`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5408, 0.5772]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5408, 0.5772], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.89`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5324, 0.5716], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3549333333333333, 0.38106666666666666`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5324`", ",", "0.5716`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5324, 0.5716]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5324, 0.5716], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.524, 0.5660000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3493333333333334, 0.3773333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.524`", ",", 
                    "0.5660000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.524, 0.5660000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.524, 0.5660000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.91`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5156, 0.5604], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.34373333333333334`, 0.37360000000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5156`", ",", "0.5604`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5156, 0.5604]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5156, 0.5604], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5072, 0.5548], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33813333333333334`, 0.3698666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5072`", ",", "0.5548`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5072, 0.5548]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5072, 0.5548], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.93`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49879999999999997`, 0.5492], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33253333333333335`, 0.36613333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49879999999999997`", ",", 
                    "0.5492`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49879999999999997`, 0.5492]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49879999999999997`, 0.5492], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9400000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49039999999999995`, 0.5436], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3269333333333333, 0.3624], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49039999999999995`", ",", 
                    "0.5436`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49039999999999995`, 0.5436]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49039999999999995`, 0.5436], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9500000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.482, 0.538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.32133333333333336`, 0.3586666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.482`", ",", "0.538`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.482, 0.538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.482, 0.538], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.96`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4736, 0.5324], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31573333333333337`, 0.3549333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4736`", ",", "0.5324`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4736, 0.5324]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4736, 0.5324], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.97`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.46520000000000006`, 0.5268], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31013333333333337`, 0.35120000000000007`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.46520000000000006`", ",", 
                    "0.5268`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.46520000000000006`, 0.5268]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.46520000000000006`, 0.5268], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.98`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4568, 0.5212], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3045333333333333, 0.3474666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4568`", ",", "0.5212`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4568, 0.5212]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4568, 0.5212], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.99`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4484, 0.5156000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.2989333333333334, 0.3437333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.4484`", ",", 
                    "0.5156000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4484, 0.5156000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4484, 0.5156000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.44, 0.51], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.29333333333333333`, 0.34], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.44`", ",", "0.51`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.44, 0.51]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.44, 0.51], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"1.`", " ", "#1"}]}]}], "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"908.3513723885485`", ",", "5357.919662156035`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "160.`"}], ",", 
             RowBox[{"ScalingFunctions", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Left"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      GraphicsComplexBox[CompressedData["
1:eJyEnQV0Fdf3trHi7kXaIsXd/eAOxd3dSqFQ2l4oUqwEl1K8tHhwhyCDF0ty
kxvDiQtJCO7w3Rn2+x4y/++3YLFW19OTN5nceeacffbMvRQZ9EOnoalSpEix
MXuKFOZ/e61o1nNFsxtGgc2N3H/XqAKLH+Vf/CiEfHPe+hD3X/KaWa1WzWql
ude0Z92nPQvWecc/+Rz/aL45sV2w+6/O//Bq5Q+vgnR+1JZuo7ZoLjC0Y96h
HTXf7P8u0P1X53vt+LPXDs29upp/NBfokDJPh5Sab7beHeD+q/Pmr9tTc6+G
X3Rp+IXmAnX356q736Xz1fu63H91vlKG5ZUyaO5V9nCnsof9db7EwJwlBmq+
+U0Wf/dfnS94fGnB4346n9f8hTUXyGH+0Xwz0ymn+6/Opx25JO1Izb3MXzeP
5qovZ3z9coYv+UDCjQ0JN3zIlcMrfxVeWfM+8+zO8yZX9Akt5BN6nbznfO11
52trLm8e/tJr5F17Ytfsib1KLmv9V3Nyvzxtfnna/PK0+eVp88vT5penzS9P
m1+eNr88bX552vzytPnlafPL0+aXp80vT5tfnja/PG1+edr88rT55Wnzy9Pm
l6fNL0+bX542vzxtfnna/PK0+eVp88vT5penzS9Pm1+eNr88bX552vzytPnl
afPL0+aXJ/3Kbb2uB+kXGH6B4RcYfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEv
fjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEvfjEv
fjEvfoHhFxh+geEXGH6B4RcYfoHhFxh+geEXjy/Z/OVlm7+8bPOXl23+8rLN
X162+cvLNn952eYvL9v85WWbv7xs85eXbf7yss1fXrb5y8s2f3nZ5i8v2/zl
ZZu/vGzzl5dt/vKyzV9etvnLyzZ/ednmLy/b/OVlm7+8bPOXl23+8rLNX162
+cvLNn952eYvL9v85WWbv7xs85eXbf7yss1fXrb5y4t+LbGO+wz9AsMvMPwC
wy/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/m
xS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS8w/ALDLzD8AsMvMPwCwy8w
/ALDLzD84vGJX7ms1/U8/QLDLzD8AsMv5sUv5sUv5sUv5sUv5sUv5sUv5sUv
5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv5sUv
5sUv5sUvMPwCwy8w/ALDLzD8AsMvMPwCwy8w/OLxiV8rrfN+iX6B4RcYfoHh
F/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/Pi
F/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiFxh+geEXGH6B4RcYfoHhFxh+
geEXGH7x+MSvLz/+f/oFhl9g+AWGX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yL
X8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yLX8yL
X8yLX2D4BYZfYPgFhl9g+AWGX2D4BYZfYPjF4xO/1n38OfQLDL/A8AsMv5gX
v5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gX
v5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv8DwCwy/wPALDL/A8AsMv8DwCwy/
wPCLx5esvnfa6nunrb532up7p62+d9rqe6etvnfa6nunrb532up7p62+d9rq
e6etvnfa6nunrb532up7p62+d9rqe6etvnfa6nunrb532up7p62+d9rqe6et
vnfa6nunrb532up7p62+d9rqe6etvnfa6nunrb532up7p62+d9rqe6etvnfa
6nsn/fL/+DrQLzD8AsMvMPxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxi
XvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvwC
wy8w/ALDLzD8AsMvMPwCwy8w/ALDLx5fsv6qy9Zfddn6qy5bf9Vl66+6bP1V
l62/6rL1V122/qrL1l912fqrLlt/1WXrr7ps/VWXrb/qsvVXXbb+qsvWX3XZ
+qsuW3/VZeuvumz9VZetv+qy9Vddtv6qy9Zfddn6qy5bf9Vl66+6bP1Vl62/
6rL1V122/qrL1l912fqrLlt/1WXrr7ps/VUX/er28TzRLzD8AsMvMPxiXvxi
XvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxi
XvxiXvxiXvxiXvxiXvxiXvxiXvxiXvwCwy8w/ALDLzD8AsMvMPwCwy8w/ALD
Lx6f+LXq43mnX2D4BYZfYPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjF
vPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPjFvPgF
hl9g+AWGX2D4BYZfYPgFhl9g+AWGXzw+8Us8ol9g+AWGX2D4xbz4xbz4xbz4
xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4
xbz4xbz4xbz4xbz4xbz4xbz4BYZfYPgFhl9g+AWGX2D4BYZfYPgFhl88PvGr
kPX/b9IvMPwCwy8w/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe
/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/GJe/ALDLzD8
AsMvMPwCwy8w/ALDLzD8AsMvHp/41e90ZO/TkbfoFxh+geEXGH4xL34xL34x
L34xL34xL34xL34xL34xL34xL34xL34xL34xL34xL34xL34xL34xL34xL34x
L34xL34xL34xL34xL34xL34xL36B4RcYfoHhFxh+geEXGH6B4RcYfoHhF49P
/Npo/Zw79AsMv8DwCwy/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/
mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/mBe/wPAL
DL/A8AsMv8DwCwy/wPALDL/A8IvHJ36FPS5/z/2XfoHhFxh+geEX8+IX8+IX
8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX
8+IX8+IX8+IX8+IX8+IX8+IX8+IXGH6B4RcYfoHhFxh+geEXGH6B4RcYfvH4
xK9l1nHfp19g+AWGX2D4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4
xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4BYZf
YPgFhl9g+AWGX2D4BYZfYPgFhl88PvHroPVARSj9AsMvMPwCwy/mxS/mxS/m
xS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/mxS/m
xS/mxS/mxS/mxS/mxS/mxS/mxS8w/ALDLzD8AsMvMPwCwy8w/ALDLzD84vGJ
XwHW6xBGv8DwCwy/wPCLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGL
efGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefELDL/A
8AsMv8DwCwy/wPALDL/A8AsMv3h84tcza7nUfoHhFxh+geEX8+IX8+IX8+IX
8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX
8+IX8+IX8+IX8+IX8+IX8+IXGH6B4RcYfoHhFxh+geEXGH6B4RcYfvH4xK+8
1usaTr/A8AsMv8Dwi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nx
i3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxi3nxCwy/wPAL
DL/A8AsMv8DwCwy/wPALDL94fOJXzZYzq7WcGUG/wPALDL/A8It58Yt58Yt5
8Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt5
8Yt58Yt58Yt58Yt58Yt58Yt58QsMv8DwCwy/wPALDL/A8AsMv8DwCwy/eHzi
Vw/rPEXSLzD8AsMvMPxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxi
XvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvxiXvwCwy8w
/ALDLzD8AsMvMPwCwy8w/ALDLx6f+PXroJKTBpWMol9g+AWGX2D4xbz4xbz4
xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4
xbz4xbz4xbz4xbz4xbz4xbz4xbz4BYZfYPgFhl9g+AWGX2D4BYZfYPgFhl88
PvHr43nXfoHhFxh+geEX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX
8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IXGH6B
4RcYfoHhFxh+geEXGH6B4RcYfvH4xK8TU64dnXItmn6B4RcYfoHhF/PiF/Pi
F/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/PiF/Pi
F/PiF/PiF/PiF/PiF/PiF/PiF/PiFxh+geEXGH6B4RcYfoHhFxh+geEXGH7x
+MSv25ZHMfQLDL/A8AsMv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gX
v5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv5gXv8Dw
Cwy/wPALDL/A8AsMv8DwCwy/wPCLxyd+vbPesBZLv8DwCwy/wPCLefGLefGL
efGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGL
efGLefGLefGLefGLefGLefGLefELDL/A8AsMv8DwCwy/wPALDL/A8AsMv3h8
4tdX1v+Po19g+AWGX2D4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4
xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4xbz4BYZf
YPgFhl9g+AWGX2D4BYZfYPgFhl88PvFLmS9rrgf0Cwy/wPALDL+YF7+YF7+Y
F7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+YF7+Y
F7+YF7+YF7+YF7+YF7+YF7+YF7/A8AsMv8DwCwy/wPALDL/A8AsMv8Dwi8cn
fg2wngfTfoHhFxh+geEX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX
8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IX8+IXGH6B
4RcYfoHhFxh+geEXGH6B4RcYfvH4xK8ZZrl/NJ5+geEXGH6B4Rfz4hfz4hfz
4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz4hfz
4hfz4hfz4hfz4hfz4hfz4hfz4hcYfoHhFxh+geEXGH6B4RcYfoHhFxh+8fjE
r3+tn5NAv8DwCwy/wPCLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGL
efGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefGLefELDL/A
8AsMv8DwCwy/wPALDL/A8AsMv3h84td5czrrnUi/wPALDL/A8It58Yt58Yt5
8Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt58Yt5
8Yt58Yt58Yt58Yt58Yt58Yt58QsMv8DwCwy/wPALDL/A8AsMv8DwCwy/eHzi
V4T1POtD+gWGX2D4BYZfzItfzItfzItfzItfzItfzItfzItfzItfzItfzItf
zItfzItfzItfzItfzItfzItfzItfzItfzItfzItfzItfzItfzItfzItfYPgF
hl9g+AWGX2D4BYZfYPgFhl9g+MXjS/b5mB7qtdW3+F+fJ+1h+7xMD9vnZXrY
Pi/Tw/Z5mR62z8v0sH1epoft8zI9bJ+X6WH7vEwP2+dletg+L9PD9nmZHrbP
y/SwfV6mh+3zMj1sn5fpYfu8TA/b52V62D4v08P2eZkets/L9LB9XqaH7fMy
PWyfl+lh+7xMD9vnZXrYPi/Tw/Z5mR62z8v0sH1epoft8zI9bJ+X6WH7vEwP
2+dletg+L9PD9nmZHipsg3kAV+hXct88beOeHMfnuWIcnDzvZct7cXyJfJ4i
xsEYtx633X+e42CMW/95dYnjYIzj86gwDsY4Pk8I4+Dkx+e0HZ+T4/g8D4yD
k78+Ltvr4+I43k+PcTDG8X5ojIMxjvezYhyMcbwfEeNgjOP9ZBgHYxzvB8I4
GON4PwfGwRjH8/gYB2Mcz1NjHIxxPA+LcTDG8TwjxsEYx/NoGAdjHM8TYRyM
cTwPgnEwxnE/H+NgjON+LMbBGMf9NIyDMY77IRgHYxz9bIyDMY5+JMbBGEc/
CeNgjKMfgHEwxrGfwzgY46jHMQ7GOOopjIMxjvUQ4/b18Ufz5Vyp6y8w1kMw
1kMw1kPmZT1kXtZD5mU9ZF7WQ+ZlPWRe1kPmZT1kXtZD5mU9ZF7WQ+ZlPWRe
1kPmZT1kXtZD5mU9ZF7WQ+ZlPWRe1kPmZT1kXtZD5mU9ZF7WQ+ZlPWRe1kMw
1kMw1kMw1kMw1kMw1kMw1kMw1kMw1kMw1kNw8vXLQ3mZ8YKaHQv++2XBf7q+
qjN3Qq25EzS/Nn+drzV7Wde1rq8cP5t/NNf5sVjNH4tpfj3G9/kYX11feQ2f
fGT4ZM0Oa57RXMc63bqeet3dFFyzVyfzhGt2WHrreqqONe9pft244tPGFTV7
1b91sP4tXU85apm/sOY6Vc0/ml9b87Cup7xKzT9Qar5mh/nr1tRc5yvzBOt6
6nV+84LW7GWtC5odWaPHZY3W9VQdU+/lml+nVkmpleaJ1uWo663H1jyi+ceY
2f1iZut6K+mO+UfXW+PMl7e65sTLC29fXqjrrbHWvKjrrfiD5gumeYx5+f+p
663k9cEmW32wyVZ/7LPVH/s4/pc1Lx3hOBjj1iw47xTHwcnrl3O2+uUcx7tY
89RFjoMxbn279Zc5DsZ4r4+vC8fBGL/78TxwHIzx/R/PO8fBGH/y0TOOgzFe
/aPXHAdj/OeP1xHHwRg//vG65TgY428+/pfjYIzXtw5Y11dgjE+z1svbHAdj
/Ky1Ht7lOBjj5r81lCKFrq/AGC9qTeN6HIzxppaQuv4CY3yI+XJM0vUVGONz
qpkvqK6vwBjfaupeQNdXYIxfbh9/oX28HgdjPKa3JQzHwRjPaF4OS3R9BcZ4
GfNwB+n6CozxtqYO1XR9Bcb4GOuC0/UVGOOLrAtKj4MxvsfT/KPrLzDGnebp
nqLrKzDGky5YLwjHwRjPaV2wur4CY7yKeTk81uNgXt/md7ug6y8w1jush1jv
wFjvuF7KegfGese8rHfMy3rHvKx3zMt6x7ysd8zLese8rHfMy3rHvKx3zMt6
x7ysd8zLese8rHfMy3rHvKx3zMt6x7ysd8zLese8rHfMy3rHvKx3zMt6x7ys
d2Csd2Csd2Csd2Csd2Csd2Csd2Csd2Csd2Csd2D4xfovWX/LYetnOWz9LIet
n+Ww9bMctn6Ww9bPctj6WQ5bP8th62c5bP0sh62f5bD1sxy2fpbD1s9y2PpZ
Dls/y2HrZzls/SyHrZ/lsPWzHLZ+lsPWz3LY+lkOWz/LYetnOWz9LIetn+Ww
9bMctn6Ww9bPctj6WQ5bP8th62c5bP0sh62f5bD1sxy2fpZDNVhnfgPdz0rO
nmT0q5KPe5HRjwKj/wS2ptFXl8joL4HRT0r+/Zxk9IuSH4+LjH4QGP0fMPo9
YPR3wOjngNG/AaNfA0Z/Box+DBj9FzD6LWD0V8Dop4DRPwGjXwJGfwSMfggY
/Q8w+h1g9DfA6GeA0b8Ao18BRn8CjH4EGP0H8Md6e6vtfB4gf6yHj5E/1rcG
+ePLf478k/V6aJ9eWr/fFfJk63ivkz9Yf3zJjS2B/cizrHpM+3TJKh8CyOmt
ekn71Nqqf7RPCyy9bpB9rPpE+5Td+oW1T52s+uGu7ftpn0ZZF0Co7ftr3mXV
R2G2n6d9SrTqnwjbz9c+VbLqm0jb8WifPq4/2qcVlu/ap0OW79qnIOt8ap+e
W+dLc37Ld+1TLct37dPHdUL79LGO0T6ts/xJVB9fF+w3HqoyZvlwIIQcZy7X
/TR7Ts+4fXpGzaPMculIsM5bda7muHFmAaHZc7TX1tFeQTo/zPyjuYy5nOTU
HGfV3YE6381cQDWPMpfPvJrLtD1XvO25AJ1vPjai+VjNntY+QPOoepcG17vk
0nmzXPpRc5y5fHyl2bPc1X/LXfXXeWtforlMUfOP5rhC5gLjp/P5zIJB8yjz
1y2huYw1LTt1Pt3U++mmavZMVWZjqjKaA17vNF7v9CV3SjILMs3+1jziQ+5g
lpcHvclOc7XNpLm9+XIMvk72OWH+uUZua81rmq9vNU/oVTL8ArdeZRZQ+v5h
cvYkYz1MPu5FxnoIxnoIxnoIxnoIxnqY/Ps5yVgPkx+Pi4z1EIz1EIz1EIz1
EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1EIz1
EIz1EIz1EIz1EIz1EIz1EIz1EGzvx8M31PNg1PNg1PNg1PPMSz3PvNTzzEs9
z7zU88xLPc+81PPMSz3PvNTzzEs9z7zU88xLPc+81PPMSz3PvNTzzEs9z7zU
88xLPc+81PPMSz3PvNTzzEs9z7zU88xLPc+81PNg1PNg1PNg1PNg1PNg1PNg
1PNg1PNg1PNg1PP///nLoTKa299Kmq+a29Pben/o8Yf5R7PUNTpvTuf39f7w
6i9mg0Ozh9neqKW5tbl8Rej94cc+k+ar5nRdT7OHuVzH6P1ga1OXFZozdjGF
0Xz1Y12m8+blsUpz66bmH80Zze1+kt4PXjVf3nWaPT7WfTpvtjee6v1gRnP5
2qj5anFzwdbsYbZzXur9YOuPdaXOm7p00Hw129sz2d7q/aCHWZ5s19zavDy6
aM5o9Sk1LzMv/+56/5jzwd73cXv1fnGJebrSac4eZF7Qev+46GNdTM561jwg
zQvM8mi43j9m3uVerg29X0y+Hm0kf+yX77atP4fJfaz58wT5Y3/6LNk6DTMv
kK1y9tp/5Dof13HyqY91AvnjZa/Xx0Ef6xzy5o91FDnqY51GLvWxDiRLnUn+
WG/r9fFjfX2b/LGe1uvjBKt+1uvjx3ldr49vrfVHr48f11+9Hjawfl+9Hn5c
jzVPt86jXh8/rs96fTxnvT56Pfy4Xuv1MI3llV4Pi1uvn+bm1gnX6+Mw6/XU
6+Mf1gnT6+F26/XV6+HH61Tzx7pYr4+ZrXlB37+GX8nvHzps9w8dtvuHDtv9
Q4ft/qHDdv/QYbt/6LDdP3TY7h86bPcPHbb7hw7b/UOH7f6hw3b/0GG7f+iw
3T902O4fOmz3Dx22+4cO2/1Dh+3+ocN2/9Bhu3/osN0/dNjuHzps9w8dtvuH
Dtv9Q4ft/qHDdv/QYbt/6LDdP3TY7h86bPcPHbb7hw7b/UOH7f6h4/88D5i8
v7Txs89z4esxv33u+a7k/ajDn33eC1+P+fFzz3/h6zF/fu55MHw95tfPPR+G
r8f8+7nnxfD1mJ8/9/wYvh7z9+eeJ8PXY37/3PNl+HrM/5973gxfj/Xhc8+f
4euxfnzueTR8PdaXzz2flrz/o++X/q/n1ZL3gz7//Fry/pC+n/q/nmdL3i/6
/PNt+Hqsf5973i15f/bzz7/h67F+fu55uOT93s8/H4evx/r7ueflkvePP//8
HL4e6/fnnqdL3o/+/PN1+Hqs/5973i55f1vf//1fz9/h61E/fO55PHw96ovP
PZ+Hr0f98bnn9fD1qE8+9/wevh71y+ee58PXo7753PN9+HrUP5973g9fj/ro
c8//4etRP/2v5wHLWvON7m+B7c8HJu8fLbfNf8s5jv598v7TATL692D078Ho
34PRvwejfw9G/x6M/j0Y/Xsw+vdg9O/B6N+D0b8Ho38PRv8ejP49GP375N9P
1/fo3yf//prRv0/+83R9j/598p+v63v075Mfj6730b8Ho38PRv8ejP49GP17
MPr3YPTvwejfg9G/Zz9T+vfoR6BfgX4EGP0I9jOkHwFGP4J56UcwL/0I5qUf
wbz0I5iXfgTz0o9gXvoRzEs/gnnpRzAv/QjmpR/BvPQjmJd+BPPSj2Be+hHM
Sz+CeelHMC/9COY/Xic6L/0I5qUfwbz0I5iXfgTz0o8Aox8BRj8CjH4EGP0I
MPoRYPQjwOhHgNGPAM8x25/5NKO/6mFdb6XZXwWjvwpGfxWM/irz0l9lXvqr
zEt/lXnprzIv/VXmpb/KvPRXmZf+KvPSX2Ve+qvMS3+VeemvMi/9Vealv8q8
9FeZl/4q89JfZV76q8xLf5V56a8yL/1V5qW/yrz0V5mX/ioY/VUw+qtg9FfB
6K+C0V8Fo78KRn8VjP4qGP1VsDWdrNH7xeTsScZ+L/m4Fxn7NTD2Y2Dst8DY
T4GxX0r+/Zxk7HeSH4+LjP0KGPsRMPYbYOwnwNgvgLEfAKPeB6OeB6NeB6Me
B6PeBqOeBqNeBqMeBqPeBaOeBaNeBaMeBaPeBKOeBKNeBKMeBKPeA6OeA6Ne
A6MeA1uHV1L7dNFcZzZrn6xvX037NMIUYJD2ySoHPLVPY81f/7H2yfpxdbVP
E83Xa6b26TfzBwzVPhnm8WbQPqU0l4E92qcmpuCdtE+zzXXsufbpP/P412if
Mpg6NNA+tTFPZ5j2aaF5OuZon3zN37eM9smq54Zrn6z9dW3tk1U3ZNL+WPXY
Hc1WPbZX+2TVYzO0T1Y91ln7ZNVj32p/rHrshWarHruifbLqsbXaJ6se+177
ZNVjDbVPVj2WU/tj1WMRmq167Ij2yarH/tA+WfVYL+2TtY6Ue6isuvhxiGGV
/+8fqqZmPbFBcxqznmit+YJZTzwPJs8y64l/NVvPPbfXnMacrl8H6by5fG/V
PMusJzppbmouT+8Ddd70yFPzBfP5gK6aZ5nLcUrNTc3yyb3+MW/WGz01XzA9
/ULzLLP+cK9/zJvt1b6a05j1SAbNF8zVyb3+MW9eBwM1NzWfN8iiOY1Zr7jX
P+bNxw+Gap5l1i85NDc15w33+se8Wc+M1HzBfD4hj+b0TdwnbKYveY5Z3t7y
Iaet4PaiquZZZr93vrf+/l+6C6Dw6+TfzX5uXc2p0rgL0uXXyNNNT+OuklM8
TExMbKwZfoGtfdYqXW/NMcupppqbm+Vvkq6v0pr17zrNl8zluKVm67n4p7q+
am76ulFzWtPXtpovmb6+1PXVHNPXzZqtPkIHzWlNX9/qeuqS6et2zXNMX7to
bm76mkJzWtPXXbq+umT62l3zHNPX1Jqbm77u1fVVWtPX3povmb6m0zzH9PWg
rq+am77215zW9DWT5kumr0d1fTXH9HWw5uamr9k0pzV9PaHrq0umr8M1zzF9
zaV5nnmep+n6K30Pd4EcrOutuWY5XFFzWtPXubr+mm36ek/XW2lMX2tqnmn6
uljXX6lMX6N1veV8Psb3+aob/6fespb7n9bYxvV6ecxcQHt7ctxejw02y4PT
B215vZ5a28T2Xhy312vW9//hDMft9ZvVDz96nuP2es4qFz5c4ri9vmtoHlDL
qxy313tWe2CJt+349Hq9yfx2Y5wct9eDVvmR3d/2+uj13GqnHXJx3F4vWq9P
j0CO2+vHneZ6+jaI4/Z6MsH8BTaGcNxeX1Y019OmNzlurzfHmz8u5hbH7fWn
VV8uvMNxez1q1ZeV73HcXp9axzPqPsft9arVH64XynF7/Wodb9YwjtvrWav/
e1+P2+tb6/c5EM5xe71r9XdnRXDcXv9av2+3SI7b62Fr3S0dxXF7fWz1a9/o
cXu9bM2r3tEct9fPVj/27xiO2+tpq/86Ppbj9vra6rc2ieO4vd62+i55HnDc
Xn9b/dRoPW6vx63+6fF4jtvr83Km//MTOG6v19ubp6Ov5rHm9VDxoapktmvc
X2+157KsIaOeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6Oe
B6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6Oe
B6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB6OeB2M9TM7aL6x3yce1X1jPwFi/
wFivwFifwFiPkn8/7RfWm+THo/3CegLG+gHGegHG+gDGegDG/A/GfA/G/A7G
fA7G/A3GfA3G/AzGfAzG/AvGfAvG/ArGfArG/AnGfAnG/AjGfAjG/AfGfAfG
/AbGfAa2P5+K+h79UzD6p2D0T8HonzIv/VPmpX/KvPRPmZf+KfPSP2Ve+qfM
S/+UeemfMi/9U+alf8q89E+Zl/4p89I/ZV76p8xL/5R56Z8yL/1T5qV/yrz0
T5mX/inz0j9lXvqnzEv/lHnpn4LRPwWjfwpG/xSM/ikY/VMw+qdg9E/B6J+C
0T8FwzfU90nu7WXiJ/vFfWb8k/3iOHN9/WS/aM3Ln+wXk8xf55P94j7z7H6y
XxxnPt71yX6xkvl2iE/2i9b7hD/ZL+4zby98sl8cZ77945P9YiXz9H6yX0wy
b3d8sl/cZ647n+wXx5k6f7JfrGTevumhOcn9665Jo3mf+fjSPr0fHGdOrH00
VzIf70qvOcl8nOqQ3g/uM9/vMkDzOPNxtsyaK5kn4pjeDyaZ73cZonmf+faI
7JrHmW93Oan3g5VMnUdoTjKnkdya+5mX13S9X7zrfrn/DdH7wz7m7bFKmm+b
9//+0PvFXua0el/vD2+a9/dqae5hFlxL9H4xxLx/F6P3i/AL+0Mw9oNg7P/A
2O8l+/of9PqI/RwY+zcw9mtg7M/A2I+Bsf8CY7+V7Hh66PUR+ykw9k9g7JfA
2B8lW+8W6vUR+59k6+sovT5if5Nsvc2q10PsX5Ktvwf0+oj9SbL1uJteH7H/
AGO/Acb+Aoz9BBj7BzD2C2DsD8DYD4BR/4NR74NR35vtinuf3O9Jzp5k1FvJ
x73IqLfAqLfAqLfAqLfAqLeSfz8nGfVW8uNxkVFvgVFvgVFvgVFvgVFvgVFv
gVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFvgVFv
gVFvgVFvgVFvgVFvJduvVnjIcdRfYOuxh1JruD5yfZb1EYz1keurrI9grI/M
y/rIvKyPzMv6yLysj8zL+si8rI/My/rIvKyPzMv6yLysj8zL+si8rI/My/rI
vKyPzMv6yLysj8zL+si8rI/My/rIvKyPzMv6yLysj8zL+si8rI9grI9grI9g
rI9grI+s72R9ZD0o6yMY6yMY6yO4m1nuNvy//XzreaqnO5LfT/PQ/VLLywK6
P2rNb111P9SaPdbr/qd1eUfpfqe1/lXQ/c0S5vefpPuZ1ucl9df9S+tyTK37
ldbltM2V/Oe30f1I6/nph7r/uMEMLNf9xvvm9VVT9xetz/e5rfuJ1uf1TNf9
Q+vzd4rrfuFT8/IcovuDecz5qYbuB9Yw56f0ur/X3fx9bmr+xXy9d+n+3mrz
95uq+3nW+xY66P7dLfP3Lar7cdbzrk81FzZ//0u6H2et16t0/62/+XqM0v02
a72up/tr/5ivT1bdL7PW6/uaw83X64Dul1nr9WzdH/vWfP266/6XtV6XfqjM
yzdV8xv/xy+r3nrzUK03387RUNdr1n7xiZ6vrP3i35/sN839YptP9pvm6/ZC
z1fWfnHTJ/tNc/v03Sf7TXO/+EbPV9Z+cdsn+03zPHX+ZL9p7hc/2PaLOz/Z
b5r7xe6f7DfN/WLqT/abphd79Xxl7Rd7f7LfNPeL6T7Zb5r7xYN6vrL2i/0/
2W+aF1KmT/ab5n7xqJ6vrP3i4E/2m+Z2Mdsn+01zv3hCz1fWfnH4J/tNc7+Y
65P9pvk42Gk9X90016tRn+w3zXZAXs37zdM4W89nlcz94h09f+0194vVNVcw
94sL9Xy229wvRur5q5zpdX3NO1e7//yp57MyZj8iQc9fO8z+QzPNX5r+rNf3
J615q7neXyaa6+FjvX/cY66HGzSPNdfD1pormOvhc71/tPqG/2reY66H7TWP
NdfD13r/WMFcD7dqTjTXw06arc+5eq/3i2PN9dBTcwXzguqmOdFcD1Np3mOu
h3v0/tHqQ/fSXMFcD9NqTjTXwwN6/7jHXA/7aR5rrocZNVcwX8gjev+YaK6H
gzTvMdfDrJrHmuuhl94/VjDXw2GaE831MKfmPebnI5zW+8exZrtnlOYK5uON
eTXfMdfDWXp/2cdcD2/r/eQtcz2sprmXOQEt0PvLG+Z6GPHJftJcD+tpDjb3
DSv0/rKbef86Xs9XgWb7o6lm1GtWeTpR7w+scrG33h9Y688pvT+w3j/SXu8P
LF9/0PsD6/Hdo3p/YJWvH/T+wHocuoXeH/xu1otLvJPzGL0/sPaj2fX+wCrP
D7mSH38PvT+wfr+3en9w3SxvN+r9QVZzt9FU7w86mP3xGL0/sOr/hXp/YNX7
lfX+YL75/Ufp/cFu8zqop/cH3ubPy6r3Aw/NX+C+5mzmzz+g9weVzf/O0vuD
jubxdNP7A+v9KKX0fmC5eXxvNB82z5e33h8Emsf7t94fvDDX//F6f5DPnOeb
6P1BbfMFzKP3Az3NdSVa82Tz/B7X+4O15jo2X+8PTpkn+JP95h1z/f/kftLH
9w810ftb8/W5rfsb1vZhse5vWI/phuj+hnW+R3gl5ym6v2Fthy7o/kZm8/XN
/B95sRnoqvsbOc3ff73ub1h+/Kj7G5YfeXV/w/LDS/c3LD/66/6G5Ufq4OT9
9m26v2Ht99ro/oZVBzzU/Q1rP7dc9zes/VtN3d+w9kXf6/6G5YfS/Q3rfk4O
3c+w/IjQbN3POaL7G5Yff+j+hnU/p5fub1h+lNP9DOt+znvNlh9O3d+wnpf/
V/c3LD8m6v7GSdOP5rq/YfmRX/cz3pvzRZzmr83f/6TubzQ0J6RFur8x0KwP
BySq0wuKlejbP5j9jVM+a3JvTOkiPy5cumZQcR8y+vee44rFhH+xjv37Citf
/XD3xT/s39+asChFFc8t7N8H5ixc4OKYHapV+8ErYxsEsX+CfnmazOfa/958
I/vlV8e2/kW93MR++b66Sf9VP7RNtQ7clKJogB/z6FeX8o7qffXRP+xXr8xU
Zk2tdNuU76M6b36ffl3/PLm/sa9Kx1VFph3g/Y1jq+de/mXwQdWp0cW6w31D
2M/B/Yaksh3Lv7m4k/cbWrYLr3tjxW7ebzg9+Gqrly338n5DyWxlTy2ZtI/3
G1pn6/3zrZ77eb+hyiq/bD71DvB+g2tLUv2FhQ+q34eez97lqos/H/cHfjCc
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
07dUb8IyHXX//vDth8HzX+/NH00/Wk5ueOfpuhi17L+tzy92CuLzIfClTWL5
DZ0cMfRlaek6O5v0jOH1GlpXFTxWK4bXZ/NSsSHn8sTw+uyZPsfuTq+ieX3+
vilL34Z3o+nb0Zb9nqi/YtSHNQW9q/7sx58P354eHv7wpPvnw7chqWNTvegX
Q9/2ngmKj2oSo/+9AWdsvZclY+jbnODJv93NGEPfup8qPaZ6QjR9m+1sWy6d
U78+7TKXKzp7fozqvehGizJrr/J44E/o+q09Q0fEqharK18Ld+/n8fwMrt/a
1X8beKZeLK/XD4+un7yTM5bXa80C4w9nfRDD6zV7iZanZ52NoW/VHoZUWzQm
Vr2bfrdb4DEXvz/8W1vkJ0f9NrH071mKTTOqlo2lfw+/ST3mcuZY+ld1fes+
pR7G6H7iT1mmtPGPoX8BZ4aEpT4cw9ej7s4No77pG6u2/76i6oalPvz58DOs
4ZYpS92/H3ysfc632e2CsfTxn6ZtXtd7HaPnv2zjp1ULjKGPYx499B63N4bX
b+8HG4b0yhynykefbFqqsX7eG9ezV7pKQfOCYnk97y4XUrLzxlj6VvnKgSlT
8sepzqtihoY3C9R58W9lu/Z3Tz2IpX9FX7cJHmvE8vq/vOvi9bsrYunbHz+n
rtDOnf/+++h7N9zM7yf+vco/u8e+QnH0b9ovKZaufBFL/yLLruj8zi+W/mVL
+uK3zZ6x9C9P11T5js2I5Xw2qFrF0pebxfH66ttlhE/sgThVNlP7Pwq+CuTz
V7jeliZea3usUxzPX41dhTd0ux6nhlfc+zwps7/+erm+LpVa1eHO7Dj38VxP
nRQWyOe3UqnADaEBfmQcz69vzvtW7h/P81MtxqvsT6vjVboWi5a9PxfC571w
vAc8muQ5lTuex/eqRlS2D13jeX5aRw15vH55vPplsP/bqd4BOi/HP+rXurfO
P9bHG5knd9rAvPE8H51u7Fp2v2Y8X/8sZW9Oetgpnq9/taYp6/QbFc/Xv9+U
vaXaTo/n679uesWFA/6M5+s/+ouux8bviFcd8z6o6NnOh8cD3z403dk6y4V4
+lZu4NnLNcLief3/edNpZEqfwOv9i/eV284sl8DrvWgmr4H52yXof0+m4WTf
wyMTeL1PXX40/vzsBFW4Zp5cLdYG8Xk5+Lr//f63w8/H09d1A1YOyBcaT187
JK1uOOttPOeL2t0ON8ycJ4Hzw6q5Q57OcB8P5oetk/4Z49kogfPDTO+j70K6
JnB+mOrX60Yx9/Fhfrg76PizNb8k8Pz0jcrSPdfcBHXm6Dc3Erb68XgxX/z3
209dxx+P5/xQbuDV6guNeM4POSve2D/qYjznh+ErKl4udD2e88P777vVmxAQ
z/nhp1srazS4Hc/5eESbpSk334unnwG5dnWNKp5IP2OSpjzIUj2R5y9T24EF
mjRK5Pm7fmRH0rjvElX9i2E3/8kbov+9eVn/Xg7I1Xb7hgSud70Xz185+XAC
/U5bsGaJ+KsJ9LvX7XNVfG8n0O/v5tfd2CFBn7/lfUpnyvQhgefv7axsK+pl
T+T5++HxhvRB3yTy/DVeV3DV8wqJPH/dPqw8/bBOIs/fZr8+d1o1T+T5ezqx
5P3GHRNVq4JdVnZwnz/+e/Ny/dSpHzw609IEXa+7xuaZuTqB10/uenPWn/on
gdfP4iupuoVtS+D1k+p4q65xuxJ4/aSv0mrZ7P0JvH7SpN425eBhff5v/j05
+OzxBJ7/Ihkj0g04mcDzXzrH43UTTyXw/K+Z0e1KxOkEnv9qPx/8L+vZBJ7/
B0MLFyt1PoHnv2PwwWLNLiTw+vs60Okze1Air7+NX44qefPHRF5/UwMOPpn3
eyKvv6OvajZtuTiR11+2p088jqzR5/+b+tMqvNqRyPPvfDj5zJZjiTz/89oG
n7xwKZHnv0OJvd+McCXy/BdeXki9v53I85+i6oDIpjGJPP+NTkXdqPNEn/8Z
qYqfCXqnz39E6fd+t9Pp99dM3/AsW7Ns+v01u6oePJo1r35/zdi4zrUOFNLv
r8ncO+Wh0sU0Xyo0rUWc2wdcz5tedM8yobR+/8255Ycf5R+SqPtpYUdXlx+V
qDxbnmpf8KSffj+U+NSzWO9crX9IpE+/f1Hvq7AJifQpV9UsxQf+kkifntZU
QX9NSaRPs658/+bp1ET6FJut0OM10xN1/79rzrL7ZiTSpyMrrlY44z5/8Gld
zd+KXpuZSJ/6jPuicDM3w6cU+cMPrHR/PXxqW/Fxxoxuhk9rui2/Pc39/eFT
54JV8710/3zMJw3WzKzro/T7vYJmlfi3fEv9fq8Whdev2f6dfr/XF/vXzT3V
Tb/fy7/bpRsXBur3e41O26rvsDH6/V73gkMd2ybp93vNrXlqe8fp+v1eLea/
zXZlrn6/V3p1/n3cUv3+qPt/3ggoWEGfj3qPg8JeV9Lvj6qV5umbsVX1+6Oe
L5k+8UZ1/f6oySWPzapTS78/ammOqT63a+v3R/1WJOj+49r6/VEzvjnzQ9fa
+v1Rq7v9uOZ4Lf3+qM6OLb2+rqXfH5X+UOXe1Wrq90c9HNV/xKjq+v1RR4eu
/fq7qvr9Udlv9nlUs7J+f1QOn/1+xSs+VL4e9zIt6B5sTPlvza7BBf5SL7ut
uvJNoL8Rkqrpk8SmS5Sr1ffFz130NhY+P5q2ZOQS1eKLd6M2NQs2ns4Y8iTP
wXVqzOUxR1/5BBkdHxV4U+/8JrWvx5bD/j2CjFUrilWfmX+HWp6z+bV8q/2N
Wvun1Lg38x9V9aFXbGgxf6PIsC+H/3Jwq8q8ONuC6996G/7L9ow6/2izevuh
b7U2PW4YP/pffvaozgGV+tT4iJLPQ4zwzbvLt+l6UBV7WL9luceBxrmGZRse
SLlL3Y3Mtbf20kDDI3Rtkctp96iQAnNjEisFGiMuOwpsebRXRfbbke+Db4BR
3vND8Ldv9qmXh+s+DRgbYBydkGJlulQH1I12P6a+kiXAKFK+XP+FaQ+qZz53
ixmH/Iyk9X2b5knyVF9VKlmxeic/Y8n6hAl+1XarmqO2jKvz0GmsPpqrbPn5
e9X2Kq1mD13gNFJcLf/YN2Gfqln9RePjpZ3GxfJfFLid84BKM3zyiX3zfY3E
qMdv0nQ4qPIuPV0lU+nrRtJfod0zL9mpXvr+XcnR6ZrR5HbJnxZV2as6lYkq
NXvaVWPxuyYzxjXfrypN+qGE96oQo9OF1h9eZjuktqza/Ppi3RCjlufyIV9f
OKQcGY8sfnU72FjSZ+uxPWsPq8KRJzJdmBpsuO5uTDlx+BEVNTPp6+lFg41i
WZ8O65n5qLo0wHPyyP+CjN2D71Y/vPqoWt/nl4WzRwUZd9rVuFagzTGVu++p
3DmzBBkrbzWqejTdcfXiwokhSXsDDZ8ufvEPTx1XJ3bNT/v7HpfxW6+NBfZF
H1TdfNpkbNPRZQzqmOXKsr8PqSsVfp5a8Yl7vuz/5d4OIw+rahVmn3q2wt/I
m2r8iVHVj6ghwxvmuFXD32hRpGGZfB+OqCYv690pcMN9vQ17WvXA2aNqzLxt
z685/IwdW7NXnrD4mHLe3v7wZkE/4+7xoUfujjyuQpMK1Gn3n4/RoGDJ1NNG
H1JLpxxd/vYLH6NT/V+n1BtxWNUbOChuVXNv4+/IurmOdTyiLudbW6bk3OvG
l70nepype1RdGPbvqa8vXDMq315z8Z9Wx9Twb6uUePXhquFM8f0Or0HHVaV9
nc9s6HnDGHb/aK76jQzVbkSON39+CDFK5+k6aeZxQx197f9ix9YQI2F9px4X
s5xRL88fehfePsSIXlBrTduqZ1Shg/e3VOwSaLzs0M/3zx5eKrL43S/avgow
GqdJ2epZqJdqe+j4hm/WBRiVh7fqmLTqhAoY9GTvlyrA8Ohd83GOdifVzt6t
UjcNcxmXZzwc0evdSTVkzY3L1ea4jK5VCjwpsuGU+i7Uu9D80i7jSYOJfV+3
Pq2qD1rx5s01fyOFezI0Mhgqql+GbUPH+htl1u+emeeKoUZk+ePv6Oz+RoYr
a+c1bnJGhfu8/Tn8pLteH948w7WmXsqnnGNft35OI8P2uFUD851Q2TaNHpAr
hdN4l/I3V52IE+ruzJaLqzT2NcZWnH6yt3FSnS2TscfimT7GzEb973b655R6
2D/GNdw9P+y48E3Kn6aeVnt+jKmbI723UWbj4rjvOxuq1vl3hxu1uW7cT/9n
tiU5zqiOJzuk+PFpsBG3OeTt/Aln1IOxBb4etTrYGDJpb7Otx8+oNf9FpPJt
EGzkvjbt9vQ3Z9T2nuf+eBIRZKQJW/zVvepnVUT3tQfXzg8yShneiflHn1Xb
g2OH/10xyEi9cOIAw+us+ufC7LD3Lnc9kTdPLmfac+rhinK5D/3i3s8ZLf+e
+905dazekCI5vgo0Qt+6/tq39Jxqt/7ptXTn3PVjqphRN0LPqcO7uy4IHxJg
ZCgTODhb/fNqeweP6BfpAoyMq6Z2yLbyvMp7YHvtiwf8jKPfZkk5bPsZ9c2o
3iUeu+eH4DNXGoz76qyqP/DI2IOPnUaNyCfRe1a5j+fkHz8uWeY0Ln81sUFI
jnNq+Oi7rj+quOu/vK6Eh/POqV5e56dV2uJrtB83okqRlOdV3+ydml+M8DFO
Luzhk2byeXXoyeOH++ZfMx6E/j6q4twzqueWJkkfrlw1KlbfFvlDurMqXaMR
P83b7jJ8P3g0Lpv+grq+p+RPm1q4jE0zLp99/McFVbdHvZKNI9z1yZ79reYX
vagev/12xrzp/kbJTK2aLDQuqnv5Zs0uVNjfGHCl84o1PS+pMa9+yvvKvf4N
uLhq+OWkS2r/8wqrC33lYyy7YewqmPuC6j9rlXGlk7ex/f7wkbMvXFAh7787
+8R9fV1q4XFn6o8XVSbj2wmNjWtGo055Qs/kuaQWzL5zcvmLq0at+jUSnh28
pLxzPoq/0sTPKLh8xszRzS+r8ENJ/UpddxpeGeovmON5RR2Oq5hxVhG3jyem
9DiV2VvNiVkd1zKt04hx9liRubCPGnXu3/xN3OvpjN4to4Mz+atD72Inrnno
a2TPNe9txjdO9X1i+r0//+A0nhxc6vhiqUst+HXur5MbOY2CYRObhvj7qwIT
5/3r6+s08rXtXu/3FwFq3ZpZEzL87TTajL8W2bxFgGoyM/BK40p+xuVqxd5M
6hukxk/cN3VjCj9j65Balf/YFqhOhZ58k2GunxG3JGrWf0+CVeiQ8Xly9fcz
nkedODctX7DKvzn8xcSLfsa2V2MKRqa+qe5nqpiv8U4/Y2rId/WvhIWo/wrF
9Cp+283HXn+/rMYt1ei7erHf5fc31ietL53Q8Y4ypny/ddxzd334OHWNit1v
q05btn/v+NnfuDzpct52p++q50/P+FVs5m908/G8vy3PXVX+Vb4unQa79zNf
rWxv9LyvmrX4fluH4i4jynts3xrf3ld9C5Y5Oj7a38jdd16Z3UH31Kk8iVvH
7fI3nvXLUWdVz3tqTe/zhZfNuWq0DE2b+U7O++p4rWovzee/m9/KsiaoZqjK
8e565feZA43W4fVH3i8cqh7vSDy8+kKA8WJLvqk+KULVTwuehlb8LcBYHFbj
YavQ+6rx9BMHu9YIMBImPGnU78x9FW1MO5IqyWUc+K/Gmm823FfDDgQte+72
tXOf+f77f7uvpm4spfzrXTf2TlsytJH75+X+Lv+YB9euGZ1Cll3v8vi+qtg4
V8zZXteMDgX/W3Ji931Va2Xfay3c9Uyxb0NyzR15X3n9vCa499tgI+Jg0rJX
b0JV04EXVzfbH2w86Hcw8+bIUOW/8dZ3SUODjZgDO4rH+4aqojFVF/QrEGxM
f/J6zDWvUPXotOvbTr5BRs92X7btuzlUteu96M7DmUFG5+NP711cFKrm7Hu+
aXGtIKNEcOHvSv8aqtpvHNOiQkKgsezx5j8XDw5VleeWvnztn0CjzubXB162
C1Vlh3c+lLmlj3G77uCgMY9C1XWfqrkPn/c2Ku8+Vt/7QqhqPHZivp0NvY1T
IYGrFqwMVSXyxz3acOq60eBo0tb2I0LV63Fbe9cofcNo+qrA9UxdwlSeMWMu
RN8JMQa97PltkwZhKmnkymeVl4UY65I2zJtSOkzNnvKq688tQoz01QNfNMoZ
psb/9UvGU2a9OrpC8YV3wlShTXWWjnevn48a/nyg3sUw9cOlGZd+83Ma03tP
yJxjV5gK+Ct9q4i5TiOicYctqZeFqesTeyTsaOA0ui88MjL9z2Gq16RlNVvH
+xpNl1zt0qJXmBp0vevoI318jdXdmz45UDdMvVnuuPXI18e93jWds/bLMFXL
r0V0+MEAo+yDCkNPbgxXP/7VofzdYQGGI7H5n/UXh6t2VVPPD/gywDjSu4bH
5d/C1egba7b8d91ltKkYu7X3mHC1s8qAaUenuYzM53dEPu8Vrnx3O7b+U8Vl
5Pw9z+CNrcKV8aFKpRmR/saX25+PHFIrXF2q2nX4hFX+RnT+74xXJcLVd40L
tPypjb8xbviS+OF5wtXJ7YvTzX3vZzS6mf/7PanDVaNtoyOM/X6Gy/lN8eWP
wtTgJy9nxGwKNj6s2l6m2m8Rquj6nksX9go2ZoUPGewxKEIdbLtx9ePswcav
X4ftnt4yQvXYU+rBg0tBRr2v6jaaVTFCDc9cIvWWyUHG8y0/DNn+ZYTaU8an
ba5KQca37X6dPzdNhPJomnh1dkSg0e9Dt4p9Hoar8dlSB/quCjTePu/w7M+b
4SrHq0Yej9sGGt7/DMxW5VK4avAu17n4FIFGXY9Ug6seCFd/F0+XYWQtH2Ps
kZc+30yOUF92XpL30CZvo2rFuneeuY9v164+hfdn9TYKHIidUK5NhDqUN3Wj
bo7rxriNc6OWVIlQv6a9FeQVfc1YtW14xkv5IlTdQ+PmPel2zWg6o1fGA6/D
1cRDV9p6X7xq3K7a83Duu+7XM0WpJ2Pc9Xeb5n8H1CwRqZbNHJVhY/YbRtnH
Jd56potUY0Pjw9dfDjGGvc5ae1NshFpRtW5Y4+khRtTXv6779XqEeuU1ulGN
miFG6zO7s2TeH6Hmbe4SXzsh2Gg0+s+zz/6KUOMeTi7cf5C/kbLfsuPNO0Wq
LDtuheXO62/cSNGx7JMGkep1v+oxy674GdG7vnpXplykKt57zB3vKX5G/9JN
fs5YIFJlOrSt1rOKfsbbU30eF0gfqXLPce28EO40LhVbX3nu0wh1NFfTOsv+
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
E+h/AOuad1Y=
       "], {{{
          EdgeForm[], 
          GrayLevel[0.8], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
rxN+gPCrWD+FHyp8sPCLhO8mfJDwC4XvKvws4cOEtxB+Heue8COF3yj8HuHH
CL+eNUH4UcInCp8s/Dj+G+H3Ce8q/Gbh9wrvIvwm4ZOEHyt8Auuh8M7CbxB+
t/CjeVawnf6vnP6vrYpx9/2D5tX/inF//pPwvspbqfXkOoXbFOP+/Eelnya8
j+rZTnV0E95P+A4IchVDTmC+ynxhWgba60XztZ5R/rw05LpmCn9JuH79zLPF
kEXbTviMYsiuIcM2XficNPhZLzK2gtv0rsP1rqvZg4QfJvxa4bcLP0L4yyqv
JmeeU9prwusJf541Pg05s5eFz09D/uxV4e+lIa/2WjHk25Aze6kYZ3XO7K8L
X5yG/N8s4YvSkAt8gz0kDZm2V4R/Wf5W026r9cHn6OOWC39J8DL7rmAXQXNo
ZYctBF0d7so5xOFunCsEOwl25uzhkOfP4WzEOUhwrsMjOB867AxtzVmBc4Fg
ArQ8ZxDOLYKWnOkE1wv6cx4R3MiZgLOA4AanDXT+b/qWAcgJu108f3RVnNdo
31FVcf5t5ucOrorzG+EqPdtPz54ifE9BK7fjQMFBfgdlOdcNqoqz3qFu7wEu
dzXnEs4vgpMFe7guvpNzPefnIx3Sjs7s69RdiP5o7HIn+bv3cJ81ch592dDx
TlXBT2jovujoNl3j9/cV3OQ82rux4AeduVbCMxP+fWXENxX+o8KfBJtURT5x
vodzPXyKWsGKynimUBV8BvgOxaoI4UfUVEX4neDXyrjj5D7zl8q4+yTetibu
vE+Bfq+Me2julmGycufN/XapKurgff85n7yqqrif5p68sirup4lXVMVzxM93
/zLOY6uChuS8d4HTmAtDPB6UG+95x5j1V9uGKrxSbRvn55iX17ovGeehroP5
PqYqztq8o7oq2sXd/kHus20Eo6vi3E25M2pibl2i+kdVxRmfs/2VDil3RVXw
Csg722PMmA/2XCP+P8Gvmqu9NVf3gI7IBi1bLxs8J2TuDtd/fpjivYuxfj6r
9XNoKfaE7YU/J9i5GLJQeylsmQ2ZlYLr+1f1X636d8uGnAp5u6pcA/YLhftl
g1aBVmCv20H1TRcMzgYNDH3cIhvyMci2NM+GnA3xXZ1Gvex1DfXc87nYGxsp
nJGLvXFHhS/mYo9qpvAVwWXCT8wGbcQ+vLPSXhWMcBr00Alq36kKzytGWRbu
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
7Ab7GryPf6alx6foPijbwNjdeWfruXM0xyYnodOK7QJsGqADS18SRwd2S48h
44CNhu5+P7YkTvE49XTenk472e840fODMTvNz+zh/JPc79iOOd1j3st1dfC3
DvDcwfYNdiCww9DX8bI9GuzTYHuhn/MOctqZnmu9Xe+BTqMccsB7mKZp4/ef
5rlwhtuEnQXWyrLdBULGBlsMrL/koadM3zCvWWuYu8z9Ks9B1kLWIfI397zr
7nfwb7H+YicDOxes49S7ldtatidxgL+70vU18Tjt777BvhDr/oGF+FepD3sb
rE/sAdSLbs2e/mZ0bFo5jp5ha8fZ5znDov91XkWcXznHoqs1VHPly2z0Kzpc
17kf0XdDZw2ZXWR3Of8Odh0TPT43+BnG80bH2eeGCi5wv6M3doXnEHpvYz0m
VzpvkOtDpvkshzd6nEa7XHc/N8b9O8Z5Z7q9tBWZY2SP0SlDphh5fOTyl1WE
rhk6bp9XhL5btWB5RcjqU+6zikirEnxdETQxeeyXw/w9SyuiDp4fpj47X//X
A0nM6av8bcxHdPrQ/UM3Dh25tz1Hx7sc8/sal/unIvQc0ZPs6/4m79OKaEtl
Zey151dskMEf4jGkLDqKz7gu9Amf8nigjzfd/YjeXZmfMcN5ZZ3GZ91/0x1H
JhvZ7CMKMeYzBa9UhB4h+oSvV4Tu4CzHGTd0C5FJR59wtvMmeW6VdRPfdB5z
7lXXe5Ofe8Fz5S6/53yHd1QELXKR4MKKoFcu9HhAiwx3HvqD9MehhaBHsFvE
fGc9Yt6hRwnddK7zjvL7eA9rFbqWI1zfeRrXz7PRx7yf/2SI0s7TWN+XxPp3
uZ9hX0QPEn1I1kJ0TNEtPcn1ET/BaZT7pCLGs0KwWPg6wVrBIodrKkL38z3B
/IrQ/XxfsLAidDAJF3j8mNNLPZ5fOP6w83n+Idcxz2NLWeY+uproeb7jsWfe
M9fQe11SEe1iPL50vdOcRhsfdH1l3dO5rutR59PWtwS/CH5mbNRvF6jfHlS/
/cTYKb48G7L+/J9HFmKurBT8UBHzjn+P/5I5943jzJVvHWf+fV8RMsTMo++c
95y/j+95w/VRDv3Tt90u5iDt+NFpv7qts5220t/zm2CVv3W14Hd/6+/Oe8f5
PI8+7wfuu2fcl4zz0w4/dh3o/aD/80dF6D4S5xtqvWb/WRH63eT9XRF63Oh6
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
             "]], 
            PolygonBox[CompressedData["
1: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
Sv7dyP8L+Q9DPt85DvkN5MfIsy1zyzbugRmXjyNvVyTtdeRHkLeG3wp6BfnR
TvKa9iryM8h7we8JvYf8LPLeRdLeR34N+Sj4I6GvkF/thD8C+hL5beTj4Y+D
vkd+A/kY+KOhb5Af7uTZW0IvI7+JfGyRPN8i/01/TshvnQCapRPbezq/n1ps
8Nc7qcs2fN1f28eDyrWs8a6N43s+Ucsa6do5AVStZQ3V9hnb84labKB5/Vah
wrEJPUn9uyAO84yL+t9BPqHIb/oBeXXexwW07XzodHSrIo+CHwmd2sleogP9
Wc2e4q1O+sLf+B3ln0Letcgz3unbXuNAg2uxwVy7J4RqtazhT5B/+yLv8A3y
P428W5E6/tdf+yeC6rXYANqGk0DNWmxEbcOJoUYtNqK24bhQqRYbcVPG67bO
O/Ytv2UT5G3gb4FeQ76N583Ks2aB7uV5SzDeNqH8io5V7RXybM1v3wrakLwL
ol9Xewzdadq3vei2hDZAPwnyFvCbQ+s5vsm/KflXIu+50KS95DXP+ugXQr8e
+qXRnW77kddBXhL+VMcE8qS06yxtQeTL3f9XR7/OYh33sug383sn4TxoStK2
pe5toI2pfzzKrop+Ib8l6piiF52/aSP0E/jOnX+19dCPj7wa8sKuzcgt5x7S
zoX/necuzvM2dj5HPxxaFHlD5OVce6AXqXN/2rYf9DHl1uyf33nGdia6l6ED
0R0AfYr+OeR9inyDHyC/0EnZfT3Tsi29jEXH4Gnonu9EZ5kP3Rvw/I14/vLO
rdBLndRtGz5B/wryQUWe+Zm2I/k3cD9D3jP9fpDXR17GtQ5ao38e6DdwBmXH
Ql4DfnVoJeSNPaMk383Qq+huJ222ImPoPuq/tZOxNDN0j7Z8L2e9nh+d4PeO
fB78udBJ7q+RR1SSdrLn19CZlD1Dm5Hy73omAX8a9Avyb8h3wd8JjdXOu53R
OaGWd/yJZ8zozoX+6e9FJnM9qWVP4rudyTmjlnf8KflHFCnzL/lX0RZ2ztG+
8XulfSfRthOhg8g7N/KR/fORPZHnQT6qkrS9PP/vpO22+VdtefQnoDseOgDd
h9DZ6M7SBtb276Vu8xyI7oNOdPbB7+jn6uVZnsnsgW5p12vXE9o2J/S/Tvrm
VOhn8o/o97f9e3knY3tm55xaxvjHnfTNOdDf5B+b/GtW8o5XRrcY8im+C+gQ
5MWRT60k7VDkcZHXhl8LWhV5DeqexTnKbwH6q5u5fXxoZvQXMF5md/1HNy78
mvCzOmc5d0FLU9+ZjjX7kPxL9cK7Jh7RyVwwBe18oJ45YS3k2ZwDnQuhOQZi
d2h/fETZRXtpu+/sYMpP2Eobbdvx9exdp9aeqWUPu1z/fNM1+VjPU6Gr6Jsr
oQrj62vkq4ukVZG/Rb4W/hqPL92/9tLX9vmJno/2ZcfzFchfdlLXFVDZ/XT/
/sNnHu95EXQZukuhQeiXcT+i/UDbhtayt59Ge7SWPf4qvaxFfjOnUHatXu4G
nGPO6uRsYXLXqFrOGDqtjBnHypb17K2ndU2sZY/9TSe/xd9Y4/lrU98lldR5
NrrN6N/tnFso24H/nLTLi7R5MPm/Q76uSJ802tkLD0D/VLMn9iyqB/1dzZnU
D+S/hbw3Q5129vJjQv9Vs6efn+cfy7OPgfYl77zIR1fyje3t9+e7g/4l/1Tk
/6KTvrVNJer7EfnWIs/oIi/Yy7d3HLQ/uu+h64u0uYl+Cccm1KKu2bQfenm2
z9yHvD9Dt5P3NmiA/Av0Updt3A/dT53ofGYP/S/IdxQpM0Y7ezPHvGPdPZp3
CWsjL1HLncLSzL+bI6+CPKIWfibtgHrSXNtm1K6oZ43bwu9ZOw551VrW1hmQ
n6xnjZ2O9u1G23Z1jXO/wzt7E91GfjvwZ/bnL/vzAvQX9u0b15hrOln7p6e+
J+qxAaZHv3sldW7j3NSf7+yfC10/+d6nxvaeClrM81/0e1RSZlu/P/TTDEqe
xdFf0B+/PvPqTtbS6bRj61lTZyb/w+w9HoLWa2etmka7tp41aybK7+XcC23f
yd3ZN+6Vq7lDWw35e88yqjmTmGUg5xpbIX9I2VXRf+fetpo7v9WRf+Dvu9Xs
OdZH/sOzpmr2iGsg/8jf96rZE6yH/Lt7xWr2gEOocyfasqM2De1ZHv0X7kWr
ueNdFvkz9zbV3FGugvyte/1q7iBXRP5K276aO8blkD93r1PNne9KyF+7d6/m
TvBgfs8n9XyTfptnat+RZ0rStoRfAf5L+NerucNb1zXTvWU1e1rX+qm10+tZ
87UdhiA/Vo8NMZHns+7loaXp/+eRDyjnju8/3x/j9XXK7En+X8k/FmVXRJ4P
fi/PfMh/YDllCvrjReSDykkbhLwCbVyAvAeQtwS/I/QS/NqkrexYbeQO0bvD
fewn53vko5D39702cobl2dVB7im7uZs8ChrseG6mDsv+Rp6Lmylj3j+QL2qm
Tuv6Hfmy/vzpnHdjJ7/NO2Pviv2N2nbTuo+qx8abnjYOhx+X/rzbsv39gjbT
de4t0L9mP5N3ddcm6BXfA/Kq8LtCryNvoK0FPwx61XGlbQI/qm8fOb9fSX1b
2h73aY5tx7H9o93o2EXegTIvwq8FvxL82f350jnsIvcSpL3h70C/Jvz20AvI
ayKvCH9R3770N1xL/iV62Yu65h/mfrRvn/nNXuXe0vfB85/326jFdp8K+aF6
bPidqPNl+HVcqwayl52Z/jy8lj3tOuT91bW6mjOFtZF/4e+H1eyhp+N9rsG3
vzq0JuNtPJ6/TiU2x2o8fyrk7Sqx8Tfp5Df72y+CHvGur5k+sm/Od480kHtO
7zv9/u1z+/4K6CnvCpv5Tf6WC7SRBnJv5P2R9wMP8YyNGMobQi/Q1vuQ14Nf
F3oG+X7k9YukPYv8YCd5N4Ce127phDfPc8gTUecG7n20oTrpI/vqEugxdBP2
olsPWhP9xMgbVlJm7U7eme/uQuhhdPc4B1L3StAT1L8O+k3QXQM9h35d5E3h
r4We13ZD3hj+auhZ5H+6uWubGpqdupZpZo1xbRkJDRnIvdo4vJ+TvNtsZkw6
Fkf1x7hj/XLoyV7WGNeaq6Bn/K3IW8Df4N4EeXzbVMk7Xb2TMenYvBJ6Gt16
yJvBXwe90Mtec0r7tZ4950bot+LvTdAr9hXy5vDXQy/aV8hbwt8IvSy2oJe1
wjVpO543NfL2lYyhTZHv7eRdrgM9zXPG6cW21SZeBd3v0N1F9hxjMx73ov53
6ulT+/bXTvYirvljot+TtLfreQe+izmp70Btf9dk92KkfVzPnty9+VD0B1WS
Zzf3Dn173zX6fOSZkfeuZM3bQXuPNv5M+Q+qOWNaE/kn/r5fzRnT3q539fSh
fbkM+k+dJ6vBbMw+ENzHdtXYy/sgv1tPH9qXe0Bv1TNGHCvTkGeHSvpsM/ee
lq/nnfpuD4Q+qudMwbOFcft7KPdOB9cz5zn3XQo9Tl2zQftp20E7U9/syPtX
kjaskzXAteBi6FF00/ayttqGzTuZI50rL4OeUM/4nYW5YmbnDO8XPaPgXSwA
PUhb9if/B/WMGcfOHL28C5+5i3tt0t6vZ8w4dmbtpW37QDv5bj2jKFLnQ9Q3
Sy8638mO7kWhZdEtAz2K/gDq+LCePbJ75W4rNr22/Db1nHF71n0W/X+43zLt
37xE30KH0f6De8GeDa1m/l8PeQr426FFyX8I8tPwc1UzHx+G/Cz8PNXYb4ci
PwM/dzX21d7It3pWVY29Nt9A7oa8IzrPtXggd9HeSY+Av578VfLuwXp6A/yf
7dwHjahG3ov2nk5bz4AuRbcH8qnwp0EXIx+AfAX8ldDVyIdT5jnKzlvN+nIQ
8pPwc1azPzoS+QX4+avBH+1K+ZMoezJ0AeUPRP8Eujmq2c8eh/4JdE9Cd4q/
6oZ/CroL+Rjkx+Afh24X79QNb5k7rK+btl0FXYO8nfu1an7j58j7o7+8lN9w
FfJO4s3gj4dGIO/WTdtOgS5EPoLyz1N+vmp//RfvVspvOB/9MPE8paSNQt65
m7pMG4m8o/iLUp5xLvLRyI+W8htuc76h/luoe9Jq7PX90F9WShuvRH8N8lje
bUBv+zzyX0ve8aBzyH8j+vHFEkDvo78eeVyxCdC7yDd0w5vnPeSbusk7IfQB
8tXIY5bzjDdtH/W/RN0LVmMveT84tXet/fuIW5CnhJ+qf//gfeIQ+On6/XsX
8uzwc/TvH5bp5QzAvf9R7iXRj1NOG/+H/tpufptp7yCfjPwGv/1N6D7kk5Bf
LyXtHt8XdV1VzZy6u9/uQNZyMSEjtQXQX1HNGrRGJ3em2pbamN6l7kt9l5b6
fez4Jv9N5J+4GjzMtr18u4O9o0G/dzffwpmWcf5HfzP6SaqZv3dBvg5+fOhc
xzfy9fATQOdpnyHfAD8hNML9GvKN8BNBI5F3Rr6mGvt0OPKe3XxrfoOX+L2h
fxz97NXgKY/w/gjdw9BN6I/shn8EuqUdG0BbwDXix17WWNda14Cf4N8iz3zl
YEbEjrimurY65//ci02hbeEa+EMvZ8ieJbum/dHLGbNnze5R/rTvtCmdmyo5
r/X8Vv5e1z/PlnjeWb478QbdnBnO7FmLZ3zw5zlG0b0GHd7NnO7cPrZrcitr
vGu9c/yvvdgY2hrO6b/0ckbpWaVr1O+92AzaDs7Rv8HfK+aolDF8ie8eOse9
F/Ir7dgw2jKuid8597qnR7cYdHM3Nou2i3vsb3uxIbQlPBN9oJXvZfS7Qz/D
QO5EvBtxTXmklTuIYUXWkMdbscm0zbQhvu9lTXFtmRy6G/7uTvayQ/r2nnso
91LvsMac5Frczt2fmBexLw8j1+FnESOEvCV17kL52djfLeX9NPQFv7+H/lz0
69qHrKVH+c7gN3aNhb8HWor697NN8LNWc3+1L/Ij8LNAFyNv4/4B/rb+/Djn
QLBgYsKGa5uiH4L+Xmhp5IO6mYuvhq4l/0bop3FvBS2pbYk8Jfwd0GJ+q92M
ZefIW8l/Qjdz/9PQ3c7f5H/M31cNXnFD5Knh74KW0PZHngr+Ts/ykfdBvg1+
8mr2S96fOndN3cc7bIX+GHS/0yebuD5309ZroOuQN7OP0D/GO57Jtd31sZo1
8SL0sw3kbNI70rO1hbVnqsGszo5+c+1R5PuQx0OeeSB7FTGaZ8EfRn3XUdf1
0I3o33W/Td6tXf8de37DldwZKR/STduutQz5D+2Gt44b2nlHvivPXI/r5Pe7
V9TGGN7LN/ybdxzNfNtX+A1Q9kfXsG7wW9OWM6eLD/E+2rl/2j6e60rkKnxN
DI7nN8hrU3Yd1zjk9ZHXKiXtWOR13e/BrwkdjbwO8uqlpB2JvF43Osscg7x1
L7jqyVyT4bdCvxv87tok6rvh93BOFp+CvLdzC3QO8pbIu5ZS5nTXf+S9Sskz
HHlb5D1LSTsbeZtu6jLtLORDeCe78A6uagQPNNFAzl4epw8ndi/TzW9d1/Y5
nrvh13PN93wU+X3G0gfQlshzd8N/CG3l94L8Lvx70GbIQ7vhLbMF8rzIH8F/
DG3Tv893LZ2zj5/bAnmXUn7jachv9YKN+MkxD78p+g3QbaiNhX7jbtq2vu8X
+c1esAyfVYNf2qQbnWVOcj8+kHO2az3jhz+GPKtVg32YYCB4MN/N5H081+bI
w0pp0ymep5P/S8bWas3sF7+BvoJfvZn9+Brd2MJiKA7V/iDt5UrO+D3rv72X
swf39s5HziHOJZ5pLDMQPJnPnqIUvNn25L+wGpt3/oHg0dRNWQqec66BYIv8
ZueGv5b8/1RyXqF8Sy9nrZ7NOl/sgHxpNTbzggMZjydWM8cNRb6tl7MZ98bO
X6vwvLl51jx9/MV16EvV2Bzzoj8WeaNqsCsTDmRN/t470GbWatfcH70jbWYt
/gz6BH7FZs47PoU+hl+hmfOAL8wDv3Iz5wlfmQa/ajP7pS+hz+FXaWY/9rl1
wK/UzH5LG+AH73ibsQ1c076GX6OZtc416Vv4tZpZq1xjf/IOsZm11zX4Z+8Y
m1mbtRG+g1+7GdvBNfhX7yybWZtdg3/xDrWZtdk19hv4NZtZex0TntV4huVY
cc90lDiFRvZSy0JD4B8j/7voR4lPo69/h56jv0ci/1pK2rPI5yH/DP+LewbP
M8Wbwf8JvYA8ohudZZ5BXhT5X761/6BhyIt1wxeOaeTFu+EH+c0hL4Vcgi87
B7Vjv2mLnkn7p6Wti6D/Z3Dq3Bn9ksiDSymzu/cR3dRl2m7I53fzW2zj88gX
dtPWv6AXkS/rxlYpQ68iX9SN7m/oJeRzkD+D/xx6Enk48qelpD2BfDbyJ6Wk
PY58eTd1VaDXkK/ohndOf11bDfnjUso8hrww8t+D85t2RD7T+amUPI8in+78
Bv8h9JDrTzdt+wd62fm4E6z8ztBW8Kd0Y9u/Bd2P/tRu+LehB5BP64Z/pxT7
+4xu6vaZj7Rjf7g325n+nmIg+zv3HvshT4U8v++ftv4CbUv+o9C/yPe3QDX+
NWJ69mQsndYI1sf1eTiveA7KT+L5gTbx4NhI2gPaU019S9BPNhCM9p+Un7MR
7LbrvWv7XOgndexCp3qm34g/ifOTfgPn0cYTepmjnatfr8WeuML5rpIzTM8y
Pf9f2juIZuxrz+fc64mPmK4/P+m38Bn1nQh/hOd33ik0gg+cp5u1xjVka9r/
UC9nn86pzq3af997top8HPwy7g/pz/FLwQcv6PdE2d+gHZAX6KYvTdu+v/9y
b3Ua5afp77fmQD4ZeeqB4I2ta4JS8L8P9nJW65zp3Ck+WN2EpeCPbYNt0QbT
FvPM3bN390TjuLfr5Z7M+7Kbted7uSfzvuwm+Ad6Oav0/PxW+Pt7Odt0Tndu
dz/nWNoDeUrqu6kVHw19M8Ts3tKKT5C+QGJob2vFJ1BfQH0AbhabR9oe2qf1
YI9MkxeDpO6WRrDX5vFOxbsV78SWdH+P/rZGsNx7VePjoa+HGKnZOsEu3UR9
C9eL0aCXPch/UyPY7t2qObP17PYf3vf08MNsXyPY/209c2kmTX7WejCZYjP1
sZqpk7qt07p8hnsC9wb6CC7aDnbpFvIsWQ+Gybv355uZz7yDdwx7j+n7cGx7
l6UPm75r3ml5l6XPo76O3ml5N6aPmb5l3pF5N6aPo76N3pGd5n1eI/fNnjN4
l6UPnr533ml1G/lN/pa/qrk7vrGZ7887ZG0ycdja1Npq3p0/0sz79Q5d7MFz
zYxPMQg3wO/GM3f2jKoeLMOzzYxXMQ1+M97bembgt+Rd9nXNzAfeaW9F2TJp
P1SDYdwauYL8YzWYxS2QByN/Vw3Gdm/kOxrBqu9TDaZGbI0+cPN1gt26lfqX
qQfDZd87RhwbvoMd4Jvk+a0ajPD96A8l7QTbgrxjK5glsUpiisWKPECebevB
jIjJEJvxg2cynn+jO7iV78vvzLtw0+S9E78P/hD0x6HfvB6fPH3ztIGcX3z2
M41gC2yD2APbZFvEIIgFuL6Z+U9MQBv5auTpPS+oht/JPXE1aZvC/8ffr6vB
eG+C/C9/v6oGs30N+XduZf8zk2MHfhB1flsNxntL98TI31eDOd2sJTCBMVUN
Jt1nXdKIL5DP3Aa52sicq528HXId+ZdqMJfbIzeQf60GQ+2zL2vEH8c2TNCL
L8mc/fsasYG20baJERQDJxZODPVindzV1sjzczX7BrFJ9rF9K0bp9FZ8LPWt
1CfvGfiTfCb5T6jn7lrMvVh777Ade2JkxcY6Br1bE8Msdtk7Nu8KxKiKTfXO
wLtgMcxil70T9rcf2sx6Yx+c1wpGXWy6PkIjWsEoi03WR+bCVjC2Ymv1kTi3
FYy62HR9nM5vxWdGXxl9HEa14sOh74Y+MCNbwVyLtdbHx7s/McZii70D9C5D
DK3YWe80fJdihMUG+0692xcjLDbYO37Hij4H+ho4Zhwr+gjoG+CY+acezL9Y
/y+R/64H4y+2/4tqsDCPIu9dDybGsaLPgL4CjpkLWsFwi93Wh+SvejD/Yv0/
r2bsiaEXO+8YFEsghljssJgCsQNigMX+iiEQOyAGXey5GAKxBmLI3T+JORDb
4pzkXCTGxblDDLXYaeeQc1rxOdbXWJ+x4a342Opbq8+rc9l1jfjGOKdpE2v7
jF2LrTw9uif8pkkbl7TjyP9uI3c1o6rRmSZvHrFyT5N2bD2YOfvqaPTDq+mz
E+E/bgQ7eUk1ujcawQKY5xjktxrxrfOc3bH8aSNYLMe02DTHuGNbjNqxrZxl
eablncPjzaTJH1gPVtg0eTHDts02+Gzb6F2XPuH6gnvnJZbvSeTD68H0nUDe
DxvBdl5UzVyqD4a+F86pzt36FLgfcw73WxWDLfbab9a5QZ8KfSmcI5wb9NnQ
V8M54oxWfCj0ndAH+KlmnumzjnJNa2YOdO4TUyoWRB90fc/FhIhltIx5xTTa
9uMpf0E1v0H+/UawrKaJDdmmmfNUMSJiYfRx17ddTMxZrfiI6xs+sm8DaQt5
t+t52F/t3PUYM8DYAYeJLWjkruokyr/fzJ3wyL4N9XozmFGxomJy3moGgyr2
VAyPPmL6ir1AHSd4V9oMplgssRilN5rBoIo9FVOxOc+vYH/NCC2t7d8MplYs
rZiUtdHvMzgxF4y98EEzd9Cj+jbjWu1gBcwzvWdJ7dwFiiEQS/BeMxirEX2b
7+1mMLxid8U4vdsMhvi8vg35v2Ywy+f2bciD2vGdOBzazLOidnzltvQMy70h
/Tk/+W7g9x43EB9ffX31eZ6lHUyU2Ch9iOZrxwdbX2zvlMdtx2dO3znPEDzP
Wq0d3wvvNL3b3M7z5lJ88vTN00f94SKY1QL+0lZ8KvSl0KdWTL/Y/pWhp1rx
kddX/nqzu9/xmdR1PrQD9e1k+0rxcdXX1TNI9ytiVP+i/LrtxLoQkyU2y/2N
a59r4NEDOVPwLlbMi2cNl7USw8LYFfoMv9wMhlvsthjOq1vxIdd3XB+lq1rx
Adf3W5+ka1vxgdD3wZgNG/L8T3h2i/bN140vmD5F+hJ5bnN5KzEkjB2hz/P6
7WDHPodmJ/+NrWCAxP7ok3lHKz7o+p7rM3xDK5ggsUD6xF3fCoZI7JA+dde1
gnkS62RMgytaiZlhrAx91P/mNw/VLqE/jqU/XmkGwy52XczCq81g5sXKi5Hx
zMW7cDE/nsUsS3tXZnzsAU3czZmNWBAxQ57leEYmtkLMkGdnq7TjK6qPjr46
hWfa6B5zThXr0c5Z9aT010Lol2unbn1k9JXxjMe7dTE6nv281gwGX+y9mDDP
lMTSiMnyrMkzJbEmYow8a/qwGYzN+f0940rt+H7pw6ov6wrt+OLoE6ZvmLbj
U434umpD6jOo7+Dz0DTtYJbFLm8PveV47cR381/9dT2L78RX80f9fZFv59n7
es+u7VwPf08jvpOmTdSJ77Y+nfp26itiGfPqM6JPlb5Vngm63z6olb6zD73z
uI28+5C2H/zypLU68fXXR0hfIXV3NeKbaR59UyxjXn1USp1g0fTh1pd7zE58
k/Xp0rdrPzFEjfhuHlSN78odlF+1Hh+WcTvxJddHV1/dh9EdSZkzyLtrPfwr
jfj6mvZjO77Rxlgx1orY4Qcps0M9GGJtf+d053L3AF+24/slJk9sns+2TbbF
NhzeytztHH6Kex7klxrx9fVex72Jexj3Lu5R7mmmD+27DZH/aSfWiD53+t65
t3iiEV9g9xi2zWdYt20Ui+1v9LeJydY35k7kNerxkdmfvA804vt6CGXudu0n
7Qhta9KehJ+OsbNKf757EZoHfmPoJfiPOsG67N7Hu4uxFmutT8QX2g2t+Azq
K6jPmphkscknQD+1cufm3ZtntLdQ1/2t0eELitn793uPQVPCL9e/vxNzK/bW
GBQrdoLZF7svhmtd+LLnP74HftMpA/Gp0rdqo357vd8Ty+WZj2c/D5M2HvLC
/fvCY9Af3cmduXfnF7Xik6ovqj7JByA/1Iiv+GHVnH949+WdWnMg5x/efXkn
1hhIXz7SiK+5fWrf2+f2te9AXyPfse9WnyPPa7yb806wNRDfpLvQr12Pj5Ln
Sd4VesfX7p/PeHfnnVt9IHlto22zjL5LvlPfpT5Mnt+IdfHOrzaQO2DY0XfI
3iV75+vdr3cON3eCSfeswDOD0wZyBuQ67nrufaH3+87j3ul63q5/5nzMjfP3
7xe8//Rs1Dtz7869w9AW9w7EuxDvv7xbFBMgNkD/llqWj9H+UvpP1bNtGO3/
It5vqOd9ffyf+LwhRcaoY9Uzfm1L95rezfj9bs23sqhzRDf+K3sUWcP1R9Ff
w7Frmv4s4gute+4+HlH8mf4f+pvoD6M9t3vff/vpbr73dcrBXIi98P5abIdn
4J6Fi1+aosgYdiz7/e6DfnV95LvBszs/n9bHt+l/47PO6OPh5kWueJbUP7+Y
FfqZshP1z6/W6cQfeKP++BdPNW6RMe3YFq81TpE08VWLKpN3wf5+2fvU20u5
k/Fuxvts7xY9U/ZsWTzmHJSds4+/1J/HvtOf8b9W8Jnqhvbxl973e/YsZkTs
iP5Lvju/ab9t8YB+23P08Z3u78VijsX4ubEX/51divjn/dmKf9KO8DsV8ffR
n28J+CWhN1u5j1+2HEyM2Bj9BbcoggHQf1J/Svmtivgf6o8ovzX0Yyv+hMvD
r1DEH1B/FOeLI4v4a+jP6NxjHv0N9Q9dDH7xIv6g+i67Z3Wvqt/qRq3sgd37
6rO+cSt7ZPfG+rzrf+izVixy16z/6KJF6vx/f1Pr9jfqr6j/iG05qog/jP4u
h8EfXsR/Rn8aedus/4z+HyfCn1TEP0O8xfTl3Il5N6b/lH25cxH/L/3B5IcV
8YfS32mHIn2uP5j+HtZ1chH/C/Er85aDWRK7pP/GKUXGsP4Y+muY1zT9OfQf
ObRIm/XP0R/nYPhDivi36I/ls33n+mvp/6LOMvqb6P9ydBH/Vv1J9C+RPxZq
teMvZN+YR/8Y/XMXKdKn+uOu0D+/XaG/XuhP8Y/ffhF/CeMlvAz/SpF4AsZH
eKlImvETjK/wYpE04yUYn+GFImnGW5gV+X7swQegjdqJT2BdrxaJZzBbN7oH
oY3biXegzj3DvO38Bn/LDUX2D8aPc//yEbRIO/G13oN/v0h8JOMlyX9QJJ6R
8Y/eLZLH+Fszt+MbY5r7o89bwd/a567HjnnHvmPE9fcXbXje5U3lxPPwm/bb
HlkUo/c/4oPERoihE0tn/DDvPj6HZuwEXyQ2yzto76Lv8n6mEvtjjIHsF2fi
t1ehafr7u4VKufPw7sP9n3fl3uF6l/sjdCl1X1ZO/BD3U2ILxCyIXTD+iG29
uZx4Ivqfnwp/Wjn+48Z7sm/sQ+PvaZ/oi+cdt3fd9ql92+yfvxuvxGddXk68
Fucc5x7vpNyf+Rv9rb3+eb7xoy5Ed1GR+FDGZ7oY/pIi8Zf075iWuodAy7Rj
L9/ctx+/7Abv7Nyu/+E47cS7u6mITWQ8PePryetfZfwz7xy8e3i9b68bn82x
cmOR+H+eMXvW/HTffte+N6/v9Je+fezd157O6d3Y26eXE2PnrW78h/wW/nPO
ace+PrKPT3upG3vZvjlU/GF/v+CzfEe+K+MR2hZ/g/H6jG+or5Y+W8YjM56b
v8U04x0aj+2yIv5kxtMyvpb8FUXiqRn/6oIifWx8LuNXaU9axvhtxruyr00z
npXx284vUsZ4WcafG1UkzXhuxp9zLJtmPDrjt/msK6Gp24mfZlv9Zvx2jOd2
D/y9ReLdGQ/Md+07Nv6W8fDUuYcXX2Qd1uWc4H5r3v55gHOM5xG+Y9+1dXoe
of++tqZzlPED9P/Xlt6kSDwA/fM3hd+siL+/+NvvGfvflYLHFY/1Qylp4nHF
66r7thT8rfjN/0rB3InXFO/6NfxXpeC5xBiJNbIO8Vzieb8pJY94WO+HDcxp
HeI/vQ8WizmonPth77Pb8K1y7qfFP35ZCsZNPKT3351y8njf7f14t5w078PF
wImFM837cu+frdtneh8tntjfYpvEF5/GN3tYJTa+eE0xdmLtZu7jn7yvnwJ+
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
             "]], 
            PolygonBox[CompressedData["
1:eJwl0t9rjmEcx/EvmXlusaXFAcbMI7OmYeQxHJDMyIHyDyySA2aNc7Pt2TiZ
PYWicCKt5EeSIyeSMz9PKD9mScqZU/N4vK7ug3d9P+/rc13XfXffLX39R07P
jYgi6tDTEHHVcGlRxBjG0d0Y8WRhxN0solofsVPehafcFFfjdstbMMXd4H5z
XXIJj7k73Cy3Q76AQe5hQV4Q8dmdndw17qLetN4meRSXuV96k3rTet/wVqeE
Cb31OmsxYf1Vcvoj8nJ8sD7E3bT/mFxERe91lp+bzv/rvKq8TadVvyp/xUtu
XOf6fF6vHT/Nf+w/Z+2jzjruivxGntQty2twlnvBlblhOZCZ97qj0x1z5Bn7
3+lU+PfO3cC1oTm9eyFfS50f+G7uxW1r+3X+cTV5u16Rq8nL+GfmE/wI3yf3
oIkr4RB3S96KYblDrx4n5YM4bL0NS601yUMY8Gz3uC7v88kdzWm/+UGWr6XO
F/55ulOueI8WbhW69R5l+XdO37vsPxrFPv1T/q/j5gPpn3H+Ysza2yCvxGZ7
79t7xt7z8jysMB/V2+P56uTVaDS3FvL703P0pncu5C6tLZE70jeydyx1uI3y
f+bwYE0=
             "]]}]}, {}, {}, {}, {}}, {{}, {
          Directive[{
            Opacity[0.3], 
            GrayLevel[0]}], 
          
          LineBox[{4231, 4091, 4169, 4111, 4110, 4009, 4010, 3038, 3531, 3037,
            3530, 3036, 3529, 3035, 3015, 3014, 3514, 3013, 3003, 3508, 3977, 
           4122, 4058, 4025, 4140, 3937, 4124, 4123, 4196, 4245}, 
           VertexColors -> None], 
          
          LineBox[{4232, 4197, 4224, 4125, 3938, 3095, 3067, 3066, 3554, 3065,
            3553, 3064, 3552, 3063, 3551, 3062, 3550, 3061, 3549, 3060, 3034, 
           3033, 3528, 3032, 3527, 3031, 3526, 3030, 3525, 3029, 3524, 3028, 
           3523, 3027, 3012, 3011, 3513, 3010, 3512, 3009, 3002, 3507, 3976, 
           4121, 4057, 4024, 4139, 4056, 4195, 4244}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0L0ug2EUwPFjbt+2aNUkcQW4kiYWq9TONRjNLsIuKZF427LWZxOq6gp8
VKuUgcTvHf75Peec7Vmu76xvz0RETXuliN9ixJ8G2jUvact7LR+RFCJWmecK
F1TRTxJR5jfnOeUcvzjLT5Y4YZEfLHDMJNvn7PRkHnPAER/5zj6HfOAbe3zl
PV94x2d2datz8w3PeM02r9jiJZu8YMpOds9uOjY3ecSUDZ7yRIfeG/7hQJta
9C9V1bWvf4SsOBQ=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0DsyA1AUgOET5CUhinh0Jo13okfQ2IBOa9TsIaUFWEP2wALIeEeZGQQJ
4rUCfCn++e45M6e5pd2D7f1EROzocCzitxDxp5Zq5mnteW/lIza1oanRiHVO
ssoJrnGcqyxyhRWVlTMvcZiLzHKBGc4zzTmmOMskZ5jv3+pnxC2/meUXM/xk
mh9Mscck3znENw7ylQPsMtHf5+x0Z+6yyQ5v+cIbPvOaT7xim5d85AUfeM57
NnSmE/Mpj1n3Z8v+rs0KyzrSP0azMBc=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0Mk2wnEYx+Ffewe34BY6h4VhTTaRKUQppX+dw4KGjVmhzHNb04o7cHGe
xed93vV3KL+T2o6FEErqDjqK6W/Ayx+m1VFR2b4Q4v0h5DjBKsdZ4RjLHGXE
aTaZYINTrHGSdS7yjAs85TxPOMdjpnjEWR5yhvtM8oAbvGWON8zymuu84hq7
zLDDVV5yhRdc5jnTbHGJbVbZY4VvjPjKMl+4xWeW+MQiH7nJBxZ4xzzv2eQ3
G/xinZ+s8YN7fOcuf208YvdhRerpH5urM48=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0Dc6hAEYhdGP2iOtwKyCNSgtYRoNM+jkkdOo5F8umCBnRifrpcZeHMX7
nPreVDrblqmKiLTy9RHValWjGlSpi2jiL1Ns525NRE9txA67uc0ubjHLTWa4
wU4m7OA6x3jGUZ5yhCfM8ZjDPOIQDznIAw6wzH6W2McCe1nkPO+ZZ4VzvOMs
bznDG07zmlO84iQvOcFzjvOCCd+5xjeu8pUrfOEyn7nEJy7ygQt8ZJk/LPGb
RX6xwE/u84N7/7t92uLbZiX6A/bqQFs=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0LkyAwAQgOFN7+YF4i3kMbwBhTEKHkLrTBtXQuemI2dLDqFyCxo3vesr
/vlmdrbZTQ5PDI4nImJI010RI5pUv0Y7IyptEemOiDLnWeIci5xlnjMscI1n
XOUpc2wyyxOusMFl1rnEGhdZ5QKPmOEx99niHu+4y1vu8IbbvOYWr7jJS27w
nOu8YIWfLPODJb6zyDcW+Mo8X3jIJx7wmU0m2t3AYIN/5nX+ssZvVvnDR/bZ
e2Av79nNFnv4xSSn/HdMKb8eUEb/gl1Jqg==
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0DlOQgEQgOFBOmVLQCUuiIlKLN1Qz2CE5+MGNjZEL0EtR9F7cAP3WhRt
lIhx+Yo/30w3mdXTi/Q8ExGJLksRWR2porKuihHXmuQiBoWIbz6xlI94ZJEP
LPCeed4xx1tO84YzfGedb1zhiDW+cpkvXOKQC3zmIsds8JPr/OAGv7jJLf2Y
t/nLHf5xl+H2PWbY5BT3meUBD3Wssr3FCtucZcI5nnCeKavssMs1/+npTH39
A9aMJzk=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0TVOBUAUQNHBXROsxBLcV4BbxRIocD62AxJ6dsAm0BaHEqeBBKfEIVBw
fnFz3lTzMlM8ODUQiQkhzGsxO4R4Jeg6K4QFlmvSPJcRQgtn2cwZNnGajZxi
AyOs5yTrOMFajrOGY6zmKKs4wkoOs4JD7Fefcp17mcMeZrObWexiJjuZwQ6m
s51pbGMqW6N7RXfSX6ad+Mva6H36NpfylSV8Yxnfmc975vGBBXxkIZ9YxGfG
8YixPGY8T5jAUybyjEk8ZzIvmMJLvqaHsMkXbvGN23znDj+4y0/u8Yv7/OYB
f3jIWy7zhiu84yrvucYHrvORG3ziqDcq9cdX0bflkv4BcdBG3A==
           "], 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0MsugwEQgNFpQrFAX6Ao+kvwBIqycldtVaJuVSQSSb1FQyitui08qZVj
8eVkJrOaXPO+0kpFRE29TMSt2krUGo/4Ho044hdr/OQhP1jlOyvss8w3HrDH
Ervc5yv3+MJddrjDZ27ziVt85CYfuME2b3StOfMVEzaZ5yVn2eAMLzjNc+Z4
ximecpInnGCdWR5zXWsaMRc5zFUOcYVpLnOQBQ5wiYta0O9YxDw79nf/t35X
0I/+AIdrIyE=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwVzck+FXAYx+G/TRnyyS1Y5TKUoU0iNJiOYWk6zjGm5A4yNBlPcQllWBWh
qJBS2to0URqkadXT4vn8vqv3zayLFjcnhRASDGaEkE4tvfw9GsIbavQV/ugt
qnUPv/VrIvoyv/QrqvQlfupNKnU3B/olFfoiP/QLynUX+3qDMt3Jd/2cC7qD
b3qd87qdr3qNc7qNL3qVs7qVPf2MUh3ns35KiY7xST+hWLewq1c4o6Ps6GWK
dDMf9WMKdRMf9CNO60be6yUKdAPv9CKndD1v9UmbT7U+YhfsLHk6YtPsQztD
rq6yqXbeTpOjK22KnbNTnNAVNtk+sPc4rsvtYXvf3iVbl9lDdsh2MZkewi3b
yYS+aTu4o2/Ydm7r67aNhL5mWxnXgzbOmB6wMUZ1v21hRPfZKMP6qj3mfxbb
/+/ZfzmuY5Y=
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0kdSlFEUgNFLmIkEnUjuJogYEOhuaCZEQcmKgoBolagwwUbChLADFgDF
FlgWyh6QeP7BV+fd2Xuvbnp1c65QFBGnOq6M6FSXzisiunnG84cR1w8i/vKG
/3jLC94xyiKe6NJczf+s4RVrec063rCet2zgHRsZ5REpFjHNYjaxhM0sZQtb
1a1yc4YVzLKSOVaxh4/Yy8fMs09DqjYPs4YjfKMx1Zrf8p3qnMfZwAnWc5Ip
TrGR02ziDNOcZQvfs5kf+JRzyZ35kc/4iW2cZzsX+IKf+ZyLfMUlvuQyu/iN
nfzK1/zCDq4kb+M681xjL3+xhz+Z4w9m+Z0Zribv5i5HuZP8Bbc5wi0O80/y
b9zkIAsc4Ab7+ZszPOQ0DzjFfU5yj0f2Z01Zu5TRie4BujA7Og==
           "], 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0DdOQ0EYRtFhARY0WMLQUEJPMGCbvABEqqmooCE5ZyyxA4LBYHJ2zWqQ
WAjnFVfnm+qXZnRnf22vL4Swq/ZACCml9dcfQoY9Dmk9FkKCGxzmJke4xW0d
aML7kJM84hSPOc0TJpnlDHOcZZ5zLDDFItMsMcMy51nhAqtcZI1LrHOZDa6w
yVW2eKaust7nurdzvNCDneelHu0Cr/RkF9nWs13itV7sMm/0alfY0Ztd5a3e
7Rrv9GHX2dWn3Yju68tuRvf1bZ9G99WzWxz3578c4w8HGVdH/3B9N/8=
           "], 
           VertexColors -> None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
43XqEZoORn2wL03C7DM7jbNfJtmllPbC5FoiT3NXP209eq7gR93XC2k3UipI
72i8hWirvbsNny+TW8SbQwLxnMeuy2xed5n8Et+RJbvMewBP9sXOx2Tg86Wk
svhhqCWe7/o0wO3HsUz99pI+6k4OPl/eevO7Fdrg+YjTFh0PXjxfa2TBo52P
zxdl+fCOdTZ4bidU/2qQA88NMk/6+mQQQOqz9KvoAhq/1PTlo945Asi7C3C7
ef/Rp0wERcpwEYB0MOGdjT6ND2cLFNflDUFf4bvLkvw03nw7hnTp/BA0qqXK
DvbSdF6svoV7Ne8QlH/99DPmDY2HMl7glfo6CEsv9i0wu9L4WSb7KZHbg+AZ
9V3RRI3GXyKpKudlB+G9gk1pLw+N93XMPPpAHoDOFpLOuYE/8qVUuXUmbgAY
rzg2kdJofKd7ENtZswFYc2jhVft9GqemS141FhoAhfMfAz1O0vi7F/lFsr39
sDqFX5B3J42f9zJas+5VP/RNuMclMtK4pCPZ9IdlP3yUH9im3EXTOat9dbO6
WD9My0p4XPlA44qGa0V/ffkOJuwxr9W9/sivn5mHBQ2+QyflXtqsOY2rxJo4
7O/vA9N6q8/JB2i8SGsh0NC5D7o+qn2z4KNxNeH37c4/euH03O0BezItj3j7
be4WXu4FHYKtQGchjQ85Stj4MfSCYmG8rctzGs9Y6NU6GdoD2yOGPq6+TuMn
6cUW1In4PKprOXf8SgKeayQlJUbb4vm71dtM5MTwnH9Ge2hrNT6/uEw5nfjc
8Lx/Yo1A1CY8T/NbUybZjM8vdlM1ZfZ7eC6nfIupXRrP/R/sesPchM8vBe3e
xvfL9PWDnE9+GW/C8yctB7cv1uHXuynm+yNPbxFAMRrtnQv9477EYuBQ22YC
aFHmu6XNafx1wbqijJYh+HhpyenCFhpXux0ZFeQ5BELU3/QJ47R8GVAWueks
MwQPHRlCCbk0fmH3tzr6kUF4xFntpuFL41aCdRT+6EHYnVz7xMiExsuiHHn3
nhkEYQaFhbztNL5NbI2C3oZBWG0aZ7/x9x/1W2zKWbvWAZhL5eh41ETjk7xj
9W9DB2DEoL+OPYnGUxbuC/udGoCcMI1TMXdo3F4jUEVNagAeu8w7OpvROJf0
09R9E9g6laGXe/4gjX9ifyy+CdM370wM09kNf+Rpdrh/rG8/mBX+mk2dpuXL
MPtoTKpBP/TGfGeyqafxgbtsdMab+0Hm8A9k8ycaF/Ca9G1c+g56zmNXvkfQ
+CXWJp6FD9/BPur7dPgdGu8kTh5/d+I7yCuFWjRZ0viHa6n7r5P6YCt/S7KD
0h/1KulZFGdYHxQHVtVOidO4FOdNqV3H+8Ag+pLBLzYaf2XnteZuFr4u1cmw
Uz90B8+nf+veZDyC52PziM8mZjzPCUb2vv+Ez1PvHUivrNUy+atbatfBv4w/
ON5jiq7B56lDT0bM13t4vi7uXK3jtmXu+13gnedrwedpyUtvjd1eeK7xs60m
Xg7Pq4y3GAsS8XlaG1d1+XsEns9VTPgl6OC5rfrQtSJ6PJewCFOJySNA6oOk
DalFNC4p3arS5UyAMxlbnO49o/HPgjYpGTsIUELnw8FrTeNSLxmb6keHIP3U
xK2bcn/0m2y7hOhShiDgh/XJwxw0znqD7toabH3VUUGV9EZoebqR0FQneHAI
Vvm4S54sovGDPvljq1cNwTrt4v6ZqD/6RPucM0uNg9Dux7eDeovGo07NnQvG
+sFTW6Fn4QyNt56d2JqEreNNngctM/5YxzltxtCCU4Og1yNHuLSVxnX3Gqdy
7xmEG9xbcuP/qJPdpktd37ANQoiSsNLZH7T8vc0hU+E/PADU2FxXvd4/1n3n
K1ziWN5+ODD82rSOxsua00+l5wyASyN3i+0XGmcqMisTix4AzbIdFR/e03iX
4XHfVPcBaGuo184N+6Ov5Ofm/W06AD5G8W/U79G4t4uuxu6jAxAdUFNx7jrG
I5js114LhiyFj7ef6JDhXedkvSYj7T5q8KqIhc3iy7wXr7938v0U/j6PsdAv
zaeFeL5GOX/I6Ooy78Uzd7srsA3PXdvzCG8I+Lw2HviyrnKZ93T/EFScemaH
527XH99atczzgsXGbnr3any+z3dHG8fcxfNTB6elfZZ5zpUeob3kuITP9yym
TR+PZuN58qYsZrYreD6ZwLL+2HY8v96fGJk2gfeBBQEtYd5l6vZX6Sqz8vfx
fOrH50cLOnh+9ICy8Bc+PA/2PD15cBTvD6fvRSYJf8HzBa8lhx/L+E9y/vsr
Hcv016cnz97IN8Bzl5/xj5rk8Hzb9EEwF8XzqYE0y1kWPGfRU1j7YhJft4jm
fClX6cXzOW3v+OF6PJ/efWLetpIASjZNob1Vf9wHmNxucaSQAC6KHJ0ipTRu
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
iY6dwL93a0X6AG18Rk7/+lz9RDskBPvySEzID5TU21aVzNsKkTxxLrYT8gBd
VCRrDkQ0wQKWb2sm5vsxfa+uDUFxL7HlrqLkhLw+6qdM5dNCLUAiL3vONyF/
z+mgUCLTlnYYlB4zJExo130iFZ6fHNYFXMfYRQVjafe/zqxo9sIJeXdKt/jK
nSsqoeXS6kL7QCrEviyTbZlDguJVMothdRfkTc+34FyPgzh/6dzZrYg3Go4c
4GXthCXveBKMeHDgkhL7HHyFAuplqfOl8nsgXsmdnBKEw+AyjUW6SJ/buId9
il6DQyrH4gxII4A982maz/HJZy9T7a9td5TKqYrkkMFl5EJtsyIBAXj0zlhZ
HFL2mmx9O9gFb+vK+/sO4TBvb6/CNQkqhFap6abwtoDFkjz2E0gXm3AV895D
upjjk4NbKLUCquVuftC5SwWcT1K9jEBxkcQx8yePkqAux9+vPoQCGqLpM7WK
aP7hJtvmStv79PFG+HNJp8Qwer8R/yh3USCD9ZTe/Ufi1yylx+/cZ54zbeJ3
omdXPD154iWUDq3Zb3+LAh1eMm+drbqh4MrmlSkJDTD0LZelfRUGG8Lec/BY
9oGf5E4vyZ2VsPhH40WFaf/3rLT5249Cx9E/+uteakwybkyi+bHfOs8fjf9P
9/l74f/9eX8Wb/rxpzEFpptron8EnDH88cN/Gv9V/fxne1+TfTz80ePkz45P
tnE7ZRf/DP7v5/fJNm4nGz7ZxvmvtaNfH4/+VdrJNs4nm7386vfzd3m/v6of
fvX7mWr/mu1kG/+/6rn+qv3wd+u3ycYXU/gU/nfQTVP9NoVPHt3978cnW//8
2fvzr/q+Jls//N74H7VO8Xvjk63f/qr9/LM4pvWjwKgdOq4Lvtje3vE/4lPv
5df2/6/C/6rvcbL188/2/2Trh589/59l/Ey28fBnseu/qt+YbPhkG1f/HZ+K
//+c+GQb539WfLLNP0zh/xj/z/f4z85j/Nbxf/R5pvB/jE+2dYep+fm/Nv4/
jc8/ihf+VXv53+Yn/9n6/88aR002PzPlrybzeJvK95ganxPH56/Pc5qs7WQb
b7/XOPzV/TpZ+vlXP/dU+9ds/+zjbcru/p79Ntl4bQqfwv9KcfhUv03hkwFn
+o/fv3v+YbL1w5+l36be19+j/yfLevSv7oe/an/+0fk8U/3/7+nnyYb/Vd/j
ZOvnqfzbv+d7nPKfvy8+Wd77VLw6NZ4nMz7Z9NcU/o/x/3yPk83u/i74n2Xe
9feap/3Pfvhn9fvv1T//7+z060e/V97jvzoefjbu/e/nmWzvfWr+/6+B/+z4
/9fWf6fy3qfG/+TE//F4/tk4+X+ft/A/2en/Vj9OtnH+s/7nz76uPYVP4T8z
/v+3dvF7x+3/bDzwr/nbfz5un2zvcQqfHHY02fniX+X3v0u91R/tf/7o+OpX
6bJ/Ff/fzsP8u57r3z1/8qt09O813/VHt7+6P/+o+djJxheTzd/+rP+cbM87
hf9afLLOw0/NQ07hv6d+/1fnG/+o9aOfPf734rt/1d5/r/yxf9auf+36yD8f
X/1e8dLvNR/+W+f5P2R8Ih8=
        "]], {
      DisplayFunction -> Identity, AspectRatio -> 3.333333333333333, 
       AxesLabel -> {None, None, None}, AxesOrigin -> {Automatic, Automatic}, 
       DisplayFunction :> Identity, Frame -> True, FrameLabel -> {None, None},
        FrameTicks -> {{{{0., 
            FormBox["0.`", TraditionalForm]}, {0.2, 
            FormBox["0.2`", TraditionalForm]}, {0.4, 
            FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
            FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
            FormBox["0.8`", TraditionalForm]}, {1., 
            FormBox["1.`", TraditionalForm]}}, None}, {{{-1, 
            FormBox["1", TraditionalForm]}, {-0.9, 
            FormBox["0.9`", TraditionalForm]}, {-0.8, 
            FormBox["0.8`", TraditionalForm]}, {-0.7, 
            FormBox["0.7`", TraditionalForm]}, {-0.6, 
            FormBox["0.6`", TraditionalForm]}, {-0.5, 
            FormBox["0.5`", TraditionalForm]}, {-0.4, 
            FormBox["0.4`", TraditionalForm]}, {-0.3, 
            FormBox["0.3`", TraditionalForm]}, {-0.2, 
            FormBox["0.2`", TraditionalForm]}, {-0.1, 
            FormBox["0.1`", TraditionalForm]}, {0, 
            FormBox["0", TraditionalForm]}}, None}}, FrameTicksStyle -> 12, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> {160, 350}, 
       Method -> {
        "OpacityFunction" -> None, "OpacityFunctionScaling" -> True, 
         "GridLinesInFront" -> True}, PlotRange -> {{-0.4, -0.2}, {0, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJztl4dzFVUUxkMd+iACQx9KQBhwMtQoxU+GEZDeRKQIhCoEBEHIQKQYihGU
GnqRDgECBoKAiCH03gIBUl7Nq7vvgYABKbr33Hvfzrz7FziTnXmz2d/u3nPO
d865Z1Mv5ut+Y4pFREQUMX6XjR/7mx+PUXguPBeeC8//1/PQZRnPGw8NYn5S
pyWx7iDeT90c3HMhiON1Fvr7Hg+gaNPFVR/eCGLw6HaW3j8FUTmli21W5QAS
0q9s++RYEOxuQf8gpnQok7Vjio7iAyuwJXD00ozTW2sEcY0ODWy1OguDMF42
VgigMRnWUJIMB0Fv7QlgAT3nD63LrK6dHICd3vOh1IFahitBfLVCj0frAD5i
Zjv4kNhxRP6t+kGsYWG80rFhPTu8oNtlgjj7nFnU8TcZ9oA9te9JAI/3XOge
naijHwXsQTkKOIDaFLAOCjfFDcOJSgnpAXSjB3Sxrjvk90wj2qhcDWPpcIFk
XRbAThJGA11m5KPioA8NaQK4XT/75ZwJGkjmOvmgcL4M4G1mnLdRcw0U7iwn
KpHQAVAaCvy4z8xmObCqGlM6AFrutB8tWrLDEcrPQqHjcjJsR5LQ5QhLb3c/
NLptA8ns0GFlMlfyoytPECjcKzrKkx4+EYcVZDZVR1tKsE/UkRUk93od4yh+
n6ifPBiiRJacr2M1vegTdZKLjefqHv5mvI4zrIyeekU95KCW0D3A5DjphZXc
eQRyO1pHTVrPi3Vk76HQTxd+e9GHDD/AVjKs41sSyotSlK8sMKsrdA3bDatv
Mj1Ip7zcwza61nDTUGPXRg/iSchMNGBpOqXh9b4nd3rGeNCKdL4bymsT8tsj
9LyNhlTQGngbuMVzt7CbAtZE37iFPjfwXnNW0RrIrXi30OEa9rKy7KiBRZvU
yS3ivSzsaaH643FdRDJzr6KGaGoEF+LI/3OhuqH2XeuCh/w8A2oji1/UnQuH
yZ/Tov/9oHKOdGE52T0h+sAPXlb5mEfrHwWlI8mP6lQX+UindVJEPH50ZrLG
yed3gsId7cc0dhuSr0aqqMtfKG/5oq4iIkjuln5cp33EGeIWUa/hnPe1T+Fc
F5UbyTYSo3Levyrn+5HKmdU7PVW+StR9OGfV/Wk5lXN9vQrn/ahyaut9Kqd2
SVQ57zuVdxH9E86fvWEbksp5nlTeg4T2KPwFa6tzKuf9ofI+tOGqXPZhOOf9
ovIBlGCV80PlvC/cCuf7rMr5vFO57OdwzuetyvlcUzmfoypn0y77pUvhfH6p
nO83Kpf7Qjjnc0rlp6azilY5tXNrlfN5pHK+7+crfBI1ksrl/hLOz9OGrvKp
NGdUzue6yi8zmaNUzueHyutRgp0Kl9fhPC36RcboZGOeV8aFnDSTb97e4MTr
xU58PuTXP7UtJl9Qvveh1WOc2CTuSx4bN2tXs05O2L1JqeWmhte5U8wTk7fv
dXvF0LcOyPckjzRWfZbtALPavpnJy0Y2nrP0hAMFJYev61HF5E9/7j89cq0D
cj3JaTxOd4jvR5OfHZ08YkA/Bwt2Qfwtk++/eW+gFuWAtCP5yrZFei4o70Cf
iRtmbtpucuZ1Lb8da4xoDywxeQwVqB3SvuTdZidE9dhtR92OT0ZdG2byFq6U
hs4EO8b+MGpYTmeT1+j7qGb8SDukX5IXPVXCSJUdj6t27fO6msl9jZjAdrRh
23dRk98xVOn0jw2zhb+Sk8xZNqQzmTNNvm3cEd+0NBtKtHqnTfs/TJ54J89a
dpUNMg7J+XeTTXxXmnzQ3tbX2/Wy4V7p8fVj40z+8bsjz95taoOMT3Km+sTS
NrDsLu1m8ore3w4Vc1ux03K6wqaWJuf7thUybsmt7LHtVkRN3lHkVAmTX2zS
duXVuVZMT6vy6mrAFuJGMRvKWyH1kHztv8vnvGprhSGe7k83+dwJbKexgs83
k19PZomyQOok+aZ5jTIW7bHgRnUWsMljB36XcizGApJjjMmNZGxw1bZA6ic5
3z/zsIUGqMmzs+ZP67w6D442NdKH1DX5gYMPhs/onQepq+TxLH1l8jDp/NvU
2X9Zzfn4xaIP7p/PxRFWztkm59+1uZB6S+4rzgokFx02frZ1/0GTn3z045sx
BTn43n5x3e9rTP7jYZuxM+TgksiD5IOZ2Uk5KM/Mjjd5E/Hdzf//seI/aXis
+A==
                "], {{-80., 
                  Rational[-15, 2]}, {80., 
                  Rational[15, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[15, 2]}, {80., 
                    Rational[15, 2]}, {80., 
                    Rational[-15, 2]}}, {{80., -7.5}, {-80., -7.5}, {-80., 
                  7.5}, {80., 7.5}, {80., -7.5}}]]}, {
                CapForm[None], {}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{-80., 7.5}, {80., 7.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{-68.60681114551085, 7.500000000000001}, 
                    
                    Offset[{0, 4.}, {-68.60681114551085, 
                    7.500000000000001}]}, {{-19.071207430340557`, 
                    7.500000000000001}, 
                    
                    Offset[{0, 4.}, {-19.071207430340557`, 
                    7.500000000000001}]}, {{30.464396284829725`, 
                    7.500000000000001}, 
                    
                    Offset[{0, 4.}, {30.464396284829725`, 
                    7.500000000000001}]}, {{80., 7.500000000000001}, 
                    Offset[{0, 4.}, {80., 7.500000000000001}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-56.22291021671827, 7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {-56.22291021671827, 
                    7.500000000000001}]}, {{-43.8390092879257, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {-43.8390092879257, 
                    7.500000000000001}]}, {{-31.455108359133128`, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {-31.455108359133128`, 
                    7.500000000000001}]}, {{-6.6873065015479884`, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {-6.6873065015479884`, 
                    7.500000000000001}]}, {{5.696594427244582, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {5.696594427244582, 
                    7.500000000000001}]}, {{18.080495356037154`, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {18.080495356037154`, 
                    7.500000000000001}]}, {{42.848297213622295`, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {42.848297213622295`, 
                    7.500000000000001}]}, {{55.232198142414866`, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {55.232198142414866`, 
                    7.500000000000001}]}, {{67.61609907120743, 
                    7.500000000000001}, 
                    
                    Offset[{0., 2.5}, {67.61609907120743, 
                    7.500000000000001}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    
                    Offset[{0., 7.}, {-68.60681114551085, 
                    7.500000000000001}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    
                    Offset[{0., 7.}, {-19.071207430340557`, 
                    7.500000000000001}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6000", TraditionalForm], 
                    
                    Offset[{0., 7.}, {30.464396284829725`, 
                    7.500000000000001}], {0., -1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8000", TraditionalForm], 
                    Offset[{0., 7.}, {80., 7.500000000000001}], {0., -1.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
              PlotRange -> All, Frame -> True, 
              FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {160., Automatic}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.02`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.04`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.06`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.08`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.12`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.14`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.17`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.21`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.24`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.26`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.994, 0.986], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.64, 0.6626666666666667, 0.6573333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.96`", ",", "0.994`", ",", "0.986`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.994, 0.986]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.994, 0.986], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9199999999999999, 0.988, 0.972], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6133333333333333, 0.6586666666666667, 0.648], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9199999999999999`", ",", "0.988`", ",", 
                    "0.972`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9199999999999999, 0.988, 0.972]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9199999999999999, 0.988, 0.972], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.28`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8799999999999999, 0.982, 0.958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5866666666666667, 0.6546666666666667, 
                    0.6386666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8799999999999999`", ",", "0.982`", ",", 
                    "0.958`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8799999999999999, 0.982, 0.958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8799999999999999, 0.982, 0.958], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.29`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.56, 0.6506666666666667, 0.6293333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8400000000000001`", ",", "0.976`", ",", 
                    "0.9440000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.97, 0.93], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5333333333333334, 0.6466666666666667, 
                    0.6200000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.97`", ",", "0.93`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.97, 0.93]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.97, 0.93], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.31`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.76, 0.964, 0.916], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5066666666666667, 0.6426666666666667, 
                    0.6106666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.76`", ",", "0.964`", ",", "0.916`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.76, 0.964, 0.916]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.76, 0.964, 0.916], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72, 0.958, 0.902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.48, 0.6386666666666667, 0.6013333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.72`", ",", "0.958`", ",", "0.902`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72, 0.958, 0.902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72, 0.958, 0.902], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6799999999999999, 0.952, 0.888], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.4533333333333333, 0.6346666666666667, 
                    0.5920000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6799999999999999`", ",", "0.952`", ",", 
                    "0.888`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6799999999999999, 0.952, 0.888]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6799999999999999, 0.952, 0.888], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.34`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6399999999999999, 0.946, 0.874], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42666666666666664`, 0.6306666666666667, 
                    0.5826666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6399999999999999`", ",", "0.946`", ",", 
                    "0.874`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6399999999999999, 0.946, 0.874]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6399999999999999, 0.946, 0.874], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.35000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5999999999999999, 0.94, 0.86], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3999999999999999, 0.6266666666666667, 
                    0.5733333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5999999999999999`", ",", "0.94`", ",", 
                    "0.86`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5999999999999999, 0.94, 0.86]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5999999999999999, 0.94, 0.86], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.36`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3733333333333334, 0.6226666666666667, 
                    0.5640000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.56`", ",", "0.9339999999999999`", ",", 
                    "0.8460000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.37`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3466666666666667, 0.6186666666666667, 
                    0.5546666666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.52`", ",", "0.9279999999999999`", ",", 
                    "0.8320000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.38`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.32, 0.6146666666666667, 0.5453333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.48`", ",", "0.9219999999999999`", ",", 
                    "0.8180000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.39`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.29333333333333333`, 0.6106666666666667, 0.536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.43999999999999995`", ",", 
                    "0.9159999999999999`", ",", "0.804`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804],
                     Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2666666666666666, 0.6066666666666667, 
                    0.5266666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3999999999999999`", ",", "0.9099999999999999`",
                     ",", "0.79`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.41000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23999999999999994`, 0.6026666666666667, 
                    0.5173333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3599999999999999`", ",", "0.9039999999999999`",
                     ",", "0.776`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.42`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32000000000000006`, 0.898, 0.762], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.21333333333333337`, 0.5986666666666667, 0.508], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.32000000000000006`", ",", "0.898`", ",", 
                    "0.762`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32000000000000006`, 0.898, 0.762]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32000000000000006`, 0.898, 0.762], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.43`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28, 0.892, 0.748], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1866666666666667, 0.5946666666666667, 
                    0.4986666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.28`", ",", "0.892`", ",", "0.748`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28, 0.892, 0.748]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.28, 0.892, 0.748], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.44`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.886, 0.734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.16, 0.5906666666666667, 0.48933333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.24`", ",", "0.886`", ",", "0.734`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.886, 0.734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.24, 0.886, 0.734], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.45`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0.88, 0.72], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1333333333333333, 0.5866666666666667, 0.48], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19999999999999996`", ",", "0.88`", ",", 
                    "0.72`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0.88, 0.72]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0.88, 0.72], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.15999999999999992`, 0.874, 0.706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10666666666666662`, 0.5826666666666667, 
                    0.4706666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15999999999999992`", ",", "0.874`", ",", 
                    "0.706`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15999999999999992`, 0.874, 0.706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15999999999999992`, 0.874, 0.706], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.47000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.11999999999999988`, 0.868, 0.692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07999999999999993, 0.5786666666666667, 
                    0.4613333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.11999999999999988`", ",", "0.868`", ",", 
                    "0.692`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.11999999999999988`, 0.868, 0.692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.11999999999999988`, 0.868, 0.692], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.08000000000000007, 0.862, 0.678], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.053333333333333385`, 0.5746666666666667, 
                    0.45200000000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.08000000000000007`", ",", "0.862`", ",", 
                    "0.678`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.08000000000000007, 0.862, 0.678]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.08000000000000007, 0.862, 0.678], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.49`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.040000000000000036`, 0.856, 0.664], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.026666666666666693`, 0.5706666666666667, 
                    0.4426666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.040000000000000036`", ",", "0.856`", ",", 
                    "0.664`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.040000000000000036`, 0.856, 0.664]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.040000000000000036`, 0.856, 0.664], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.85, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5666666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.85`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.85, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.85, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.51`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.842, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5613333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.842`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.842, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.842, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.52`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.834, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.556, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.834`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.834, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.834, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.53`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.826, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5506666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.826`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.826, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.826, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.54`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.818, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5453333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.818`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.818, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.818, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.55`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8099999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.54, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8099999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8099999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8099999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.56`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8019999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5346666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8019999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8019999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8019999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5700000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7939999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5293333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.7939999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7939999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.7939999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.58`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.786, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.524, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.786`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.786, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.786, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.59`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.778, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5186666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.778`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.778, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.778, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.77, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5133333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.77`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.77, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.77, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.61`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.762, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.508, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.762`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.762, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.762, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.62`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.754, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5026666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.754`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.754, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.754, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.63`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.746, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.49733333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.746`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.746, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.746, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.64`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.738, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.492, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.738`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.738, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.738, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.65`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.73, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4866666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.73`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.73, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.73, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.66`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.722, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.48133333333333334`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.722`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.722, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.722, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.67`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.714, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.476, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.714`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.714, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.714, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.68`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.706, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4706666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.706`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.706, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.706, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.698, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4653333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.698`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.698, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.698, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7000000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.69, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.45999999999999996`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.69`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.69, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.69, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.71`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.682, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4546666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.682`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.682, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.682, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.72`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.674, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44933333333333336`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.674`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.674, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.674, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.73`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.666, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44400000000000006`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.666`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.666, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.666, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.74`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.658, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4386666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.658`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.658, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.658, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.75`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.65, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.43333333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.65`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.65, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.65, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.76`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6416000000000001, 0.6444], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4277333333333334, 0.4296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.6416000000000001`", ",", 
                    "0.6444`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6416000000000001, 0.6444]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6416000000000001, 0.6444], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.77`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6332, 0.6388], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.42213333333333336`, 0.4258666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6332`", ",", "0.6388`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6332, 0.6388]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6332, 0.6388], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.78`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6248, 0.6332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.41653333333333337`, 0.42213333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6248`", ",", "0.6332`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6248, 0.6332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6248, 0.6332], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.79`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6164, 0.6276], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4109333333333333, 0.41840000000000005`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6164`", ",", "0.6276`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6164, 0.6276]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6164, 0.6276], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.608, 0.622], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4053333333333333, 0.4146666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.608`", ",", "0.622`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.608, 0.622]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.608, 0.622], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.81`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5996, 0.6164], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3997333333333334, 0.4109333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5996`", ",", "0.6164`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5996, 0.6164]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5996, 0.6164], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8200000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5912, 0.6108], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.39413333333333334`, 0.4072], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5912`", ",", "0.6108`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5912, 0.6108]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5912, 0.6108], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8300000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5828, 0.6052], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38853333333333334`, 0.40346666666666664`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5828`", ",", "0.6052`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5828, 0.6052]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5828, 0.6052], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.84`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5744, 0.5996], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38293333333333335`, 0.3997333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5744`", ",", "0.5996`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5744, 0.5996]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5744, 0.5996], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.85`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3773333333333334, 0.3960000000000001], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.5660000000000001`", ",", 
                    "0.5940000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.86`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5576, 0.5884], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.37173333333333336`, 0.3922666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5576`", ",", "0.5884`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5576, 0.5884]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5576, 0.5884], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.87`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5492, 0.5828], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.36613333333333337`, 0.38853333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5492`", ",", "0.5828`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5492, 0.5828]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5492, 0.5828], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.88`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5408, 0.5772], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3605333333333333, 0.38480000000000003`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5408`", ",", "0.5772`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5408, 0.5772]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5408, 0.5772], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.89`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5324, 0.5716], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3549333333333333, 0.38106666666666666`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5324`", ",", "0.5716`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5324, 0.5716]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5324, 0.5716], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.524, 0.5660000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3493333333333334, 0.3773333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.524`", ",", 
                    "0.5660000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.524, 0.5660000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.524, 0.5660000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.91`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5156, 0.5604], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.34373333333333334`, 0.37360000000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5156`", ",", "0.5604`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5156, 0.5604]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5156, 0.5604], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5072, 0.5548], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33813333333333334`, 0.3698666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5072`", ",", "0.5548`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5072, 0.5548]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5072, 0.5548], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.93`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49879999999999997`, 0.5492], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33253333333333335`, 0.36613333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49879999999999997`", ",", 
                    "0.5492`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49879999999999997`, 0.5492]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49879999999999997`, 0.5492], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9400000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49039999999999995`, 0.5436], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3269333333333333, 0.3624], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49039999999999995`", ",", 
                    "0.5436`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49039999999999995`, 0.5436]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49039999999999995`, 0.5436], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9500000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.482, 0.538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.32133333333333336`, 0.3586666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.482`", ",", "0.538`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.482, 0.538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.482, 0.538], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.96`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4736, 0.5324], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31573333333333337`, 0.3549333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4736`", ",", "0.5324`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4736, 0.5324]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4736, 0.5324], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.97`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.46520000000000006`, 0.5268], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31013333333333337`, 0.35120000000000007`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.46520000000000006`", ",", 
                    "0.5268`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.46520000000000006`, 0.5268]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.46520000000000006`, 0.5268], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.98`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4568, 0.5212], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3045333333333333, 0.3474666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4568`", ",", "0.5212`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4568, 0.5212]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4568, 0.5212], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.99`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4484, 0.5156000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.2989333333333334, 0.3437333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.4484`", ",", 
                    "0.5156000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4484, 0.5156000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4484, 0.5156000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.44, 0.51], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.29333333333333333`, 0.34], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.44`", ",", "0.51`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.44, 0.51]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.44, 0.51], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"1.`", " ", "#1"}]}]}], "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1541.4321581256781`", ",", "8101.547029262283`"}],
                    "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "160.`"}], ",", 
             RowBox[{"ScalingFunctions", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Left"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      GraphicsComplexBox[CompressedData["
1:eJx8nQV0FEnXhoMutgnusri7a6GLO4NbgODuDGEJDsGdheCaBEJcJlJxQQPB
nSREiOEuf7qp99Y39f0fOZzDeU7N9NyZfrrurds905UnzBlkk9PCwmKJlYWF
9n+Z7a9Lb38dzcue6pT97yA7sLZn9j/JpYzHs/9FEe+b8zn7XyRxCZuBJW0G
St4z0nHvSMcI4mIDcpQYkEPyrm4j9nQbEU5cpK1bsbZuYcQ7GuXf3Si/ZKsa
1kVrWIcSbyvnt7OcXwjxn0W0P8lb8k7bkXdasIz/06pKn1Zx4pIJjSsmNA6S
8V97Xv7a8wDi4trmd/rL+PX/TcRF9c/LV8avfz4+xIX1z8Nbxq+/fy9iS/39
esj49ffnTlxIfz9uMj49/ovy9fV4z8vt6/87yefr8Zwlzq+//mnivPrrnSD+
Q9/+UeKcv/4n/t5fe/5e4lcftcdvJ07Sx9cR++i8iNjcLyfFLyfFLyfFLyfF
LyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfF
LyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfFLyfF
LyfFLyfFLyfFLyfyq/iv901+geEXGH6B4RcYfoHhFxh+geEXGH6B4RcYfoHh
Fxh+UfzCLzD8oviFX2D4RfELv8Dwi+IXfoHhF8Uv/ALDL4pf+AWGXxSf8Ite
X/hF2xd+0fOFX2D4BYZfYPgFhl9g+AWGX2D4BYZfYPP5y6TMXyZl/jIp85dJ
mb9MyvxlUuYvkzJ/mZT5y6TMXyZl/jIp85dJmb9MyvxlUuYvkzJ/mZT5y6TM
XyZl/jIp85dJmb9MyvxlUuYvkzJ/mZT5y6TMXyZl/jIp85dJmb9MyvxlUuYv
kzJ/mZT5y6TMXyZl/jIp85dJmb9MyvxlIr92/Nov5BcYfoHhFxh+geEXGH6B
4RcYfoHhFxh+geEXGH6B4RfFL/wCwy+KX/gFhl8Uv/ALDL8ofuEXGH5R/MIv
MPyi+IVfYPhF8Qm/6PWFX7R94Rc9X/gFhl9g+AWGX2D4BYZfYPgFhl9g+AWG
X8V+7WfyCwy/wPALDL/A8AsMv8DwCwy/wPALDL/A8AsMv8Dwi+IXfoHhF8Uv
/ALDL4pf+AWGXxS/8AsMvyh+4RcYflH8wi8w/KL4hF/0+sIv2r7wi54v/ALD
LzD8AsMvMPwCwy8w/ALDLzD8AsMv4Q35BYZfYPgFhl9g+AWGX2D4BYZfYPgF
hl9g+AWGX2D4RfELv8Dwi+IXfoHhF8Uv/ALDL4pf+AWGXxS/8AsMvyh+4RcY
flF8wi96feEXbV/4Rc8XfoHhFxh+geEXGH6B4RcYfoHhFxh+geFXGX27l8gv
MPwCwy8w/ALDLzD8AsMvMPwCwy8w/ALDLzD8AsMvil/4BYZfFL/wCwy/KH7h
Fxh+UfzCLzD8oviFX2D4RfELv8Dwi+ITftHrC79o+8Iver7wCwy/wPALDL/A
8AsMv8DwCwy/wPALDL8c7m06fG/TVfILDL/A8AsMv8DwCwy/wPALDL/A8AsM
v8DwCwy/wPCL4hd+geEXxS/8AsMvil/4BYZfFL/wCwy/KH7hFxh+UfzCLzD8
oviEX/T6wi/avvCLni/8AsMvMPwCwy8w/ALDLzD8AsMvMPwCm9f3sUp9H6vU
97FKfR+r1PexSn0fq9T3sUp9H6vU97FKfR+r1PexSn0fq9T3sUp9H6vU97FK
fR+r1PexSn0fq9T3sUp9H6vU97FKfR+r1PexSn0fq9T3sUp9H6vU97FKfR+r
1PexSn0fq9T3sUp9H6vU97FKfR+r1PexSn0fq9T3sUp9H0t+3fzrT+0f+QWG
X2D4BYZfYPgFhl9g+AWGX2D4BYZfYPgFhl9g+EXxC7/A8IviF36B4RfFL/wC
wy+KX/gFhl8Uv/ALDL8ofuEXGH5RfMIven3hF21f+EXPF36B4RcYfoHhFxh+
geEXGH6B4RcYfoHN+6txSn81Tumvxin91Tilvxqn9FfjlP5qnNJfjVP6q3FK
fzVO6a/GKf3VOKW/Gqf0V+OU/mqc0l+NU/qrcUp/NU7pr8Yp/dU4pb8ap/RX
45T+apzSX41T+qtxSn81Tumvxin91Tilvxqn9FfjlP5qnNJfjVP6q3FKfzVO
6a/GKf3VOKW/Gqf0V+PIr6EG7e82+QWGX2D4BYZfYPgFhl9g+AWGX2D4BYZf
YPgFhl9g+EXxC7/A8IviF36B4RfFL/wCwy+KX/gFhl8Uv/ALDL8ofuEXGH5R
fMIven3hF21f+EXPF36B4RcYfoHhFxh+geEXGH6B4RcYfoHh1wHdmzvkFxh+
geEXGH6B4RcYfoHhFxh+geEXGH6B4RcYfoHhF8Uv/ALDL4pf+AWGXxS/8AsM
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
C7/o+cIvMPwCwy8w/ALDLzD8AsMvMPwCwy+w+e9j2rORezQBYv7H70nbK7+X
aa/8Xqa98nuZ9srvZdorv5dpr/xepr3ye5n2yu9l2iu/l2mv/F6mvfJ7mfbK
72XaK7+Xaa/8Xqa98nuZ9srvZdorv5dpr/xepr3ye5n2yu9l2iu/l2mv/F6m
vfJ7mfbK72XaK7+Xaa/8Xqa98nuZ9srvZdorv5dpr/xepr3ye5n2yu9l2iu/
l2mv/F6mvfJ7mfbK72WCbcgvc9+clHEnGjf/fVcbYvPnm5Tnm2h8h9nvK9oQ
Y7zYL+9oHIxx4TmNgzFu/vtUNsQYN/99IRti8/hilfhiadz89z1siM0/nzjl
84mjcfPv19sQY9z8+9E2xBg3/36rDTHGzb+faEOMcfPvl9kQY9z8+0E2xBg3
/36HDTHGza/PtyHGuPn11TbEGDe/PtaGGOPm1zfaEGPc/Po0G2KMm19fZEOM
cfPrQ2yIMW5+ft+GGOPm52dtiDFufn7Nhhjj5udHbIgxbt7ftiHGuHl/0oYY
4+b9JRtijJv3B2yIMW6+vrMhxrh5fW5DjHHz+sqGGOPm+dHmv/LjfO3j3Cfr
LzDyIRj5EIx8CEY+BCMfgpEPwciHYORDMPIhGPkQjHwIRj6k+EU+BCMfUvwi
H4KRDyl+kQ/ByIcUv8iHYORDil/kQzDyIcUv8iEY+ZDiE/mQXl/kQ9q+yIf0
fJEPwciHYORDMPIhGPkQjHwIRj4EIx+CkQ/B5vnLnunaHpb11vCV74etfC/r
rTsL+95d2Ffy0Omns//JeuvWuO+3x32X9dUQfR6RfLPXhVu9Lsh6a1DHPEM6
5pEc23xMXPMxst4aUNdrUF0vWW9d0+dFyf1KajtU1ltXCgbGFgyU9VYf7e2W
kLwv4/6RjPuy3tqnv+FAWS+GtXYIay3rrz0uqQddUmW9tetf7c9Psn48yvpr
h378yXprh368yXprm358eUrWjydZf23Rjx9Zb23WjxdXWQ/qx4eLrO/048FZ
1nO6/+eIC+i+nyHOp/t9kjiP7vNx4ty6vw7EFrqv+4m/VNf83EWcdlL/nzhU
92/lf9Xzv+qBk0p9cFKpP1yV+sOVxvf/+lxpHIzxw7/2I42DzeuXUKV+CaVx
4SmNgzEujgsaB2N8pJ4vLtM4GONP9Pn8Oo2DMa6no7Y3aByM8bd6vpf1Fxjj
zfV8fovGwRhfoudrWV+BMe6n5+O7NA7G+Fc9sdyncTDG2+sBy/oKjPGVer58
RONgjIfo+fAJjYMxrt1ryMJC1ldgjFfRy1E5DsZ4V11IWX+BMT5J+zgWy/oK
jPH1zbQPVNZXYIyf0XQvK+srMMaj+6WH90uX42CMp4zShaFxMMYLaIfDDllf
gTFeRwt3gqyvwBjvo+nQTNZXYIzP1A84WV+BMb5NP6DkOBjjLk7an6y/wBiP
1Xa3rayvwBh/Fa5/IDQOxnhR/YCV9RUY4020w+GNHAfT8a1tLVzWX2DkO+RD
5Dsw8h0Y+Q6MfAdGvgMj34GR78DId2DkOzDyHRj5Dox8B0a+o3pQ5Dtike+o
HhT5jljkO6oHRb4jFvmO6kGR74hFvqN6UOQ7YpHvqB4U+Q6MfEf1nsh3VL+J
fEf1msh3YOQ7MPIdGPkOjHwHRr4DI9+Bke/AyHfm9ZUNsXl/y6j0s4xKP8uo
9LOMSj/LqPSzjEo/y6j0s4xKP8uo9LOMSj/LqPSzjEo/y6j0s4xKP8uo9LOM
Sj/LqPSzjEo/y6j0s4xKP8uo9LOMSj/LqPSzjEo/y6j0s4xKP8uo9LOMSj/L
qPSzjEo/y6j0s4xKP8uo9LOMSj/LqPSzjEo/y6j0s8AG6meZsxOxef8K4yZi
8/6UQelHGZT+k0HpNxmU/pJB6ScZlP6RQekXGZT+kEHpBxmU/o9B6fcYlP6O
QennGJT+jUHp1xiU/oxB6ccYlP6LQem3GJT+ikHppxiU/olB6ZcYlP6IQemH
GJT+h0HpdxiU/oZB6WcYlP6FQelXGJT+hEHpRxhEvX1G2Z/uxL/yqC/xr/qW
E//6+EOJF+mfh/Tpk/7+YoiX6/FeIf6p/10n7qwLfIN4rV6PSZ8i9fLhFnE+
vV6SPvXS6x/p0xZdr/vE1/T6RPpUWH/D0qdBev3wRNme9Gm6fgA8V7Yv+bxe
H8Urryd9ytTrn0Tl9aVPjfT65oUSj/TpV/6RPu3RfZc+eeq+S5/u6PtT+vRB
31+SS+u+S59a6b5Ln0bqvkufjPr+lT456P5kslYbFmT/ixbriyzmq/8fRdxi
ftWW86tK9p6yPPtfJHEzrVyKiyD2HKQVTJKb6HGFE7u3f+jR/mEYcaOm2p9k
11qb3WttDiVuUFFLYCHELvrnJLmelj53BxMP18q/25x4aMq6sSnrgiRr4TYP
JB6iH5f+krV0vtdEPEivV/0k6/WoD/EAvf70lqx/7l7E/fT60lOyXk+6E/fR
60c34t56vehKvFs/kC8Q79DrQSfirXr9co7YXq9HThNv0OuLk8Rrde+OEefS
8/8h4h+TtHy+j/hzYS0/7yROWabl2w3EAXr9ZSSGX+Avv+YRyofm7ESMfGg+
biJGPgQjH4KRD8HIh2DkQ/PtxRIjH5rHE0eMfAhGPgQjH4KRD8HIh2DkQzDy
IRj5EIx8CEY+BCMfgpEPwciHYORDMPIhGPkQjHwIRj4EIx+CkQ/ByIdg5EMw
8iEY+RCMfAhW+/HwDfU8GPU8GPU8GPU8GPU8GPU8GPU8GPU8HZ+ingejngej
ngejngejnqf4RT0PRj1P8Yt6Hox6nuIX9TwY9TzFL+p5MOp5il/U82DU8xS/
qOfBqOcpPlHP0+uLep62L+p5er6o58Go58Go58Go58Go58Go58Go58Go583n
r0X/Y/4ysqVborL/yfWi/vKVJC9eov3J9eOHmdez/8n14sJfdRbxu2FaQpHr
xflae+OuXC++6dzwXeeGkufqCVuuF1/9quOIZ2vpuqXkzNLaDpfrxZmWyXMt
k+V6MT0Xe5WLSb7zq06U/Fj7CyS+Fb31UfRWuX685aEldLl+vHlEa3D4Sf5V
hxLH6v0buX6M1fs1cr14Te/PeErW+zFy/XjlV50rWe+3uBLv0fsrLsQ79X6K
XD9u0/snjsSbf9XRxBv14/sU8Xr9eD1OnFc//o4Q59CPpwPE39pox8du+flf
1XzfQpyo9y9WE5vno2PEv/rlF5T840U8+lfdQvyrPx1C3OxX3UXs86uuI9bD
LHaZOFCfX68R/0qHMj/q2i6W+VEPv+wt4iS9PyrzYy2933mX+Ff9fZ/4V70t
8+Ov+voR8a96WubHBXr9LPPjr3wr8+M3/X+ZH3/lX5kPO+jvV+bDX/lYsp2e
f2R+/JWfZX4M1T8fmQ9/5WuZD3Pr/W+ZD6vpn5/kv/UdLvPjZP3zlPlxo77D
ZD48p3++Mh9e0tdPkl/qn7fMj4X09ZQ8fw2/zM8fGpXzh0bl/KFROX9oVM4f
GpXzh0bl/KFROX9oVM4fGpXzh0bl/KFROX9oVM4fGpXzh0bl/KFROX9oVM4f
GpXzh0bl/KFROX9oVM4fGpXzh0bl/KFROX9oVM4fGpXzh0bl/KFROX9oVM4f
GpXzh0bl/KFROX9oVM4fGpXzh0bl/KFROX9oVM4fGv/rekDz/tIx6rdi/P+/
nstA85v54//X9V0Gmv/Mz1f+r+u9DDQ/mm//f13/ZaD50/x85/+6HsxA8yse
//vrwww0/+LxGP//rxcz0PyMx//++jEDzd94/O+vJzPQ/G7+fv/X9WUGmv/x
+N9fb2ag/GC+v/7X9WcGyh94/O+vRzNQfsHjf399moHyDx7/++vVDJSf8Pjf
X79moPyFx//+ejYD5Tc8/vfXtxko/+Hxv7/ezUD5EY///fVvBsqfePzvr4cz
UH7F439/fZyB8i8e//vr5QyUn/H4318/Z6D8jcf//no6A+V3PP7319cZKP/j
8b+/3s5A9QEe//vr7wxUP+Dxv78ez0D1BR7/++vzDFR/4PG/v17PQPUJHv/7
6/cMVL/g8b+/ns9A9Q0e//vr+wxU/+Dxv7/ez0D1ER7/++v/DFQ/4fHq9YB1
9flG9rfMWV4faN4/2q3Mf7tpHP178/6TOzH692D078Ho34PRvwejfw9G/x6M
/j0Y/Xsw+vdg9O/B6N+D0b8Ho38PRv8ejP49GP178+3J+h79e/PtS0b/3vz1
ZH2P/r3568v6Hv1783hkvY/+PRj9ezD692D078Ho34PRvwejfw9G/x6M/j31
M3V/MqkfgX4F+hFg9CPA6EeA0Y8Aox8BRj8CjH4EGP0I6q+IfgQY/Qgw+hFg
9CPA6EeA0Y8gFv0IMPoRxKIfAUY/glj0I8DoRxCLfgQY/Qhi0Y8Aox9BLPoR
1E8U/Qgw+hHUDxT9CDD6EWD0I8DoR1A/TPQjwOhHgNGPoM9f9CPA6EdQf1Ov
9+cQo79qrx9vtam/CkZ/FYz+Khj9VTD6q2D0V8Hor4LRXwWjvwpGfxWM/ioY
/VUw+qsUv+ivgtFfpfhFfxWM/irFL/qrYPRXKX7RXwWjv0rxi/4qGP1Vil/0
V8Hor1J8or9Kry/6q7R90V+l54v+Khj9VTD6q2D0V8Hor4LRXwWjvwpGfxWM
/ip4qX585ab1ojk7EWO9Zz5uIsZ6DYz1GBjrLTDWU2Csl8y3F0uM9Y55PHHE
WK+AsR4BY70BxnoCjPUCGOsBMOp9MOp5MOp1MOpxMOptMOppMOplMOphMOpd
MOpZMOpVMOpRMOpNMOpJMOpFMOpBMOo9MOo5MOo1MOoxsB5eTelThFYOnJI+
6ZtvJn2aqgkwQfqklwNO0qfZ2tt/I33SX66t9EnPq2ukTyu0F7CRPnEt3vzS
pxxa+e8ifeqiCT5I+rROK4c+SJ+itPgPSp/yazp0kD711nZnvPRpq7Y71kuf
rmvvt470Sa/npkif9PV1a+mTXo8VlP7o9dhjyXo9dlH6pNdjq6RPej02WPqk
12PVpT96PfZRsl6PxUif9HrskPRJr8dmSZ/0eqyj9Emvx4pKf/R6LFGyXo95
S5/0emyj9Emvx0ZKn/R6rF52vaKVT72iuV7+/8iuV7T3cSKKeLrpzAzTl0ji
lxd/vLw4SPJUrb3qFEGcctAl9WBOyZO1z3VkOHGSdvmCexjxJO3yiwKSE7Or
p7kTQoknTM7+M4UQx2uHRVHJ47X0Mz2YOEQrn9Zy4mCtoGwWRMwntoucmBhA
HKR5t8efOFArZ7qaiAOq9Qmt9s6X2N/qW7DVKR9i0xdn/mWwN7Gfdhzk8iL2
za6eYj08iH38s/8muhN7Z3+8Z4q5EU/T6ssNF4lt9GnpPPFEbX/97UQ8Tvv8
z5wlHqN9nnlPE4/QPp/JJ4hdtPe75SjxOS3+3geJT2nxFNxL3Fbb/r7txI21
crLEOuJ+2nFRZxEx/AK/0urf/TGUH3+V+bLeytT+/pY8K/Hv2YlHZP2VrpWb
H2S9NUN7//0kv9R8PSPrrWmarz9kvZWi+TpU8hTt/bjIeitJ8zWvZBvN17Gy
/krUfPWW9dZE7fO1lByv+TpZ1l9hV7L/bGX9FabNE/Vk/RVyot6lE49k/aX7
ukXWX1zztZ2sv3Rf02X9FajtPwdZf+m+9pH1l7/m6zdPyZqv52X95aft71Gy
/tJ9LSjrr9laObVE1l8zteXWXVl/TdWWFy1l/TVZ83W/rL8maPv3wyni8dr+
GirrL3/Nj1my/vLRFnD1ZP3lpn0+6XuIR2r/D5f11wDtdM/dtbK+G9Ixz5AD
Mf9Vb+npftFBZVzmS/26sFFONK7WYxO18iDIQ3m+zKd6u6CficbVek3f/pxg
GlfrN30Z4xNG42o9p5cLPyNpXK3vOmoB9bhE42q9p7cHdlxV4pP5Wj8tMjOW
xtV6UC8/Ct9UPh+Zz/V2mmccjav1ov75DL9N42r96KzNG9/u0LhaT2Zob+DY
PRpX68uGWj7t+oDG1XpznvZyKQ9pXK0/9fpy62MaV+tRvb5s/JTG1fpUj2f6
MxpX61W9P9zuOY2r9aser2U8jav1rN7/fSbH1fpWfz/uCTSu1rt6f3dtIo2r
9a/+foe+oHG1Htb7t7WTaFytj/V+7Vc5rtbLen/2ajKNq/Wz3o89mkLjaj2t
91/npdK4Wl/r/dYuL2lcrbf1/mqJNBpX62+9n5osx9V6XO+f+qXTuFqf19P8
35xB42q93k/bHWMkz9aOh4ZZTO87Zj9eb8/9eZAY9TwY9TwY9TwY9TwY9TwY
9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY
9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY9TwY
9TwY9TwY+dCcpV/Id+bj0i/kMzDyFxj5Coz8BEY+Mt+e9Av5xjwe6RfyCRj5
A4x8AUZ+ACMfgDH/gzHfgzG/gzGfgzF/gzFfgzE/gzEfgzH/gjHfgjG/gjGf
gjF/gjFfgjE/gjEfgjH/gTHfgTG/gTGfgdXrU1Hfo38KRv8UjP4pGP1TMPqn
YPRPweifgtE/BaN/Ckb/FIz+KRj9UzD6pxS/6J+C0T+l+EX/FIz+KcUv+qdg
9E8pftE/BaN/SvGL/ikY/VOKX/RPweifUnyif0qvL/qntH3RP6Xni/4pGP1T
MPqnYPRPweifgtE/pfWf6J/S+l/0T2k9LPqnYPiG+r6r9vdKrg/DtfVOD8n6
6Ztjcr0Yqq1/Psn1oV4nD5AcrK2Hzsn1Ygft8i4LyUHa+miYXC+20xawF+X6
MEA7Lv6Q3Eb7+sc4uV40aet9H7k+bBWZvYCzkuyrrf+nyPXiLO19r5TrxZna
+qqhXC/O0M5HPZXrxenaemu7XC9O0843MblenKqvr+V6cYq+npbrxcn6+lmu
F2309bJcL07S18dyvThRXw/L9eIEff0r14sh+npXrhe5vr6V60V/fT0r14t+
+vpVrhe99PWqXC966OtTuV4cr69H5XpxtL7+lOvFofp6U64XT+vrS7lePKSv
J+V6EX5hfQjGehCM9R8Y6z2zx8+R+RHrOTDWb2Cs18BYn4GxHgNj/QXGesss
nuEyP2I9Bcb6CYz1EhjrI7N8t1XmR6x/zPLrdJkfsb4xy7eWMh9i/WKWf91l
fsT6xCwfD5X5EesPMNYbYKwvwFhPgLF+AGO9AMb6AIz1ABj1Pxj1Phj1fRs9
P8nzPebsRIx6y3zcRIx6C4x6C4x6C4x6C4x6y3x7scSot8zjiSNGvQVGvQVG
vQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVGvQVG
vQVGvQVGvQVGvQVGvQVGvQVGvQWm31/9z/VqgywaR/0F1i8nqXWQ8iPyJ/Ij
GPkRjPwIRn6kfrnIj2DkR+qXi/wIRn6kfrnIj2DkR+qXi/wIRn6kfrnIj2Dk
RzDyIxj5kc5XiPxI/XSRH+l8hciPYORHOl8h8iP130V+pPMVIj9SP17kRzpf
IfIjnY8Q+ZHOP4j8SOcTRH6k8wciP4KRH8HIj3T+Q+RHMPIjGPkRjPwIRn4E
V9H7qwv/q5+vX0/1ztH8fJq97Jc20A7PsrI/qs9vBtkP1WePw7L/qR/eSbLf
qee/BrK/WUPb/mLZz9Sv0x8n+5f64ZhL9iv1w+lsnPnr95b9SP366SzZfzyi
PWG37Dc+046vlrK/qP++zyPZT9R/r8dO9g/139+pJvuF77TDc5LsD5bQ5qcW
sh/YQpuf8sn+3jDt/TyQvFT7vM/L/t6/2vv7R/bzTNr8NED27x5q77eK7Mfp
17u+k1xBe/+Rsh+n5+sDsv82Tvs8pst+m56v28n+2nHt87GU/TI9Xz+TnKB9
Xu6yX6bn63WyP1Zd+/yGyf6Xnq9rZ7GzM7IPqDfR/+WXXm99zWI/9Qu/F8rr
V7T1UV/5eO3bzCNPy/msuLZe+S7nr93a/GiQXFTbDxfk/LVTWy/mkVxYW9+M
kfPZdm296CXnL0ttefWn5K1a3rKR81mh7OnyW4CcvzZry73ikgtol4PNlPOZ
vl7cJOezotp+ai3nM329mCrns8La+uxfOZ/p68Wecj6z1N7/Zzmf6etFRzmf
FdLe3wg5n+nrxfxyfVlAi9/XwzzeqXI+y6dVDaXlfGapxbNTzmcFtNd/Leez
fNrrDZTzWW5t+65yPsupba+wXF/+OGtX4NxcOZ99+pr9+GNyPnujjY+X81nm
4Oz8+JdcX8Zql31yOZ9Fatf7Mbm+XKpd/7ZCri89s7QTkpWIw/Tzu/+xntQ8
7SM5RD/fK9eX+teBvsn1JNfP/0ruoOVDZ7me1HXOJbmdlg9HyfWlv35++D/W
k1o+LCjZTz9fLNeXrbTj2F+uJ33088eSW2Snf4cZcn05Qz+fLNeXej5sKdeX
0/QySK4v9Xy4T64vp+jnm+X6Us+HH+T60kY//yzXl3o+HCrXl/r50rzyejBr
7Xy+t1xfWuvnp+X6cly77A+gpFxfBmj5cItcX/pq+ytdri+99fPXcn3prn2e
znJ96aqfz5bXg53X5tEZcn05WD+/LdeXfbV4hsr1ZU/9fLe8Hmy99nsQznJ9
aauf/5bXgyXk1go4eT0Y6jW9PF0o1wd6uThKrg/0/BMo1wf690f6yfWB7usc
uT7QL9/1kesDvXz9KdcH+uXQ3eX6YLVWL+64as4z5fpAX48WlusDvTz3jDOP
f7hcH+jv75tcH1zRyttjcn1gqR3nXeX6YIDWH0+R6wO9/t8q1wd6vd9Yrg82
a9ufLtcHF7TPuZ1cH1zVXs9SrgeytDfwTLKV9vrucn3QWKtP1sr1wUAtnqFy
faB/H6WWXA/s1uL7KtlL219X5frgthbvUbk++Kjl/3lyfVBKm4e7yPVBa+0D
LCHXAyO0/J8sebm2f/3k+uCQlv83y/VBoLaD/2O9+VjL//9xPunX94e6yPWt
9vk8kv0NffmwXfY39K9n3JP9DX1/TzWZs63sb+jLoXDZ3yikfb6Fooi3a08w
yP6GnncPy/6G7sd82d/Q/Sgp+xu6HybZ39D9GCf7G7ofue6a99vPyv6Gvt7r
Lfsb+vouS/Y39PXcbtnf0NdvLWV/Qz+fM0v2N3Q/mOxv6Odzish+hu5HomT9
fI637G/ofmyU/Q39fM5I2d/Q/agn+xn6+ZwfknU/YmV/Q79e/oTsb+h+LJT9
jQDNj79lf0P3o7TsZ/zQ5ouXkitp7z9A9jc6ahPSNtnfsNbqw/GZLMl6kPv8
mRHU36heaJzxZtUQ4hyTGh1ftcKf+EP540+LpHkSo59f4HaDDoP6nGSVXSeV
XbM+nPoj6MdXb+9XoMQaB+rHJ7/f2+tl5Fn2tKmr065WwfR49NdnlMjb9fbe
0+xW3+sxxlV+NI5++b7gKaUfjD5J/fLKC30HdtnoyP59x/I8b+mufH9zEd+f
1zqzwaczzPFEo+Sim2xpHOc7jt+rXmDCGHc2rU7aqgozo6mfg/MT7q+zGt6x
dqbzE+1dGmwIrn6Rzk8sb9P03rlmbvL3M0aUPP39ojurWcwuIKZwKG0P5x9u
1vi5bvn383T+wSNl6ZrBnVzp/EPnXB/j7Nu5s9iIhmUds/zp+TjfMNl0emuF
e850viHcunTikIEX6XzD/YbFhzt1dKPzDT8n/GhlHeHObq++ccKvgSdtD+cX
nGtsXnLe6TydX/hUZETbOb4udH6hbsWbNfqnXqTzCxnt5lUtsNmVzi/cyrjW
+EIpNzq/MDTgVJOzDm50fqFtUo54m7tudH7haf72Lw83cJP3AymZ67nLKlc6
vxB1eaBrjZCLdH7BtuPFgI8bXOj8wqsk260bc1+g81N1KnX9GP7Wg85P9a5k
P8CvjhednxrZmo8+0c2bzk8Ntprib9PYh85POR4q/fxSIV/yeekSPqqRtR9r
3OZ7fHf7cOrn4XxTn7ifsQfWeZLfFVLKrShY0pv8Dpm/7N3JdT60v6csKxjl
5+VL+3v/ifLpg9z8WKm/dtz1OBhI28f5pi1PzzncqehJx8O+TuujVu7xov2/
2v/wzOjr3rT/X99cknv8Ix/a/y87DkjYluBL+393z/Yt3if5yftbLZvayKa8
J+u1s2irZRs86fVxPHnM6vamUjkv8iPT6e9JW756kR/O29yWdzrnTX4M39N3
VVhxH/JjdkjzpTNX+pAfr7eWuOLxwof8cGqUdKRWB1/5+ygV726ZOcmX/Bhb
NGVg2Dsf8uNp1YcRJVb7kB91u/VxqVPYR/rRZMHgV87e5Ee/4It9Mxt70/Ff
qNCOkumenizrytKooEby/DeO7w7Bj3vf/ddEx/fXc/nv2/n60/H989WtUpnO
AXR8t04pUOXNrEDyofeRdPdbe4LIh57j7lSr78bJh+UXy43uPTKYTXtd9uf7
IcH0+jjezxRqVPx5qtz/oYPduzSvGUD73724zZBqvQNp/2+w/rotbnAQ7f+c
Nl+b3ajJaf+n3yw+ccVrTvv/3uzVw3aMDab9732wbEz/ByYWH9jy1pHHnhQP
9v/sZ+Uq2Qf60/6/WCL394/zAmj/Pz1x7OTtrwHy9+o7xd7sPSyQ9v/O5PK1
7rsG0v7vv6DfpS35gmj/W8RWeVRsaBDt/70Vr+aZvTCI9v9elmdCo3JBtP8L
tfEed4gH0v4vZOxRer91IO3/gVEbitcpGEj7/2XLfMsHZO8v7P83LYrlnL/Q
n+b7IaX/uFh8ezDNH5mOHZ/vLxhC88elNt8Hj7QLofmj6OX616wyQ2j+ePbT
kPVySCjNH2PLNcnl6xxK88e8y/luFaoSRn6ldy12b8i2MFbh+fGAhErh1P/H
/FBsmJvno4Rgmh9uWPbbuG5gCPnxyS1o5Oi4EPIjctaey6+Hh5Ifna3XOk+L
CyU/SlQo9KF01zDyY4vdxFK5zoexyteG7Nq91YdeHz7sb11ixaYrcv9XCbA4
5dY8hPb/p6gI/zW7Qmj/H0yYOaLmzRDa/4G7F98I/RZC+3+376y5o2qE0v6f
7Lxi4Jd+obT/D+/q+of/olDa/xYVPSf8uS6U9v/RB4eDbUeH0v63W9O3/Mcm
obT/v95de3FBvlDa//vcotwWPA6h/V9g0dTz0RdDaP/b5D2R2LtyCB3fheOO
rhpvGU7Hd1LtfHmn7gqn4/vy3qjg3n9E0PHdKPDMbX+HCDq+TS6t2uSrEUnH
91CLjtX7nIhkdZZ6l3G5wel8Do7HjJ+1myysHE7H41rP3XFfDoTT599m5Kc8
Mfki6PO3Hva254F5EfT5r9m69XDBWxH0+S+4vHeLb/lI+vw3WA/Kce7vSPr8
l1VL7LhgTqS8X0SRxYVr7I+kz/9m/rV7LwdG0ucf9PLwih7XIunzz932R3C5
U5H0+ft+XxVXclkkff4/buWr0bRvJH3+JX/EJU77K5I+/7u18per8zKCPv+1
3R7eWzE0gnzfNSOhWZ3qUeR70sVp1cvGRZHvZ8saOg4+GU2+Xz1hKHp/ZIy8
H3KSq1Xy9xiW/3ajyd+d/eh8Gfx3mDTN98n1S+T/xT8/+HUPvkz749jBCvU9
Llxhk3t0v7MxpxedX8P+6dt33uSlm6/S/lm5vGSDoD+v0/6ZtSos6HWHWOa6
fk5s/qLuyu9VLOKFO8e5tOlzjT1ZGhzwx8+1NG5XtXo133FudL4On5fdlPdv
u0yPZZ72DZdFLtlC421/Ni3bqbE7nc/D4ydbm2Y+qRLHju1fOa3irDU0jnif
mQz/LKl8mzXs+ajJ10QPOv+H+I+1SJ849Wkcxes3dIxpUL/b9P4jrw2e86jV
HTZ+7Y6hXeK96HwhPs8ibT3rxy28x1YPqtX99FUfOn+Iz3cUPzWu26C78n4q
C3k/X9f7bJB9mfxv1/rR+UWq908njBiV8yFb8n35nzvL+tP5Ruz/PJWq14mz
ecRy1s892eZ4AJ1/hC+DClpWr3ftMeudYpXOsn3C+Uj4NnfC9PCijZ+xlzbj
jLafOZ2fhH+5qzqv3t7gKR3PlR09i5cMfMb8Xl3baMgfQucvMR8Yi4+oWdzp
OevafYpdyyGhdD4T88OBmqWbJ2SvLzHf3Jrc9eaWE/GsytZQ29i24XS+E/NP
xBjLP6+PjKf5Z+z4dfmNxeLp+D9y932egRfi2bL8BVcPzOVOz8d80KrZgkE1
7eJpPlgbW6lurcXxNB/sOFq32tgZ8TQf1L6fo5LruHiaDxZW9XW0GBxP88Ht
r1sPGybF03xw//CWH3kux7MmoSuaRm0+Il9f5MNDB21XvdmUwIzVA4zzH0bS
+Vvkx/YsYe3RkQmUH3MdK3V9d+UEyo8R04sf+pYST/78fD5/29vVCSzizZoc
ba19aHv0+373h0aOHZxAvndad73Dleztwe8FdrENCmTG0/z1Jdefu2rVTqD5
q9nP1Ob/bktgU48M2WgatZu2j/pg6ob2FSY0TqT6oLBn8/od8idSffB534yJ
g54lUH1QKCC3Ww/fBPL1fOlzGbPGJLJ/wpxeOtgF0Plr+G4Xcti3d61EOj6O
XXGb9fN1Ah1f3Twcq600JdD8etlqeOu3HxPo+G+cmbTUfUEiu7asSLvmbdbS
9un7w0+6Lj7b9wWLebZuweR6IXS+HH632jLUN0+lF3R81N328HbuV4l0PJz2
X+50MjiRjq+Gpb++Td+RSPNF3Sv2j2r3fEH7z9tr/5On5ZJY1pzDm6yy10s4
Hw//bYIe5y/77gX5bum0ffugKy/I94rMz/PsqRd0fN1yPOZ8bdkL+f3tfZsu
jHyXxOolD/w7wjqazu9jf4Sf3nnN7kYS7Y8nB0p08XFJIj9tb7UounBzEvnY
YW34qelTk8jH5T1f7h/WOYn2x+O9B0e2y95+91SfZZve+tLrYf+UK176y6J7
SeRr0Wavm1jwJPJzct3ebWc5J5Gf1mWir0fuSyI/r+xqce7Y+iQ6vuu9C+59
akmSvB/n4aiiS7MZx/OkXSHbf+5IouM5+aXDC+sLSXQ8j/14IPHMzSR28/lf
qwctP03xwudRQSG3e5RKpv390T+6yAyXZHa93LeIySyYro/A/n+95WnXWvbJ
tP/tHCc9rTolmfwO+tajwtAuyeTzwEIDKk+qkEzziZfD92F/5E6m+aTxyYwN
aUOztz8tsP/Ihcfo9eDD0FFpa3svTWHbzuUcMfZMGF2fAT+Wnxmdd+6gFPKj
zo/7+8vWTSHf+3YplhiUI4X8LlM7bcPIO8k0f9WqX/qnVf4U5lmu6s4Lkxxo
+/DDOHD380KGVDYubt+0IgGRdD0IfHn7xbN1Rt1U8sX28tNrD36mkP+hc4KS
NtxIId9DchprRx1LYRcsX5/91PUgbQ/7o2Gn7vXLtH3Jdlf+Wf5+Xnl9L3x/
cdOyx4VcL8nvY551S7WLSSW/Mw7a+l7ZmMruXO1h+8+bg/R8vN9vNy589i2S
xsK/drleeutRun4Fr994blCIiaXR631utudtjwVp9HrFiqeGzziQRq+X2sLO
Y7NXGn1emYv2bSl8PY3lMHRubekcQdfDYP8PH1i3WM6raWzp9mXjCvQ+Q+Pw
obb7oYSvG9Po83Xed2POw+xxfL7hp5oNO/EhjT7fGj/Kvforj7zf/bsvN23f
Wcn73deqYru+Zll5v/tUd8+Hr6rK+913ff/5+KeG8n73P/6ZPcbUVt7v/mNE
etEl3eT97mMeNk8600/e7z7tET/mOEze7/7fBu3P24+V97uv5nUxefckeb/7
NgN2fds4Xd7v/sL8TUWD5sr73c8xjhzwbbG83/2JBn2eVlws73df5PGYkv/M
kfe7P/OPR/6X0+T97nc3OHIr92R5v/u5rZz7fLOW97ufv+N1+sdB8n73FgMr
TXVpIu937zw2zsq1mLzf/YEPPv0uvU+j+T0msd/JGgPTWZW0XoWell7zX/e7
PzSxXx3v1RnsWL1Ry+7UO/Zf9ye/XrdtvypD5P3Ji4Ra+nSvKe9P3qdFP7b1
azrls4dOkyomRsn73T84cvDe1BPyfvcj4sverHha3u/+8fqSKSFn5f3uv8Q0
auLjKO93n9aqQW03R3m/+0v9nk9xdZT3ux/xxNdp1wV5v/tGK78WsXaT97t3
69lv8ltPeb/7jbViNj30lve7t7lTIWOfr7zf/aWTOXxqBcr73edvuahsuVB5
v/vjfm4OOaPk/e677/rq2PqyvN+985esu+2uy/vdn987sMk/cfJ+98fLt2vy
7K683325LEvrno/k/e6bbJlVqvBzeb/7MVv7fSqdJO93/6PLmaRyKfJ+9w+a
5c/pnizvd199VKfx3ZLl/e5b7Kp6PTpZ3u++b0zt/Ymp8n73n/iMIgOS5P3u
H12xn+F2X97v/k5v4/tZV+T97p0uz1w9Nlje737nc79zTX3k/e7Hj5vW49ZZ
eT96v851c/tnyvvRb+Dbr7lkyPvR593bN+lMurwf/fu85RqfTJP3o/crOG1/
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
k1dcM77++Ee3WeXa3u2dPH143ou5HLeuu8fKTvzcY2iWN++3pfeI8vfusnZZ
n96+qOHNn+dMWbWtwV3W6lZS2pmmfvz8n9sH5c26z5rVi7kwdLEvn5tnx9gd
Le+zIA//wODTJh5dZ+v2g1MfssN23jNjMvz4nB0NFyxyesA25Tq4oHvhAL51
+cqLZ9Iescc3lnd+PdKfT6zUqW6rOo9Y0JaIgdNsA/m2rkUeu858wqYH1Qpd
FB7AW9R7bbnB5TF7OCK161kvzpdMy1fGr8czVjhm3Pug99nrqQv3Brd5/JT9
M3fHFYfs+vqv0JYRvRo8ZVPut0kOOhvMq1zx7Hoh/Rk7NzHhD86CecOihb8e
dXjGHo7utq9UZghvdn3MlReXnrPcA9P7uv8Twp8V/tqt1NrnrLiFi9c6yxCe
lrI4oVOH56yz45xK626H8VbVGk+64RbPrjh3qnJxeBh/ufsev748ntXfMX3t
zwehvP+0wdWe/B3P1md1brh+TCj/mfjmwrki8exHjjzfe/Rx42N8Jv+sY4pn
h+52u/6onSv3r1ZvecjOePbz3KZRw8q78M1+vawSbONZaEDwcodDzrz94ilD
Ci+IZ+etI/L2qeDId7+vOtx2ajyrkjC7kuvxM/x7lkOW1Zh4lufBvWb/FDjF
vSLKTO08Mp7t3z2qW//Wx/j+JxXf7PaLZ6tML+KbzIjk/WM/xn3ekcD42ycF
28VH8ONtM1nl6QksqLeT87NREdzOYuywvB0T2OX3GytF3g3n14942ZQtlsBe
Nvi+o9LgcN69V9Elj5Pis+eLtNClm735x7w3ojK3JLAlN77kq2304s17NV/u
YZPAXrwtWKDyNE++Y4PviN4dElj32z1vDxjpwXddfTrCrkQCS6vinHqnrzt/
mTVgJkvL3p6Pa7VVh/bxrzfbT6s6L4Fd3DYxqXmdGB4Q7emxpF0i63++yeYj
h6L5rjtPw8+WT2RHGnctktMqml+LX9Ju7JcEVurUrQ8VVkfxfX+7tZt9L4E1
nTzyjeldJL+Rd+nz8j4JrIxxrHNciD/f0//kwZY2icyyYlXvnF4m/mVUyWL1
2yaypetKVR3t6MdbbqtrObVwIus380t48hFffsO17rmExATWIKxlw557ffik
vm9P3ffNjt/u7mS/mPXZ65uKX46OS2ThA/7JU6JkCPeIuDKxcP8XrN2qJqOW
bgnm35bfL/VH7RdskWPOkZa5gvmedmuWBuV8wWY+G5vs8jaI52z578fmjxJZ
n1Xj9k15HsgNEZOn7fVKZPk2205JvR7AK+2Kr75kWyKLznQ3FcjOtx/6tcx7
vkISG7up/QIeF8YPWPj+aPftBbOf1NXpn7/DuJ11hfvBD16w5d7JZ+v7hfI3
9dnX4X4v2O5i4VsN9UL5gvNlvo7Ynz3uf+jKk2MhfO6fpt7HF7xgHxxz3srb
N5q/sBh0pdD7JJZ3x/d6JQKjeMMhfwdk3ElibYJWNLhZL4r3+XPPiGZ+Sazp
XxObZDhEcs9uCQvyHEpiDfvcvvSxUCT/d9Xq4mm2SWzHwnI/Rq6I4D9CDry1
HpvE8u+/mL9oVjiP3NQ3d6MOSSykXtzeW9nr2T9npdfq+jmJtZzV19Himg8/
8TFj+aHHSWxf8Z7s8glvnnR8bOD2yCR2q9q+QvfnevGj09t98/NIYnMmTbf7
u4MnD/TKs6DH8SR2ocvjRXkLePCSjy8PT9iexO51PzSzz3U3PvLPsBX2q5OY
hTF28c8trvx58PbFGcuSmKmzw9/uBhdeo25Wz1brktiVijN31x/kzFnt8se7
nkpiz5ttrX6r+TneMuLo/GKXk1jvAQ4OtR9H83I/Js7PLJrMGpc0Wv3hmL2+
nxZrXcwjmb06Mvbsv5uC+OANViec9iSzf0uvmd1zWiCv5RJ56vriZNbm8d5T
i3oG8KpJteLPDE9mM59umrOirj8/Oeyf+CGtk9mcs5XiSxY28VUXLB9MKZ3M
1vuNi9wdcYqfzNw8p2yhZHZgyPafVlXC+M1H73fM/yeFpd0vb7tpdyjPnzp/
z9axKaxxi7zbOucJ5Ttqta8wokMKO/godnunpSF85uX6bbaWT2HnStedMjk9
mLd+W6fQoM/JLGHM1zgv62C+ffuQk8dvJbOTR/Oy+xMi+ZU/t0ZGjEhlb2Ia
/N3/TgSPuhxd3qZlKsu5qdCcBr0i+M3tz/OtKp7K3m4/F/GYh/Pcxiv+w7NS
2IoOHf++3iKc+9xsZzocncJcVky7W+pitp8tPiY0P5bCTr3bUWVD94N8UpOq
ds6zU9kCn1WuLu+j+YV5Vx1s271kQbnWXfecE80bdmt5O7nISzYqrOGiRy+j
+Kbo/tVTX6Sy2TlrrPKfGsV3pG9qvs47lTV9Ws/1dGokX9Y7a8TgNalsyI+X
8/I9O8hzNNg+M7HWS/Y6x8F1PTvEcLfKnZpGe7xkP6027Xq84Si321vWOqJo
Ghvn/qXilj8Oc4uooV/CT71kb67GfI4Lj+YXJ+Spcqh3GvO0fNi5amYUdwh/
/OLlujRm90fPZcZaUdy2Y86QV05pLHJE8O62UyL56kLl2PxLaczK23e9NTvN
/5k9OmX4zTT2uPG2RwfbZdf7Tj6Pah9PY9tqdbWYPvs4XxQcYLFlXBoL7doo
rZNjBD9T5nujxy/SWINmhq053oZz9tx23bGPaazbj/PJVVk4tysVuGBq3nTG
R43wHLgtjK/fW6zYhCLprPuzYQufPg7l/hO6hCaUS2fGarcbv8g+vkcG71lo
VTOd9SvTodNJYwhvtGpl8K2m6azl4mn3a8cE8zS2xPooS2dWBZtsGVkmmAcu
rWNt6JnOtu4vvndyXBD3Ljt90P1B6ezI2OAqtxcF8rpuhcp0H5U9fnZgdJ5y
AXzRHb7jq3U6cxp5/nJEsIlPKHN71tCp6Sx/CT9r28l+PKpU24Y+s9MZW9jP
tmohX17t4uXDlRelM4sxE+sc8vPmm3fUc3VcnM5qn/z78fXs43nnki1Hy81P
Z1vqpwc3rePJ37ydX7jRzHQW8v35k/bP3Llb12SH0dnbv3TTs+vofW58+vx5
traT0tmBz3sGfja48vx9dze9MDKdjS7Qfvbm/i7cqUfvwXbd0pl9bY93WfnP
80sDF0Y3rZ3OgtawVUMDHfmyqd6HSlqlM9MLr8BZC85yv9E/W1Z5l8ZqfRvW
6WCH5Txi6rd9k5elsx8fdz1YcuYoP9mo/7lqazPY7ibjRzQYdIiPKnohV5dx
GWzDmqnpNrn28z2+z5uua53Bqjd8deTc8V385NI6ZwNLZjAW/2ihz4UtvKlb
Ifvxr9LZ3vgbWz5OX8sL2o2aYh+Wzsrs3B+XmD2fVBnaZuGsExlsUdtOl12a
RnPLZrceVz2dwQ6025i4YVMUt7OZNibqbAYLtO5V1+pZJH/tWK3aTscMttaY
OLxsq0h+9/vAAouzueAdJ8uj2yN4vx/d8+ZyymCzv1jcnZcYzl27FJiReSGD
XZo7MHZI63DucGL3rgi3DJZectCgtdk+xUZ0tGrvlcGcbC8uLPIilK/+vGzN
T+8MllS6159WbUN5CcekiYv8MljjthYlmm0P4SVfz/3cOiiDnc7zc/5fCcE8
cfJfE7uFZbC6S7vXrNoymB+69PZZs+gMdnZwo6fbS3E+9WlAxIgr2c/vYxGz
OLv+fn0nelBAbAbLe7z72hbTAviVZi9Ht7ydwRbkefLodRF/nlzLVM3rfgbr
P2aS3V6TH39czTOw05MMNv7NBKtpE3z5zi+rJw5IyGCOXbc+iynow3MZP/DJ
yRnMvVfBuFg/L17BcW/3vSkZrIrniiMTp3vykmUdptTL5vJRwZFfynrwMpWP
XQ3OfrxzuHW52dFufOWi1P29UzPY0aAJbY8udeU1rpQMq5TNfn/VuBk32YVn
bfZ+Pzg+g8W6WE3ameHMp6zuvb/unQx2+e3cUs0WO3IfqxlHZsRksLduF0sG
fDzD60y5/T0h+/MxhYQH519yipeLeLTfMvvz9Tk9ps2kQie4/6sCjQ2nMtiA
qRMn8aoxfPzJp3YtsjJZmzurv3+wjeYP+px5djIjk7376u3Cb2fPd4UHxx9K
z2RTeN5c6xpE8Ur9K5Q+kJbJ7CulNum+IZLf7Dm37YGXmWxF6OyAY88iuEVj
nwYPUzLZLa9bfY+2iuAeHtXvXc/mK8s/GEzbw3n5ObUznqVmsvoFm1a6lxTG
Q1wu78jMfv6ymr0cPrUP452CHOI+ZW+/6dk1x/bvDeVLbqzOmJT9+jVSi+0J
TAvhSfPajT6XmclmL/Qd9LxjCHf2Lr+1wZtMtjFyetnMvcE8NdR5/o33mazn
haLVft7m/NSqwbazP2eyKqN9ewfbBfF2yX4nzn3LZDubtrmcVTuQL/ZocfOx
RRZ71qTZhXc3/HnE5FqnrubJYtvj+aaby0z8bsGV928XyGKeJY+9OFvZj1d6
0nFcglUWe9IwZ+aaGB/edVVjv/TiWWz88+trUuZ78yYvgkwWZbLYrQfXl6RV
8OK1H80MKVI+i7k/rdr2rxgP/r33+jO5KmWxXgt627db6M6PrG57K3eVLFZp
TdDKfRXd+IHNOYwrq2exDR/bfMpz8CIvXHXh5tk1stjAhx7xo/+4wIP7je7U
IvvxV4aunllqsRPP77/s9rYK2fHkznN74YuzfPXdH2s8S2exewcud5o3+DSv
GtBgVY/s+F742XRbE3aCu6xtx5tnx/9gS8F7nkOO8eOn9/0V8zOTjXX4w6X7
s0O8ZO5SA2pn7/+KNVLuzai0n895vnNjh/uZrFDh12u3T971f5WdeThVWx/H
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
dfi2
       "], {{{
          EdgeForm[], 
          GrayLevel[0.8], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1: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
DbLY+3hC/OZZ7I08J76N+MfEj2f+zWLP4mnxG2Wxl/GU+A2z2Ct5Uvya/H/F
TxBfzsKGZYT4LAtbmJHiE/F3sY4RX83CdmaU+C2z2EOeIb61+Cnix4mvZGFT
c6/49bPY03lcfNcsbILmie+ZxT78J+J3Ef+Jrr8h/nDNo49oPu2ncO8s7Inm
6HoX8QvEvy5+Z/Hzxb8qfk/xX4qfLX4P8V+If0f87uI/F/+2+N3Efyb+LfHt
1H/ebdD3q8+vI/498c+L3yYLG58XdM+6uj5P11/gHpVjF3TUCnfVPZ/qnjd1
z9q6Z47umY5dGUYB+paPdb2T+HmKvih+B/EfiH9JfO8s7CgWij80C5uET8Uf
lYUtzFfij8zCzmIRuo0s7LveFX9EFvYzX1I/WdhHfSG+VxZ2EJ+LPywLG4fP
xHcW/7GefU38TozL4l8Rv73498XPEr+j+A/Fvyx+nyxsuOaK3y8L2633xG+d
hf3O8+LXE/+s+Gni1xI/TfxE6kH84+Inie+fhV7zW/EnZqET+178uVmsJX8X
fw3tIr6kMelavkX/71T88VnoRZfqnr5Z2G0tEX9sFnZc34gfmIUu8DvxN2cx
XlX17I3iu4qviB8sfgPxDeJP5X+E/K/7z6YPsG4Sf7L481kLiD+TNmV9If6W
LMa/Rj17FfernEXxV4h/Rnyd+L3UD6aqzfdU2FX0nPj9FHYWDRO/s8JF5Viz
X6o8vyrH2v0y+qTSJuue3RTWKc/bdH2IrhfF3yH+bvHTs5j/t9G7LsxCr/OX
rp+fhZ7nT/E3iN+QeU/3lMTfiZ5A1y/JQuf2n/jLstjLqEEGz2KP4B9dn5TF
nLihrk/OYm7cSPzELOSfDcSPzkJOX0v8yCzG81biH8hCZl5b/IgsxuzVxd+d
xfyzqvj7s5C11xQ/KgvZuw1ydBbj/xrij8nCbu5rlaet+CdU/sn8N8U/Kf5R
8bdmMT+uoPvXEf+Urk/hvyn+afGPiT86C5u1xeLb00a6PlX87VnMpyvq2Tuy
mENXYn8mi7m0hfipjIfiNxX/TBbyw1binxL/kvgtxE/JQpbZRPy4LNYm64kf
n8UaYX3xj2Sxfmkv/uty6HuuUBmeZKzW9c11/XHGYfGbib8ri7l7ZfHDs5j7
VhP/BOO8+I7ih2Yxx64ifmwW67924h/OYt2zrvghWczFLauht8UWEP0+MiBr
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
/pLKdmAlMOfTq7E3RTr/XexmOLeOsYD1JOexsr48pBJ+NF6sht3wN37H+b6X
8aNHJXxqzAJPXAkfHC9XQ5/IuZnoF/euhN+QJ/CFWwkfGY+L36cSvlSexM9T
JfxlPC1+/0r4y3i2Gro8fIih29uzEr42prEXVwnfHM9UA2v6SBLroT0q4Ztj
ajUw9iOSwNjj/2JkEtj7AyrhE+S5avh4YC5jTsM3A+M/8wB4oYWWVfHfy/mw
i6qBjwcnX1cKHS262ppS6L/Rg/9XDL3tr05DH4Ne5udi6MeX+T7w2JzDCz6b
fXd8yrEPf5WvFfkWvfdmhX9VQ6fzvfPCzhF7x3+U576V8M/yVDV0n9TTj8x9
lfC/eDX+HirhM+WFatjEY2/DGA0mj3mE+eR0fyt9EJzeIqdd7b6QiLpXwg/L
88qnWyV8Gcyohq09+TH2H1QJnyMzq+HnYrHrFD8aX7uuV6uEn8hrdM/ulfCr
8pj4wyqBK35F/OGVwPq+xjyLXC7+FvFrVcIP4o3V8O1yXxK+YDZBrtL14bq+
diX8KN4kflPx/cTfI37NSvg7vEH8GpXwWzhY/Mbi+4ofJr5NJXwZXo8PYfGH
i79V/OriNxd/XTV80NybhF+VDVmH6PrQavgDuisJ/zg76vrp/LfAKrLeEP+g
+O3Fn8Z/V/x24k8RP1b85uIHiL9X/BbiTxA/SvxmyNPiR1QDR/1wEjjqHXT9
f/zXdX0n8WeIH1cNfPVDSWCkd2Y9oOvjdb2L+LPFTxTfWfxZ4idUw+6DfrdM
8Y1Y26BPwC6D9Yz4IdU4p5xhkfNc+lXCP8571fCJc3cSPm6Oq4Tvnnd1vVcl
8OSvij+2En585lTj/HHkLHyP4AdnWBK+dY7XPffrnnnVOJMd3xn4WcK/z6gk
/P7gu2d4Ej508JdxTxI+fdbVs0fo2dt0/xGVwJm/jm1FJfQib7LOEt9b/O3V
8MUzNAl/Ruvp+pG6fgcykvg+4u8S30H8UeLvFN+7EjqWN8TvWgl/Uo+KP7oS
OPl3xB9VCQz8W+J3q4RfoSni+1QCP/+2+GMqgZ+fLf6PYpyfgK3D9Rrne+qb
V0jDpgQfvNiYfJaFThA/DX9lsTd/UjX20dlPP1n8v1ns1bJn+2cWe/knYo+j
ceMw5bl+Y5z1jhzMOTv4usffNX7v8XWPT2z83tO4+BA9pRp+3fFhgA/5m1S2
Xnq+RRrnIr9UCL/6f2RhTzBQ99+gew6lzXTP1eIPwheL+NpK+N48Tff0F93L
fMEeVyX8ap4ufoVK+Ke9RHzzSvijvbgavvfx3Y0f/ouV5z74uUFnlYUOt6/u
uUrXu+l6Wdd/yUIXfJyu/5rF3hx7dD9loQ89lrFR9++JT5c0fPLjMxzf/pwj
gC9x/PNzXgB+6TlTgLMSwPVz3gHnEYDr59wEzkHABwBnInBWAth8zlngrAQw
+pybwNkKYP05A6JjFj4kOGcB//mcd4BffXz+c8YEfvU5MwL/AJyJwPkInA3B
uQ/43udMCs4C4FwAzqHA9/6KlfDpe2k1znrAfwDnO+C3n3McOOOAsyTw28+Z
EZwfwZkCnDXAOQic3YCff85KwE8FPvw5OwD/Ffjw50wK/P9zzgK+/fFdwfkL
nGeBHwbOsOC8APz5c7YCZ1twfgHnVhyQhf8GzqfgrAp8NnD+xc2q/8PLcS7z
SpXw/XuZyt+iEj6ALxffWAm/xBeJX5SFXv4w8Quz0IkfKv4K5XOA8mmmfL7M
Qo/fU9e/zkJ/ig5+aRb61t7M17r/QN3fgByRhf73KMbJLHzi7MS4of/J+7rv
BIWvZrF/yj7qy1n4ytkZGSMLfzqdxc/Kwg/OjuKXZKH/PaIa/jImJOEvY34W
/lC6VeN/jm0T/3vwCb94/v44Cz8pB1XD5ukn33eZytJVZU507aMsfKwcqHve
z8I3Cr5n8McxPgm/Gx9m4QPlgGr44BiXhA8O/O/g6+RgXf8ii72THtWwX2OM
+Q3ZLgvfPTtQ/ix86+wqvlQJX7hnii9Wwg/uGeKTSvjHPUt8WgmfumfzjSrz
vipzUWVuVgk/u+foelYJ39Hni6+rhN/d/4lvWQlf01eKr1bCN/WFzEfKZ2/l
UwdOrRJ+pq/Q9Qt1fS9dr9X157PYK2fPvFIJv9QXiG+ohF/hc8W/kYUPoN3E
z87Cj8/e4udm4Sdo32r4VML/0X7i52ThS2gf8eVK+Kg+T/w7WfgD2kv8W1n4
CdpD/CqV8HF9lfi3s/ANtKf4S1XO/VTOEjqiLPwN7a7r32axZ3BkNc6SwG/A
l+LXU1vUJoE5R6eKHhbd6BVeT7M2x5cbfuLqrUfJ9SIf6B0PJuEL5cM05n3m
//lpyMPIxe+LH5uEX5f3sM9Iwj8eOhXWcKzbViqFn+kblDZP4Zgk/Lqwdj8i
DRt41nms29pZr4OeBr0OOqdc38Mai7Ua6yz0EBul4YMRv9YPKd6iFP7D1k9j
vYevxq6FWOO/q2ujk/B/xVpvgzR8kLGGY73FGg49Fjqt1tbroMtBt4OOCh3Y
Gl6Dsu5sa/0Qui50RPh8XLkUvh7nKu/7k/AB+FEaMhWyFT4rb07CVyRntNyU
hE9Izn25JQk/gZzvclsSfv9mib8jCV9/nAdzaxK+AZFlHlHYkrbS9duT8A34
VhrrEdYl+KRElkBWeDMNeQa55iXxdybhX/HtNNYsrF0eKMaZpfgH3KUS3zGZ
fpuGDIws/GUaulZ0rgvT0KmiW52dhhyFPPVxGuMD4wTfulsSvi/fSUOmRbZd
kMbYwhizquuMsn6SxvjGOPdFGvpb9LifpqHnRN/5eRq6VnSun6WhI0VXiqyN
r/BziiFfn+c48vj5jtNH6Cv4P99Vz7VJoh47K2wlekD8CqIxoi2KIZNjj/cV
8q3S1xCNLUXd4YORNSdtg29G1pwTXO/UOe2B/0bWk7QZfiBZhyCLUobF1Whj
/D2ynhzvuqAeeAdlZD3AWT+tkWMb47+H3I0Myn8Sf0qsYejT+JxkHU4/Q35H
puT/yZoVObXgfT3alP8qvpWQofmv4heOdTX/0wdL4Rue/ye+LlkvNZbCLhM7
T+RbZFvW0qxHWIuwxn45jbUJ19Cd8L9Df0L/XsVtjA9O/HLilxH/nfjlxBfj
+9WQ/wdUwt8kvjKV3XJ/mfj6xP8ivifxU1lCrirG2csnJqHfRReLvhb9DWb6
6HDwQYgOGNk0932PL3x0QuiD2hdinXeB+wd+Q/Elii89/GXi75Jq26cUvkdV
xOV+RvGtiR8+/GtOK8ZagnUC6/3c3x4ha1f+iwdZP4AvUvyZamhe7ucVP7D4
gMWnKX5L2RJAT4yOmTUMPmLxD4vvQHzE4m8R34T8j7t5bYL/xVzHjO9UfMay
Vn8jjbUMa5rX0lhDsZZiPsYX9cWWA7B7xua5qnj/NOznaX/G6WcVb1Q4MA3b
6UPdL1ekbrLAka6jSvmOeVcTxzzkF/p7GvZe+BDFTyimOPgdxd8obYPPUXyM
skX1QzVsB37PQk/UKw29URv/n/h/cbYDZwFwFgRraf7nrS3TcVYE5zy09v+M
Zxjb9nEe6E3OTkOPMkS0XxJ1hN6C8yQ4R4I+u6/X1Bv4PaQhF3T1Ozr43vz8
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
             "]], 
            PolygonBox[CompressedData["
1:eJxNnGWUHEfStUua6a6e6elqMzMzM7NlW2aWmdmWmdlrZpBllhnXzMzMzJZ5
zcz0Ps/e2vN9P+J03KTOysqKjIyMyCk332WNnQcXRXF9oyh6+X2pUxRf8/sV
NGSgKLaqiuJ8Ms6DfgCv1y2KVqso7ikpD/8y5b8pUmcFy/cXxWF9RdGkzF2U
mQz8K/gS8B7gLWjvXNo6B/qW8jvRxirttGnbh9DerrQ1HPqQ9DPAJ8OfBP0N
Pht8BvzpUA/1TwIfA3809DP5n9H+NTwLf1VsS96x0GHwh0LfkP8G+E/4P6DV
qH8p/Xuf/h3B//9BpU3BB4IHgW8Fn0z54yh7LPQr9d8E/1WkjdWp/xb47yJp
a4A3o/5B1B9M/duo/3on//U7tCr545L/DfnnkL8D+ceR/y/yjoC+p/3jwUcW
SfsBfGInz3YU9FM7fZ2bNo4p0+cTOsmzzo/kT0reL5S5mLzdKbM/+TuStwP0
Lvl3gB+Avx+akf4c3MlY7wJ9QP6h4N2KvIOPwEeDD4E/2DkBvoT236P9Q2n/
d9r/ivzlBhXFstA2tPdlJ/wy0NbgTXkfB/GuD4S+Bm9L/X9Rv4/691L/9E7e
7YmOIe2fCj4B/njfEfi0TvJM+xN8VCd9OQj6EnxMJ+/WPn4Nfhv8T5F3sib/
tzH/fwD/vT/0JXgE+acUmVP/UH5D8vcjb1/oM/K3rDLXnaPfD+RZ56LPR5d5
5u3gjyStH/4+0jaq0rZtfEH5M2n/1CL/UYA3qfLs9uEr8CmdPJtz6nf+fyT4
tCJ1BpE/Ce3/TPsX0f5utH89+beRdys0OfkL0d5nPUXxH+hB8FrgIbS9PPQu
eD6+oQOajAXj/yV580CPU/Yx6C7y567CPwrdCZ6rCv8IdAd4N+qfSb/O5/83
hi/J/xAB8QF0DPnNKvz70FHg8ejvt/T3XMrvSH/Ppb9n0tcRUIP8H8AX0ZcL
oV3BN4HvJO8OaCrwzeC7iqRNDb4FfHeRtGnAc1bp28PQ7eBh4I141g2hT8A3
UP72ImM0BfjGTto2bUrwJeCr4K+ExgRfBr4G/mpobPDWtHdBb2Tcj+CVwTPB
zwi9Bj6P8iOLPFMTvBr5C5K3APSm5Rmjgme/mjEfB/5ryu/Ms+4EbU/+N+Bd
BiVtB/Ca1F+EugtD74BXrdLW/NDr4JXAk8NPBr0EHgqeojdpL4PXqFJ3Ieht
8OpVePv0FvgO8CbIv02hFfjv86EL6eIoqI/8PXhfp/C+xqXPT/K+9gSfCh4P
/BR4QvAP4AvAu4Avpv5l1L0Uqqh/IfgS+Iud3uCLOskzrQO+wPdd5D/7waM6
KWtaG/wK+Nsia8aK4NvA98LfA00HvrUT3jkwLXgBnudT3v0n0P3Ob/DH8B9B
94Anor8/0t9R9Hc4/T2S+vtSdx/oM+bxvzrh94b+A/6T+qfzrv5mfN6CP6uT
tcRvcDDtHdFJ2b2gTym/LO/0B9o9hTpjwx/eSd6e0CfkT8z//8T/X8j/70q5
JSjzDr9bUX4s+AOdD5TdCRpN+YM6kbWmvQ/+D3gi5saE0Kb8/wGdlFVmv0f+
YZ381x7Qx+AFq3z7jskDlF+U/ziD/x6H/xsMPzn9+Y3+XEranvTjM+pPPCj/
sRnlPwdPMihpm4PP6eRbdU3tBa9L+8OYS+tDH7regzfoTdpH4Csofy1l/w2N
C16nStn1oPfB61f5Nq3zMfjflL+ZsjdBk4Av76Su3+A4rr+dfIt+o2OBr+tE
1t0CTeb3yfMczvOUPM/dPM+V5F9XpA/jkX9tJ2X9j0nBX4AnHZRn3AI8f5W5
45y5Dzw+7X1He+fR3k60dxXlb6Du9dAE5F8NvrFI2kTgIdSfhGeZGHoefE0n
z2KZicErVvlWJ4VeBK9QhbfOC+BXKf9dkTm/kvKV/LGZe2NBg8h7h77MSZ+O
oi8H0acD4c8mbTL4l8qs9R3ojlbW/P3hR5I/CfgF8AHgs8CTgl8Eb88cGJt5
shd4Q/hjyb9anQE8Wn0D/G/wfOD3weeAnwFvDf7OPoDPAU8Ofhl8Nvgp8Bbg
b8GjwK+B9wT/XCZvBnWeMmVcKweg21tZM2eBb0I3gg8DHwx/LnWmAL8CftX1
mbE4ENrab5X8M8ifkPxnyX+tSt5B0Dbkv+J620idrcD7Uf5Myk9M+ecpfxb4
CfCm4G/AU4P/Al8J3he8ZLdep1r5PmcmvwHdAD6U9L3hT6f8BOBnwFOC/wBf
Dt4bPA34b/BV4P3Ae4FPA48Pfhr8svpEI33c0m8dWod3vzb0NO9lT/AW8JtD
r4Jfoe6sznHq7kYb+5C/HXnbQm+Rvyt4Q/gNoOfBO4AXh18Meth1mrov0cYu
1P2xDO+YO9amnQf/Amk7tiLHruuLzFRWLqiOQXsbFfmPF2jvob48o8+2bit1
HSPHxjYeAU8L3h88DHwu/HOkbQf/fZm5MRtpR5SZIxf05xl9tp9I253/24z/
2hR6mf/bu5Nn3QZ6E/wYZaejzgHqVq28y+nVycu805H9KWPe16Tt0clY2uYr
zvtO2toaegN8Zn/6bF+/ovyI/jyjz/YleOdO3s1a0FPtPMtMlDmkzDP5bcwI
PrjMNzKc8usWeafPUP4l3ve+jbzzLch7EbxPI2mbg18A791I2mbqqrR1Pm1O
RVuvlfmvXuj6Vv7zMPgLyJ8a/LrrL/w4pG0PP71l4M8jbUr4V0nbl/Ynou0J
oZbfTxV+AvdA4EfBO8LvBK3j9wKeuJE6fZ3Ihgloc+cyMmLvKnXHh5rurci7
kjJzkPee74/8cRqRYYM7GZse6LpWxuhw+FHOIfAb4Lesq86s7HIPSP1xG2mj
p5N3O0iZ1Mo7/p78FVnLyCperyJbBkPXtiJjHqvyLDtD61Jof+VzI8/Ur65D
2Tf4z30o/4tzkPzxGvnPXvIPUD43Uqft3ovyFznnKP9Wmbqzu0cp08YR8Bc6
5+HfJO3xKv+9C7Qe9Z+owg+H1gc/WYXfFRrWydi55rjWOIZHw1/uNw//rvKj
yljbxwblnwXvAb8ntDH4efBejcyhTd0b9mdOOBfeLtOWOrgyzTYv7cse073l
TMo8+BF+8/DPkXZUf8qYp54yFfhP8BXKnjJrgzqgup9rxHNV+mIfNnGt7cse
073lUuTfT/7WymZotU5kwz+UuboVGeG3XEDXtPJNP0z57Sm7A7QW5Z+qMla7
QRuAH6mS55xdG/x0lbzdoQ3du1b5r22h1cEPVuG3g9Zw7wDe3G8RGgp+qEqe
/7mmew3wZo2UWQl8H3irRp5hVXXPKnW3hFZWN63CW2YV96r9GQOf/WPtA+Db
wMuCPwGfCL4JvDj4I/Df1FmVvdIq0MGs/w/4ThmS56C5wcNpv+m7h/4G7079
k/3mlX3Uv7+Tss9Cc5F/Xyf8M9Cc4Cko/zvlL6P8XpT/mPwWuk8JbUj+9uoW
5Ld9V+RPzpo3iN+3+b/f1K3VBShzPGknUOb2TmwD90EzUP9BZViRPs8Dfhj8
EvyL0HzgJWmjH12nD3oCfK8yh7xHoNnA93TCPwzNCl6iStkW9PhA1ooWdHMr
a8bPlH+fvo+G9iJ/SvUZjTnIhL+oe3cnbT0EzUL+L+APBqXOPuCHOumbfZ4X
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
nezUydnG9JR/op210T7aN9dIbXra9pTpD8H/TN5G7h/I+5Ay3/hs2gPcg6pT
wq+qTQL8ijob/BrQFeDXwT/Cb6CO6N4C/AP8MOh69wLgr+DXgq4Cvwn+Dn49
6Frwu34PznV1VPdO4J+ca9CN7kXAX9p36EptP+qU8KtDl7sXUieEXwW6xGcD
f+K3CF0Mfgn8MfxQ6CLwi+CP4FeCLlSXUqf124ZGgZ9XR/XbhS4DvwpeUZ8F
fl9tZg+2Ovhbft9pZs++Jvh7ft9rRof8HBm8D7rNGp6xuH/3zAF+uDo9fIu0
99BtRkPHgv+EHvHsG/oL/juoj7YugDan7DfgM8jbBdoM/At4NPyd0HbaVqAH
4NuU/0fdCrqTtu+qz389D5a/uz4fnpT5sQaybxboePdm4Dm1tUHHgX9yj9Gb
/9xG2x20EmvLUNdU99PQNj3RUa6E/wfqpe679rHKeeD9nn3V518d5t81jOcs
jM3vzlHG6zJt1uCtm8kzTd4y28A3yf+hGRvqduAW+KdmbK7bg/vAPzdjw1Tn
V/ffErwJ/IC2LdqckbTfmjlfuq8nffrf+eS9PUnzvGle14CepHleuQPt99PG
L83YFHcEt8G/NmOD9HzPZ3uwPt/flPx/nKfN2PAuHohuqU6hbtGBpoOfXp2O
vH5wD3wvdDy4XYVvOKbg89V54YdAE7q3gBaDXxw6ZyAkvzV07kB0RHXFW6Fb
4F9R54efkvfxKvwbPjP8GNAqtPWwNg/PtimzMPgp8Ljgb8BLOTbu8XsyJo7N
e+CpejOHR8N/AK0LPye0NvkngGfsyTP5bNNAp8D/wZz4w70WtGhPnuFs/wu8
MPwi0EjwWM4Z+AWhM8C3DWRs1YnVjbvamHvyH6eSV1UZS9NOAV83EF1PHV1d
/fSB6GbzQ2NWGUPHcgV1bPJOHshc9p34bsaBFupJn84kb+wqfTFtxEDasC37
eBp4oiptragOCp64Cu83Mgo8XpVn85nPAk/G3LlHmc/caCNTNlOHJu2rZs7E
tgAPBn/TzBmh+6N3qfteT/aX7jflR/dkf7g7ZRdtRzZvSnvTao8lb0foavL3
IH+xdtaqzer9pXXf78l+1v2t/Ac9se9p75P3nWsf3I/6y7SzFmyjjV1bajuy
fSvPCLSltrOWbQs+QN2lnbVsuzJzyrnlM7i/m16bSE/m9L+1f6gLtyPbt9b+
ry22nbVgc/Vl8BLtrAVblNl7/wA/upk9+HrgX5TjzdicNgD/7jrQjM/EEPCn
/L7cjI/XMPBvrgvN2GzXdc1T7jdjM1wH/BO/HzSzp10b/CO/7zez55y6yrem
zFP2TVdlrH2ma5xrlP/TdaOZM8bl3f/w+1IzPmoruL/i95VmbH5783xLtrM2
bqk9EH4QaV83c2a8IfgP191mfD7GJO965s8C8H/7DOCbwEu2Yie+UV2aOruR
txhpu8NfT5mF4IeTtif4ZscUvEczdU2Ttw3r3uicaqWNsfvSpm3ppHdDf9q0
rYXtM3wPZb5t5gx8W3AJ/rGZM7OtwQ3w982cIW8F7gV/18yZ9Sbgv9UjmjlD
3sW9IPmz2ZbvsC86u7r6YP5/rL70wf/+pxl7y3eM/fc9sY94vv8L/K898cfR
P0f+t57443je/3NPyrxY2yN/hP+pJ/4C+g/IW+aF2n7zQ0/KaK/Uv8e2lKnK
Vm0c2jp2pC+bwvdDc4H/VJ+GH65tgD7P6VrlnIK/jv7PC/6rGfvTtz15hqdr
e4/P4n9qL1IGK4sto33qYNp7nDY2pv7RzcgS0+SVKZOTdy9pm8MPMF795C1N
2hxldNwWeEnHt4xO6pmBZwc7UP9z5TP5q/n+y+y5xgOvqr2vzB5Ynxd9X7Q5
rwK/Js84RZn1e9xu5OnK9HV3aNIqtt2xoHtbsfEqjzcm7whoqiq2krGh+1qx
IWi7m0sbYpl1XFvSfNoAy4zzBPRndWVaGRvI5dpEaGurev1bhz4sXsZ+MLG2
CcqvQvmFy+xxK/Dy4HnK7Gk64OXAc4O3dA8BHgKet8weYkzwitqYy+jY+moM
1X5aZp88AF4WPJeyXJkOXsb3XeYdjQVeSRt3mT3vuvRpqTL2j0ngJ1afVwaU
sbl4RuRZ0WXQGOp+5C9F/uxl9njjgFf2ey6zx50IvKbfcxkbyxjgFcDzldlT
/elc06ZaZg4227GRaRtzj6guvQt4wzI6tbr8zu6Hyuj06h+7uBa7xlbZC+3q
/CuzJ1KXHw7eqIxOf5M6CGVPqPVBdXllurJcnd69gTJPWeceYRfKHDAoPof6
Hqrru8a4tqjzOxfUGdUVnRPqXlNof2hFB1M335G09cvo6Opbh2iLgWbVlkrZ
Jciftcweyr3MbuBNyuxp7qb82+pKtb40mPILkz9DGRuN+sxM5K0GjaGuRv4i
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
zvj0hzGe71T6ckoj8X7G/8mf3Eg8nvGcp8Of1kh8qvGq8tYx/k//ML/lXWv/
F/157NvGtb+M8X22dVIj8X/6M3l26zPrD+QZm2dtq/bEv2eibs4xvCOlAz9+
N+cWO4MHupHRyup1vLNjIPd5uJcZUt/f4X0e8q5xrnWuOa49rknGE7gmuTbd
WcevGc8mf1cdn6a/kX1ZpSf+RX+DB/fmzPBj+Dvr+eD8WrET+bVxPT+UBweB
J2/EJ77Tib+SbXlGrv+XZ+CehTsn9B83HuFS+Et6Ep9g/OSJ1D2hkXhNfew9
J/e83PtLbqgSu2y88pKdxAt4lukZrGexxkMeR96xjcRHGi8pf0wj8ZbXV6mr
jF+iE/8l351zQn+mm6rMzYOhpTrxf3fuHtoT/3L9zeU9c9Vf3njNoyl7VD0e
jo+8MtL7TYz39L8t8794zuMb6aPxmsan+qymGd9pvIR3yagzGg9hvMfZ5J3V
SHypZ7ye9Tpmxm8Y3+HYXdyT+A3jfUdQ9oxG4n+NP3XuOabGoxofbJ5z2vhk
4z+s6xmr8R3GB5/ZSBvGCxsffj78eY3E9xr/e04jfTL+xPjbcxtJ+188sGVN
Mx7X+NmRjbRpvLHx565ltmm8ufGzPptljK813k3d1Zi1TQYSL2o8jzqt8Yze
f+He4fgi91uoP6zi2DWiTyiPV24kbdFavg1tJE35rP5h2dUaWd+dD6s34hO6
ZL3+m7d6PT9cL+ZWVtbrwwrdnGNcyPe4YjfycqVG/kP56ZnDbe5L+nMW4ZnL
l5Tfpj9nMfoE6hvoGu1arc+qvqvGYNqee1T3qsZLexfELfX65PqzbL0eLuR/
1fJdeS+/SC3/XU8WdSzq9cX1zb7P28h66Po0xLlZy2vXpxUbeQblvfvzlxqJ
t1+6G33G/3YNXK6W99a1juvZzfV6ah/Vb5bqxg7uHt/6fk+utcNqef9JlbXB
eLAh3fjc6ns7AE3USczFdOifj/QnvsL7WubtjQ+n9yl9WiWuZq66vPH6ns19
05v4ee+Dmac3dbzfxftf5oKfu74vxvtj5Oep74vRh1Nfzrnq+2G8b2tN+LV6
c1+W9jfftedX83dzh4132RjLM3U3Ps76OlvH+7lurCI7jBEyVsg9sXtjz7sW
BC/QTayt9jyx/gaz8rxP9yfWx/HxXgB9VF0/9VHWV3nWRvQl40+O8vy1L7Er
jpFjZZp5+mTtCn9NX3y1XL8XbGTOzFjrX7Y1WyP62MLdxJE6xxeB73Zzb5s+
2Ppiq79ZdvZG9K3vwFc2c8ZmefWlORrxoZ6y1s8sa5r6k3PeuX9EX+7PU99b
oJE+zVDrV/PBz9+I/ub9Dz/y7D/15r4E74/4oTdp3gfh/RHf9ybN+yS8X8Gy
P/fmvgTvT5D/pTfxWNqnfjfWtTf6v+vTr8aWQlUn8aW+iwfreNODq+RZR3uW
Pub6mt9Vx68a72XbtuH65n1+Szezp3JvZfyqbT1Ux7+6//C//+zNfsP9yWCe
taeR/Y33Pzh3v+3N/QrTd+PnacyhsYfG32vb1eddQ4j3X3zXmzEo6/3LX9p+
e7Mfcn8k/09v9kvun+SLRvZn7q/8b33W3S95v4P/bZvep+H+yL7apvsh93fW
HdTIfs79nbzP4P5Kf5ou7/ba/vgC6oO+kzb+vvim+434regDNk03+uvSyopG
9Ef106UaSZur1neXbCRtzlrftOyyjeir6seLK5sb2V+4X1gOfvlG9HH1W8ua
Nm+9H1D2OcfU392fWNf/mKPWn5WdysxZav3etpSR89f6urLU/1Qf12dQ30HP
D+fmedrd3EuizNSeqY1XW68+gpPB/6dKnKN7Ru8HGtqNLqMP4F7dnM/+Dj93
X3wLjZ927jzcm/hsz5sKxnPBvvhSud/xW/Ebcr9kPLdljaEwlkKfpTX6IlOU
Lfo4zdOXd+S70r43YTtlLOt9C/q96qM1RTf3GRinpv/eVN347E1C+bX74su3
fDey25jePbpZ7zxr1+dxz27u23ycLj9R5P404+WNfx1dJH7e+HpjYU0zft77
EI1/NWbW+H/j541vNh7c+Hzj9eWtYzy+9wsY32wZ4+u939LYWdvwPkXjMbyr
QpuAtgHj272vy/v3jC/3fs1XivioeD+m8f32TR3D+yi8P9M82/S+TO/H1BZm
He/jND7f+GD74P0G3l9g300zXt/7CZ4qYsPUlul9pdo2HRPvH/V+OcfmySL3
bbnfd21Vh3b/b8zpQJEYPWP1jMlzKVHGeF+o93VZ1//w/gPji71L0DsFjUc3
Pl3e+wqNfza+3me3jPHH3gfg/XXeabf8QOKpvcvONO8HMF7cuw1NM77aeGrb
Ms34cePLvcvMO82MP/d+PO8e9A7C6QfyTfz322jl2/C+Dm39Zxe5z9P7CTxL
8P4y452Nf5b3vjLjpb0j0rsip6jjN7yv44IiNmJtxcZrGLvuHYXeVeh9H9cU
sVlquzR+2/vP7KPx78Zj27ZpxnN7P4lnHVcUua/E+0vk9QHzvhPvE7mqyJ1v
3s/hfSjmmeb9It7fYZ7/6f0ixuM7Fs4x70/w/lht43v15n5O73/0rk3vz/S+
R++T9D4/77Pz/kjvCzkP/vwi9494H8i5RdK8P8T7Br3/zjH2/kHvR3Uszyly
H4j3g8hbx/tDvM/Ethwz7zfxvkr/yza8r9D7Lb1L0D54n6X3d3rXqH30fkrv
tzupSJr3eXp/3YlF0rzvzvvyTiiS5n123jenLm6a9+d5v6XP6n94f6b3lToW
e/fmfl7XV8+K3CO6/hp/Whax0RvfN7qK7dc7MeZk/rxfZW7pYz4X+KMqvvsH
1Pvf96rYro13mr2bO1j8YNyzunfVXmns9m3834/wH1TxXf+onv+zdGPb9U61
4fBvVNlbKxO9f8b7NMdybe3N/ZXeZyk/Tm/ut/S+S3ljiLwvU/9aY5GMTfQu
R//T/9bm630Dtu/dNsYefAH/YZW+GN8wbzd3FHhXgfG03o/6M3R3IzZo79fQ
n0Hbs/G33m3g/arGOhmjZKzSMt3Y/rzTbvduntdvXf/7ebq5L9l3YYye94na
h//GQTQztp6//Tc2vpH/dnyNLRta5HzA+Dltd+7B3Yvrb2IsnzF3jfp5tFV4
Z4n7N9cPfb+Ngd+xGx1aXVodU13T+Dt1ee8s8O4C9WfvKnXP4P7b928cwb21
fNFmZ546qLqo99uqq6/dm/tzv6oSW+0apr1C/xljy4w5NPbQGDBjwcbszX2m
zjfjLpxjnjd4H69trdOb+3AX7+YuPu+Q3bWb+3LNMwbM+4K9M+dDfRL7c5eO
6713AXrn5WLd3J/qfzmH3qz3L+51jOlfqJs7Pr3r0z7b9xm7ORvwTppdurlv
zFht/f28f+L/AJFo5Y0=
             "]], 
            PolygonBox[CompressedData["
1:eJwl0U9LlFEUx/GrMU4zaqMQZUKmoYnaH9PR0UKLKCxSRC3ChVauIlDLjfgK
BBdhi5Yt2gzYmLYzxF1boVfQKloUrXKhMBV9Ls/iy9zv75xzn8uZlrnFyYXK
EMI5pNCRC2G6OoSj4yF8rwqhkx9DPhvCCezK7/E2pJ3H9P7yO87rsK/nlaxo
9hrvw4D6R/mS/CnP4ANf5M/0XeVZbMleyJ7LevgUejO+i7KsiT/EID+JinQI
zXwUn8y9Nx/im3gKG/yHvnXZ9fgO/DFTlH+Tz/DbKJl9KztQu8NvYcG5QfZb
3yy/gTf6VmVf1W7yEWzL3skOZXd5Pb7w1/JNbx7m5+O31e+76wIm+BDOyroz
SX+cy8d9ees2f2n+Cb+CDllJNi97zLtzyT7iXuIe4z4fxd1kkvviva38ImbN
/DX/U/+lXLL/+D9s6SvIa/iZuC/ZsKzLbCPvx5j6jvtX1OZyCfG8p29UrZY/
QIuZy7ysd5mfwj/ngr5WtdO8HZ+d5+Vr8mn+H+TSRI4=
             
             "]]}]}, {}, {}, {}, {}}, {{}, {
          Directive[{
            Opacity[0.3], 
            GrayLevel[0]}], 
          
          LineBox[{3940, 3930, 3935, 3887, 3807, 3015, 3436, 3016, 3457, 3044,
            3456, 3043, 3455, 3042, 3454, 3041, 3453, 3040, 3452, 3039, 3451, 
           3038, 3450, 3037, 3449, 3036, 3448, 3035, 3447, 3034, 3446, 3033, 
           3014, 3013, 3435, 3012, 3004, 3829, 3830, 3806, 3886, 3848, 3885, 
           3884, 3952}, VertexColors -> None], 
          
          LineBox[{3941, 3861, 3923, 3870, 3869, 3841, 3888, 3849, 3889, 3808,
            3079, 3485, 3078, 3484, 3077, 3483, 3076, 3482, 3075, 3481, 3074, 
           3480, 3073, 3479, 3072, 3478, 3071, 3477, 3070, 3476, 3069, 3475, 
           3068, 3474, 3067, 3473, 3066, 3472, 3064, 3032, 3031, 3445, 3030, 
           3444, 3029, 3443, 3028, 3011, 3010, 3003, 3827, 3828, 3805, 3883, 
           3847, 3882, 3881, 3951}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0DdOAgAUx+FnYlgsxILG0UFP4KJYQCybJk4kLMbBuAjewnIOCxyBATex
0IQjsJEA6g38hl++/N/4Vi9KZ8WJiDjRZTKioHNtqD8bcTwd0ZuJOGKXh/zm
ATvMsc19tphlkxk2uMcv7vKTO/zgNt+ZZp1bfOMmV7Ssir3EMlN84SKfucAn
zvORc/ybivjVg/3De455xxFvOWRHbd3YLZbYZJENvqqmqq7cBv6w7h8JrelU
k8rrWv8GxS12
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0DkywwEYxuEvJfknMSmoHcESdDgBQhDr0KjCuILtGNaDJJZGTmDfIonI
AbSe4jfPvO07uL1X3E1FRFk7uYh+DSjRlgpqZCM2k4h2JmKDLa6zyTV+c5UN
rvCLZX5ymR9c4jsX+cYSX7nAF87zmUU+cY6PnOUDZzihcd3ZY7xlgTcc5TVH
WOMwqxxin3K6srO8ZIYXTHjONM/Yy1P2sJuO+NWJ3eExf3jENg/Z4gGbrOte
FfvPZ9O+y2tKk9rXP8eSM8k=
           "], VertexColors -> None], 
          
          LineBox[{3944, 3864, 3925, 3872, 3871, 3833, 3801, 3819, 3812, 3182,
            3568, 3183, 3571, 3185, 3570, 3186, 3188, 3189, 3193, 3834, 3802, 
           3820, 3894, 3938, 3853, 3866, 3865, 3945}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0LcyhGEAheFPb9awUoV/VXJcVqaiUVCrqCho3IkcKlkj55zDFSjUdFwB
xlO888xpTzQ41j+aFkIY1khGCAMaUkx9SijSbyyEP33oS+/60UV6CIc6UKW9
z01tqNhe56IWlG/PM49zzOUsczjDbE4zzilmcYKZnGSCa4y4yiKusJBLLOAy
K7jHcu6yjDss5RZLuM16nrOOZ6zlKWt4wmoesYrHbOYdm3jLFG/YyGs28JJJ
XrGLr+zkCzv4zHY+sY2PbOU9W/jAXr7xm5/q8X+3xvUPvnM5Hg==
           "], 
           VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0KdWAgAYhuHfYFTJ4sKBe4AbUCHbCCaT1XM0eRXuDe6951WZvQMfw3ue
/H2ppdXySk1ELGq5ISKpBZWVUE4/9RGNdRHrTHKXKe6wjdts5RZbuMkmbrCZ
3yzxi0V+co4fnOU7Z/jGAl+Z5wtzfOY0nzjFR07ygRO85zjvOMZbjvKGWV4z
wyuO8JLDvOAQzznIMw7wlP08YR+r7GWFPTxmN4+Y5iG7eMBO7rODe2zn7/8u
P+ZVq3mt6Q+EWiq1
           "], VertexColors -> None], 
          LineBox[CompressedData["
1:eJwN0McygwEYQNGPPcZMljaG12BB9CQI8ishRNuY2HkwnajRRa+v4DGcxZ2z
v+3lzXylISKK2miJaFOiTnWoUV1qVbf+miPWmyJ+ucYfrvKbK/ziMj9Z5geX
+M5FvrHEVy7whfN8ZpFPnGOds3zkDB84zXsmvGOBt5ziDSd5zQleMc8ax3nJ
MV5wlOfM8YxZnjLDE46wymEec4hHHOQhB3jAfu6zj3tMc5e93GEPtxm+5ZRS
Vhlt6R83ADTE
           "], VertexColors -> None], 
          
          LineBox[{3950, 3929, 3879, 3880, 3804, 3826, 3800, 3433, 3002, 3007,
            3434, 3008, 3009, 3024, 3441, 3025, 3442, 3026, 3027, 3058, 3467, 
           3059, 3468, 3060, 3469, 3061, 3470, 3062, 3471, 3063, 3065, 3096, 
           3498, 3098, 3499, 3099, 3500, 3100, 3501, 3101, 3502, 3102, 3503, 
           3103, 3504, 3104, 3505, 3105, 3506, 3106, 3507, 3107, 3508, 3108, 
           3509, 3109, 3510, 3110, 3511, 3111, 3809, 3890, 3850, 3920, 3924, 
           3959}, VertexColors -> None], 
          LineBox[CompressedData["
1:eJwV0tszFFAAx/EjkrRrm/Gk8mAmtYjM+A9Ik1sP/gBTW0J0GTtDg3IpXaRs
vROv5L2i/gld/gUt1ZhJbS3y6eE7n/N7PeeUJW6138wJIaTUHwuhQ/VqUKYo
hIJICEec65S24/abaAgVfMtKvmMVV3iGq6zme9bwA8+yVhe0ZjfxI5v5iS38
zFZ+YRsv6pLW7cv8ygTTvMINXmWnrmnT7uI3drNH1/Xd7uUP9vGGtpxv8yeT
/M07/MUBbnOQfzjEDIe5w3vMcoR/eZd7HOUuxxjc1Tj/2RM8YN9nDh8wj5PM
5UMe4hPm8xEP8jEPc4oFfMoIn/9/E06zkM94lC8Z4wsWcYZRpljKBZ7gPI/z
FY9xliWcY5zLPM3XPMUllnORJ5nVef+hWI06p6T2AU4FTLw=
           "], VertexColors -> 
           None], 
          LineBox[CompressedData["
1:eJwl0llXTlEAx+HdpOmtN0nq0qeIW0KDVSlDhkIiQ4M0j4ZS+Bq+jVnUEjKF
jJVKkZTH6uK3nvXfZ52Ls9fZWtNU3hgTQritHekh3ImEsJP3mM/73MUH3M2H
3MNHLOBjFnKERXzCYj7lXo5yTK+0337NN5rSJ510NsM6/uR5LvIcl9jMkBbC
Ra7aTVzjLeY6v8kc3uAWDjObQ9zM68ziIDdxgJm8xo28ygxeYZSXmc5+prGP
EfYylT1MYTeT2cUkdjKRHdzAdiawjfFsZRxbGMtLjOFf37KiRvsPG7jMev7m
Bf7iLLdHQ9imKsWpUEVa8+zs/3tUnh3VD+/U2LM8xTnWcp6nucAz/MKj/Mxj
/MoqfmM1v/M4p3mC73iAb3mQkzzE96zkBx7mRx7hOEv4jKV8zjK+4D6+ZDkn
WMG7kfX/8B8yWFz5
           "], VertexColors -> None]}, {}, {}}}, 
       VertexColors -> CompressedData["
1:eJzsvXk0Vf8e/69ShgYSGZokFUVR0qB6KjRRFMmQkiQVUhqJSIWSoUEopagI
hSTKlKFBkswyz2fYex+hIqnf+671Wx+fdc+96zes73fd7/1+9c9zeay99tln
79fwfApnps3hbftGCggInBQTEBhF1CyQM6XJtBXP3v0qKZdl0O/Rt/JWMBcO
J91n3D3dDKNl6bqrS2nYeY/WD+ZwYH8zwWyGdiN6BcdfWXKZRof19I2luhx4
3tp4dMa1WuhcKLC8r0sjornIc3YkG6F32y/P6KhC8GiPeWK/KWy3cUs7NcCC
c4TgGzPVcozMflgblkrBwv7L9gwTFhJXefqVcT6Cc+s1s38bhaJDTue6D3Yi
56SPd/LlPLS5vkqqZLiQPPb8zt1zHbB2Wiv8+Eoy4sYGhKzx50JryneRsNvt
EPi///lmH752dg4XH4v+8a/tL95ZUS87IYrDx7+OM1na1s/m4+auR3/d1+fn
12MVo8rusPj45+rKjYLdnXx8rLBfl4YeP/91KnXKNp8OPh74NePro9x2Ps6d
tLn/3O82Pr5DuCF27OI2lG+sFjWwG+IlV+3HyuxrheuA3/ffda1/8Z7ka113
H7Ug+NXDtie7hvgd0ayJuj+aYa4vYzSV3fIXX7gqybpQrxnp0vsWfjg6xPUD
A25rXm/CyS1R8fa/mv/i5blViXoFjdC80Kw85uIQL7y7YUFJagN8T+/83TB/
iCtv8N+QMbcB23a+S1L91fQXl4rPVv59vR76Sucf6XwY4kItCu+lRtTjduBP
9e9hQ3yEzEV7Vcc6dH13zoixH+LKOwNzvynVYVva9AvcrUP81wqr9qSGOugk
pAWdDRjiH8aL6jwOrkf9hu6ncwuH+HKLOZIf1zYg/sXApsWjh64//uHadl5P
AzzmjO5YrT3E3fUWpL/IaYST5W8vr/N/O35nedjS+ia8UJkrIKnaArMYtWtF
azrwJTnhaYMfg233OGFCNynYP/591+BQG5QX23no6zAYqxD22aKbC+f4ovii
6y04+Wz65rRfNF7fXy/yZDMXtvu4t805TbA/Zxqdk0Fjk9qMeQ5pHMQEFR4/
4NOAmkLhqZbuNLbWHFhzVpGDEq1RhgoqtZBaLd/PWkmjMSgyfEYAG75TjAKf
iVSivri73vgLhdHLmkfLxrCgNnD7k25nCaJ3F+RmnaSg1DjziERuJ+R/dAbW
WL/DxI4PllrTKJTJqFc2MqRPr9i3yDhkwSVw7MQVBVzs7Zdz95nZgRyzkZsG
VWJQsUz/zTJHLr7WCCouNBnqX/db0aZVX/j79EWh6aDQAn6+S87uVs1l/j7t
SzWpCuvi79PrxjqTLLbz81N7Nk5tvs3fp2XeNbMyqvn79OE1qz0JU/m54m+O
YthB/v5dPqht5PWiDVJ0/unwrCEuJB5WlDuiDT1bHhc56/3tPDYnhBcatSL5
AmvjhE9DferhYd5acL8FOjoVtUcth7iGd1dJ4J9mZN5qU4xmhvqU7eOTZb6z
GZq9PY4VXkP8zNmyce/rmkDpfDYoVBniJ+Uu1JVfbcLquPVVZwaG6pY9Keum
/cYmaPzK/e1XOMTX9D9mnxjVhCk3xjaxbg1xtcyFJ0XdGvFH1eT1eschbpN/
nlWo1Qjx2oLgRWZ/mxvi99JpqhHNGz+prL42xO892aUnbNiExLTqtxuLh7iV
Q7HhYEQTVJfOUqRHDl3/rnsJGclUE2qe2kjbLR3iXHXb8r6NzfDfV/f5+vEh
fmNxdnmRXgsGX+WdOTmtFRqynZ47MikseKwg//EcDw4tRpENtQwUfzXdSZ7M
xd3u8pv7dXhwuXzrxdf1DCQbv2SMd2ZDXMtHbKQgD24aHcWCKTScZ95RNGvo
hOCFtkM5bxmkXD748NBcGkWjX3o3e3RAIkVphfA1BuVbUnzs4//RT+7T98u0
o3F9/+O1VgyeP9Jr61pAQbinpPLZxxas+brMes1oBjq+Cy+H7uGia4xioIB3
E6LCT0lpJ9CosJddpH2dg6DbnrdvXKnDjgd+yw7toPHRK2TBzw9sNJmMmnWu
qBp54xwDTcVoHH9n3P9+FhvLxl+MdRpbAfVjRh1r3lKYJjYxP8yNBfG1h9+K
XinG+t3rNdzNKAz4PlRUPN0JbY9JJ8QccpFhsmLP+DYuxk3xvXLsQAe02Q1X
jVRiobZJNSDiMBdyCQe+55sP9fUD3ltn1VH8e7lcTUNT1Zu/r18/6+HubeTv
69XTvZ4aqvLzLN8JLlpu/H39s2LuixnN/H09Uc7IS8uAn3st1Y5Lesbf19uC
1ZetkeHnc7gKBSVn+Ptdpv/30a4u/n0dXOnvoWTfhgdK90NT/Ib4VP+frQN9
rYi/p10XgiHucqRzieizVgSv8Mv8Jj7EC03LfWQcW3Gi7PMdk5ahObDqqPqj
m/NbIa21b1ds6hA3+dB6woHMhbkz61jNV4b4GYtR9MSyFqyd/9X/gdvfeGCL
+duZraCi1DynJ/6N579+c8a5FTenOrvcbBvib+VWldq8bMWxOGm3Wqmh69zA
fiC+aYDwS1aG8muGePzZrZ5Cm9rwgvkUduf4ENdVURlMnvfP97Prf5r+WlNY
Vp7Fw9lZ8y8u/050ML1Vjc2D56XR26LvM1DV6nwQ+oGHSZemeKdf4CGxY90N
uVwK4fcLf3l785BVUr3Zr55B3Vrf6qBmDoREnxgf1uJhv3SIjPkSBsJ3308R
GsHGsSPBjy16GIjvMm5VukKjbev8HZnmnWhpj7ere0Z4Hkt3ZD8FE91KDSd2
O1wy000izjB4YZtUIHuKgvjFn4mz/Vsx9frsY6UzGVBPdthqR3Px64O0v+K4
ZvzJ19xQ+prGH/mKQeST/T7rYPE6mXq0fFs/tXQPDYlr226ijQ21wLbtozyr
4bcjuiZMhIZOUfmA3WQ2SmTVYowelsPv1iiX+GwK3IPCLzoPsCAfdKxmbGEx
NK7OrX5jQaHkz5goV49OlDSHRS9VyoNeQcHTKVwuvp34qMs9TfZ78a+sK7JP
YNq318fZjQt55lqH5fGhOSCxs4vXJsg/BxLm2gzODeKfA44xeT6UBD9nzzp9
lBfAPwf23V1g1S3Kz/unZmzt9uGfD8mWr1pOT+fnxS2R5+re8s+H7MxNf8Kv
8POk0F43c2N+ft/lTp+0LD8fuL8xRojFP0/GPV5ikF7Kz93vtpj6ifOfh7oe
uMd8Cz+3vLTSQdmfn/855B4UmMPPnzBj8t/94uevbl3uv/f8n+/P/7x+/G/R
mCf+d9YSf2C3+d3NWTQPjIjHi8EyHnpdktcfuEFjX/Bcdc0oHm7EJB31mMvD
huXVXYExxKdXXCzcYM6D9vp21T+uDK7/HgxLfcXGXtmOvZZiPHS2y7DPFtMw
oQ1+ds9nocjU7KhtGYOGGcWiN9bS8Py650eBQgeWt3npL73AwEdyYeJ8fwrn
ueErpGpbQa+8eSNWlSH+OlWoOZsL//Yyd1vip+7diG+cUkljttWq3SE9HChl
y57bf7MBpsxr5QAPGse88lP153JgpKc5e/bjL1ikd3Oh8mIaCgapstYnSa43
nfG6tqoSSeYtkoVsCt/c9tWqFLFQ/V760Nz0UmS+u/f6aTiFdGVF2fBJLBi5
ys/r0PiIwqV7nG7oU/CsajEVsiRzw3qih/uPfFQ8lJ/i9osLvQv3rh+734HI
atONk/+8RH1k/8F3KVwkFN3qVxpoR5P+5gepuxJRio67b7y4oK47FSqeb0fO
k0gDpugeKlPOV3CtuIg0arrtpkbmzALN466tJ/BFeRYJHlyYjNt2uLTub74i
91a4/zj++cN22OFk1sg/Z7zHKz5MKObnG93mTT72h5+LsdUurlD72/n1QlrC
Im+D2nziwpXtXCiNlWzpndoO7XkjXNZpJ2DRAVex/afJnIycpnjLmbyvbaN3
KU5JRc/Z75KGEVwsr2Cr7c1vh/yhW8Ujn73BHcfszqnjKbz5M+mozvuO/3gf
DOv/N/VNMlrt9p2BVsrsySrVPPhFj/SbSOaEv0Daz92raLQUFYeOCOHBdvEV
2yfCPAQZznihe54Lv/aTU6qMeUCutLa+E/ELYWXfdglxsDOzMTpFjgcVMdHK
nyySO9pG5Cs5s/B4g8CLu8SXBMQKxB2zoFGyUO1qN8mxfWXy7y9FMujS+XGW
+UBBzW2XdcaaduLz19Qe38tgawNtYr+KQtAb/wUXH7fiBmcPbT2HwbNTbcot
T7iQ7Oxpigtogdj7HQNFAzTc5il889UnPuSH1OlRZc0I1c/jPmykYZf4tuSL
CBcs4WUTLaWboVC8oM4zj8Y2Tcd4lXfEn8haxCZbNiHOKLzI4hGNVRkSvh4X
OTi1ve+cpHYjlpSNztS4TEN5bdreEl0O+vrvnu2914DZYQUZZmdpmO9T2Kuo
TPiJKpPGiU0Ye8G4Y/1tGkc0ZfIfOXDQ29VwIL+0CV+dm8WWptPwE5owe34i
B10HOzxiyTys2nl4+RwyD+9Vj7r4hMxDqo2+FmDSgowNgzZSPTRexvZ3qC/l
Yme5OKtqXiseUfa/lk8i89b97g/1c1wYfX4U1UB8/77d/qEmDiSX+a1Pl9tG
/cfra1j/91TFT2c2MDd5iE+TyNrbxUPHk/l212p5KJdR3PAlhIFxxLKvZe95
kD5csyjMiwelUqurG8eQnKD3+r5iCvk6ynGOgCEPpy7frEs7TuMCs9Hk+B0e
llaNkNs/lYcS3c9zlNopzLhZOvqNLw8bx4aML2YzUPwteuSmCdnrsHwx2YUH
c8wbseQFA6U8/5YQKQqnjd45RR3gYcpEj5FK9xikqGz4YpdK4fmYrMhcch0P
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
xxIyT4Luuq85NOUL5t2dWn1MicbLd2v79u1io+S8xQ5Zg2oE7s2RfT6axoNV
k1duHU/2S07VKN72StgtSLw4tolC+Gu9Fc7Pif8ZMEnM312OVf13e/a8JPtC
7/iyQCsy3zRLd4YfKIVkfqB12nUK595Haz4ZTebhEUMRZ5cScALOfpxwmPjO
zeUaHxPI3O6Xd3Zf/xFf7+/vXE98/+Izt9882kme18fHtF7qeyTvTx0tMo9C
79ffL7LHER7xfN9KhTdoXxIh/lSIwmt32TOhGeS5O+bULwrIhYzg+SnbSZ34
i2hoHyF1ou0aEretNxP6pQfnDJD6N7+xRXDT1A54FlaLB+97gSKdF9O9orio
22DaXVVK6lnzzUfH2ckom7Z27eZLXITphYeLhLZDwKl5nbXjY9xL1ZGLPMrF
J5OezkJrwg9rdrcFRuKIoV53twUXQrYGS/yVCc9WPfHw/SWAta5QT4cLuDw4
t7l76O/6fnzVsXi1Cv/fDR5/vNe4ZOa/+HvmDl0C1/4F32JLJWz/F5xnybKQ
+Rd8++G6sYUKf+NMFf3n/Qn87LG2E1lB5nKrf1hOXRs8L9XYn2+5D4NVN0Qv
WnMhHJgkE6BJ5sPYXwfajifhzsX3T0b6kL2yovKmZRB5v9su373omo6uT4Pb
ziZwodb+c7Iypx3ih/qfc9/n4KDF8lW7y7noK72wvEG3A5EJ7Tu+OL2B0aiz
IQGiFGyT3VMM8jpQoveDU7blEw41jvR/TfavocjOrzKXOtHnJJhtJ12Oi68u
evWmEJ9gvWJBuxHxJ1pXfPf6VOPeTdGTc0VpzHohcyhJmuxTocnbrH/U4ZVL
gIPFbhrjJ/x45N7ARopS7kzJliZ0bhMf7U3yuMvrkrE+zzmQPHjml6scyTt1
euNUlpK8Y9Z3ZGIlFzKKjyrVNlSDtV1W/CDpi+kuQbPvj2Ojb+JdGxHPSmT7
7Otc3Eohe+XaI8UZLDT9CWGaX5TjZnpS1iDZ+3vG9Gb8dGChhA5wfckrhTN3
8MbbOyTfljwQnjuNzJnai2Ouzf2MDdM2OQafofAwbIeJ8cdONG0eoRtTW4w0
9LAOW5LjOf4zRnt2wmhE+M1Eqw/4onKmlL2cgtGkk9pF6mRfpCzipjW+xU/Z
0Rl7ZSjcWblnz7VWshfsP6x+vScfckIBD+q/c8Hap3/O4gap/ym2V9+35kCr
d3LgjgoulgQuiZq5nviAr+dWvm56iVkTMko1U7gYkB+3pqKfzGfWgUuoS8Gu
X+q2JjfJ871/7Prh1HZoV728FhmZAEGLhVu2uHKResYpNfUoqYf6exK5vvcQ
/0Jl2QYr4oN32FcPLiD80qx1AXkXYCw1T2GtNhev1W1+6nKH6pO1qDiWPY2/
bld1VW9P+xef9/Ftvku3K8X/d7Of7h8fuKqCn9tHPZovkMXPZzaueZf7kJ/n
HUr7dvo+P5+RcO7Pl8f8/AxjILLyGT+vXig9KeIVP9c40jz1dx4/H98vofK8
mZ9jq7VGwdS/3YdOP0qvPQQtYw1fxm/h4uWUvVascWTPejsHPOhMgPAEv5w+
8lwkT3AO6R4j/SuyZZLJgjQsEM97o0v2r0PJEdfIWtKnqtPNL3W+RpuJoppU
IxdZzn/k6qyIT2hyN23CB4Rzq25/WEbBruSHo9rCTti/Z5SnGJRiy7nLIueI
/x+n1pVzXoDU//07Suv6KjFKFieWURSeB7Im1XxmwejMlrlHomuR/rS7hdGj
YclrslONYkNm0vyn/qubcKIu3nPgPo3JCazKTWc4eJdqmDnpcivuBOzbGTuT
wRuDteeayJxOTFTPKZQuhTateetGAMmZHhWSVj86IaxUc+zZhRLs3xh03NGZ
wi2Bh/v/JBJ/VX2r0kGkGHT00SdXiO9SrrSm7jqSPbLnQt5RoQ84KrC9M0GT
QkrclCPa80gfsZ0ST41+hx+WS+WLZSms8ar81tRB5pXomslFf/KxeNXhL4W/
uJjZZhazIIr4kNo5C6/VvsaKmPyt9xu4UF8sL1myk9w3O8sO0/ZMTJuWtuIZ
2Ts6YQmL708he0rqgJPPpDT8CY6blf+QC+M/K4yPfWmHdf6J7y/WJKNlzN1x
FZf+8flb746uCyP91Sk8WNIYg3y3q9/anbg48WH7VRkz8ny/6C8RTLuFsrku
h06YcHFTyObBATnSX5Iv9++CJ46uXF3avZL049JgzuXWofqxSjQKqpbn76P6
DylOHiP4+c5Omc2KLfx1eNNt5hKfQn4us58OnvCSn4dvS2duxPLzKasv6E8L
4+e3lLfGRPvy88qj8U/TL/Jz5S0NvRHX/0U/KouvOPcv+rdEcO1Zu0R+rtDk
kr/pX8yHJ0VX5i1v4OeZc8X9Pvy9H89L98jMD8Mhw0yO3VbiYyeIndabRJ6j
/2ixbKlEaKU077H35MIvekJgjyfpx6V6zS+a0jFWdkzNgafEJ6+Y8OAeQ57v
rf5SJXYuhJVTTbJYXNiLxhbYHetAl4lW2BqLIuwdk33cRoeClq19Zvt6kpe3
9jl6sUpJngNrJdkvTY9Wu7ROIfmlb5tYS1QVHpZmW0j3/+NzHSSVm3ks5NxN
SFy7uw5vl2l//GpMQ3kht6Ehj/TjoVdFB+6Rfkx93vApifTjn0dC7Xc4OJMY
/9CFbsW6zrDug2oM+pwzmrYQn856Ltm/cf5nrJ7rll1N9tfKMYVZ/WR/We/q
3S3k9AldymGTaGsKdXv2VZf5d0J7rfnyj/M+osWsx0NDn8yTT0uVZluQfpyT
JXGtsxAVPps5bksofF0peurEXOIPRWdRZtHvyDx4tD1vBoUzj+vevu0lfbSp
e8SCnW/wrkXPuFaEcLs+h8evSV6Y2a+3ziUPj3csX0nRxAcWXfA/40m4UuVJ
j0WvYeLkoahfzUWu6ZnHglvIvpNzkyzmZmLKuRs6paRPry1MjuCQPrVu27j8
7tF0tNyItzEnfsZWmBVUwib+MEFml3N/CmJi87yayB7UaJ52PvUFeV6iBmV6
MxOxryzw+V3yfHXo6EfHvMhzV22rqJsXA4eu8LjFjlz8VpPUmvWPz6erzi9d
fSwSyx+8CUkkvtHH69Pur0rkPIL6d9e4BWO0RbeXKsnJ40svnc8eJHVVZPNO
xdkapROmOz5eQvK2wrrYK6V/61P/EyviZ/H37yJ8edUhxc/v+mheOS/Cz8eW
XN2lMMhf56dleAtzuvj5e8PFbgI9/HxP7JPQo/9inkyMN+5xFufnuU/6Nh+e
wc+PJkXEOC74G3fcsGXJpqtInRVcM3sjuZ+DjwZGCpD7nJTtcOhCPGL3Hbr1
8CQXzTd/Zp93IP3FmS8wKucF7BzC1yx+wIXuNnumqLIdar8HFGPu5EDB5X1n
dikX0eMqp0qt6YCaUMv7LVYFaDzdd8VAgILQWx19qzjilxqW143S/oDZBbVf
i8gejDsR57eY7EH52PE/ZY1L8dRhrrnwNQphg5azs0awIPxdijZuqYTL0QUy
1zgUxMZKt44oZkFAZ3rTlSO1WH5qSdW0tTR8ZEoj9cLZ6Fp/jb1XoAmD7itD
YsJoDMy+ssvPjoPqjPgjbVYtkGfX1Lv10jA4/sviBPHpvw4djCmNaUfYdzE7
6iiDfZjNnNlDwXfOzsACj0pIp/ZETCG+9LJxa8EN4ks9QyecUbKqgEj7ZpG9
HylIv34u1enHQqLo4Q9rj5QjnF7zKekVBYmKsNY71sSXfpa4eju9DK8+zc3i
JlB41rbTzk2b5N/QVLPvI8pQlzQ+YXYkBdPeGewd8mS/n/b11V5fCoOVolWK
xA8It0jrx/0h+3d+xudepc+QNJr5PY7Mh+qXm1cHk/lwKmD5XmXlEiRyVqWc
OUCBORUU/TGS7F/dplir/GL8tO8zDLIgPvauzr4Bd3Ieh81X7DU/Yn1nMjeK
zA3DN99nK1sSfv2ls0vMB1zf5+jzYiWFkXRsh+myTkROw7Mxb9/D+we3Jpbk
R3XK7ZfmhE6I/87sZtFv4ZPuyeMSn6w1pmrB5zaSE+ss7W0PvUHdEW8rR5JH
4kV8F/7JJXv/ZX99I4vs/XkXPzADZO+PX66meo/MjdCbxpZ2efBt8V3uTObM
dXGOmuVZUj9LBWomrM+F3pJZSo9buLj3+VfyUjsyrwxurFU0eo3aRWdz99dw
EXuirOC2UQeCzG6cDHXKwQyBM+e7S7joeXziUtNKcj2F88xl5bJh+/HUOvd3
XGg3yhoqKhNf0Tovb8SOTMSEHxcWzuHCd1LmJHspMq/up1/QqM8EnmxZ6E/m
WCd3nOx6MscEhF7vOC2XAx3nTT2FH7mISExYen5JB3JmmKUeF3kNda9Kzdck
57w913vWcRPJC2JHDOt5rzFPdI/sPuID06SvBIXs6oDzbz+WbmUuFK9xB4TJ
PnocP/te9lHif957hmXpFcCivNfs4B8uSnS1XDfHkusvtVu9T7AQk2tn/fmu
QmHRn5iYG5NIftE+1mNhXIwSpZkHjE0prNi9+Zv0sU44H6sYtVXrM3yXtJ4e
50Hh+lyJt29LSD2867rSa1CGtWsfXCp4QOqEVxl6UpXkqeIzGS/7KjBV2XTE
hBoKoaLvE+QfkL025cLTXp8vaF5glROqRkNM5vwh2yNsqDXtWthQ04BR56/o
XPKmIaKxaQO9iAOjBQf3U+7N6L7IPt5aSkMz6EOmBMkTvpTiC3ZAK5r99GJW
KjDYSxksXkbmR/wNm/N/yLzX3hsjv/g4g5BO33tFdhSUUho7bDpZuNsrJHKO
x+B4+/6DC8/TsB34k5Om0QxWqLk36y2NQts59S6lHLAatka3VzdBxA1HFV7S
OHSMvdsomQOH3CgfCfcmKFvN3rMznuTW8/EtKlc5sD0hPXP95iZ8O583Uf0B
jVWa7zyOepHztG16eWxWE7bf/zqFe4fGjJLFaz4d5SCx22pxOa8RYdUu0/aG
0pgUvZcXvJeDmIuSD2qUGtFhuiD9hB+N/MLJidnaHATJfZjcuKcB6hUsk0uu
JBd/fe9MTyP3wXOr8PqyelROHeNTfZjMH50JWv2CZC49KmnZZFEPtYefIgrs
aLzxbpP7yCP3+ZNh5pbmOvgtDEtJtqKhk//yZ+QXNlgRfV0blOtQNfb0qXZD
GlFTCvIcXrIhfOVt3Bj7Wqjmu3XYraEhNeNEfngoG9Yn3r15lfEFTcKGUgEa
NNIk99ZFurKRlnn1sYnCFziO+ODfr0RjxJOaiFu7Sd4fbRVA+9RgoH+d4L5p
NDavN9odoktyukPwb72xNVBhbXo4VpKGhIt5TcECNpRcJsp6hlfj8PP19iFj
SR559CtCZAobAhqj5v5QrEZH1MWMgpE05JRXjD81ho1Izyu63jFVGFuSudqZ
+KhpQfuuJnaxoPRR2kZMpQoLf/XmyHVRmPIjSJr9hczDPKvuyUuqcFTr5/R3
hNssiYhwr2OhbwUnaxM5j0P++REO5DzbCpc8eUjO847dEOEhWg3fraJn3wvQ
4Ng7KlWOYCOmQ3pP+vJqJN98stlEkEbfnpuicqJshLYaKfbaV6OhftvURiEa
wpavKSsJch9KsyorzWqglJrCrpOlYf375wezlWzYz/li7XqwFs25J37eIPc5
/U12hHAYeV8SlxZmOtcjtDcv5Jg9DfGg6c9f9pDn4lnpaC7UiI9nKr16LtJY
MutuTcsKDlJOTKz8uaUJI0azHY6SOjRPnfFb9BwHgoFtLwQPNMNFauHznE+k
7xblPXzdxsHKzXeFRrq2wkbmcqfsDAYrA3SndkaQ3DnWYsefS+0wmtIp6+LE
wI5TEDxuB/FxhpE/T23pxMUH6tnzkxksOzc9S/wb8bPfnkr7j2NDMvTKKKlv
DOpsNgmrB9Og5vcsDSWvs3fS73utWjxcOzdw2l6TQZqiW7V1FQ1DiXjjKQk8
jPcMlrmxmgeTV6NMz8/kwCDQ82HkdB52bfE6P7ObRpPyUl7SDzaexD9JtJDh
YS2LWufRSsMs9KBv40c2xhfWvZSU4GHGOTOR2nIa8j4fp859wkaDY9rjbeN5
SN7+pDXnPY2ucQFhEvFsKD7XKhxJuMnWy+fGEG7QUKmiHcPG5fL0Mc7jeLgV
niSWSOYBdWSyXO4hNlqtvKdZjeJhUq0PzzuZRuRoUyHdhWys7jTQ2PSTwdUp
uz7tiKBx2+ij04tvLEgX3TGK+cpgad1bu8Wkj48tX7EmpYqFO743KufSDKZe
F9qU7EHmj8KjSUnppE71/Hc+YjEQNVivqn6MhvO85SYXjrJg9UbL7mc9g9ri
Jp0NljTUtkx/s3U2C3TWi/p9pQzm2+8YraNNk704atn06k64vli8/fMbBsdG
FL9ZNZtGUR3vYOTNTnBVq+oUMxm45USaxU0g3HOS6vcdnbhwcad86DMGzctV
v9v0UbD+ojTdWLYTli9nNCx6zKAiuTfxRAuFDAFGRba2A+c6TK3rI8nzlZXX
fFpEQWDuM63G2x14KBHQ4nOTwRdP/VedqRTkhR+LFJp2QHDLwxTBKwzGpS4w
sv5H7lmc1Oc1oQMDPz1lVM8x+HanqnXSBZJLtKR2Rw2044zNCS+zswwUtCQX
nCZ7JjI9KUd7UgeiY+SMWsnxKhqrxTMvUpBZtkWhYV4HSpis6U4XSd2q2ncL
BFLIP2l6cALh8wrMv28hPO3E59VpARQ2TNthdE6uAzdPunT3ezMYL522ZL0f
yVuSD77vtOmAq/IfxdcBDN5ZG5s63qegov9BKk61EwlJE8W1Exiwe8pcb7Ap
sLy+avT3daJlueJA1gcGEj4mdzPJHjs17qWiTBQLeqwpd3XaGfyYtsZlgwON
X9dG2WvMZSMsY3GsZD/xgeOLL10Ip+Gf91puKaln5sQo3Q2knqsPWm00JvXc
deDz0k3PuXA/sNtX3ZIHN32/ay5n//FzVc0mVi40xu18VSR3h4epKs/rr03h
off8qeY4Uvez14++YVfHw/aBVEte/H//z7kN67AO67AO67D+r6waixqfm+m2
4ZVrc4rLKga7p094mNbGxc72I37fxreheIOglv4SBk2xKX5PP3NxO5wzJ+xk
C9RvivSb9tGYlnoo/LgOF+/S5Hlqt5uw9fnEHUJJJA8+8pCfGEFyouV9JvJ8
PdapGpzqPkDj4YGdeUuIbyjRG/WnsaQGKx9cDKtXoLFMZYWdxVY2jKJ/T9ac
VIn0ZOqYaC0Fy++l4nmxLCQarZ66RuIztE9vlepzpUDJZamHvu9ESbZWysjM
t1hUZek5WZrCu8j5lX5NHWha49uxseAlRAK2/Up+xoXUd6n79/ra4TnR9ury
taFo0d14ytCIC1t9Aad08aHP+w5erdvo8S/+X+9wZnNe4yJ+/vuU4zz3C/yf
321zRUw+s4r/c7rf3EuSGlTm58qpxmNXneH/POti+4TjUfn8n68taj7L49lI
fn75+bLwdav/+fPoBQQMFBZ8e3a8DScTx6/KuPq379N+f1x67FErBFenlqwU
GeITHqoseM+0YIuwTdqMgNa/+OiwU8tPr21BxB92NqYMcYVdPkcCgpuRqLqx
ffODlr+48OKxkSFNTegVv2duvHCIU0KBxXcWNmFpb99Hs/Tmv7jx6tj8AZNG
WD85oxZqPcRPKZWfxYcGSD9akv9k0RCPeBLobrqiAac83svsGTnE307ba1Ed
Uw+fqJcvmj83/cW7/DWXWkjX4/q7OFObe0P8ArzjLMrqcMS8oPTFpSH+vm62
apd3PRa1GhlfLxji4Uv2Om5aRl437qV98oih112ub9aZzm2AmdW4ledWDfF6
6817lO82YrnYLrFtp4f4vu4tu8U1m7BIq9g7OnOI224Xa9mi1Ayf0qgLs3YP
3bcTEvE/D1o2Y/VAqramVwsMWg+mR9AdkLl/4Hh0FIOAT/r755VRfx2/P4Uq
T81rgcb+paX2R1pJXqtyWGNCI7chXdM5jAfn5KSzieK8v453U/d4xL35z/Xz
7+aHgAC6N1+fIPHP9c9/fNeH/dNfXSiCS9usz6P0KIyVir36TL/z3x7/ztBl
RMuDDuTL3OloDmUgHzhFTuzl8OfVDuuw/if0/NqvTpG1DFQHnesVy3mQihay
iAv79zk9OuR6z40bFMImz/KoPMNDusYjt96P//73ZZpu6GYH2nLQfMZd+akS
D2LFiqmhIgyiV2lcfJdMASKvEpZ68XBNavcNlWoGMfLTmvoOs3B2l6BvaD2D
CnVR1l4LGtedi/3ZVAdag9Kc/vF7u/sfPdnxj9/bLTHIuDemsgMzHqwNlYtk
sNHrVhqr8B8+QjftgFUzRASrJowqpuEoov8xqYmDjEs1B56ktuP2vaZAgeMM
cmeNe2BqR4G1QzU8ZFoNbBcH6R+SohGiMGDxU52N28I2ujvU25HUuWaTwB4G
EVN5O+KWUugqHN0e+KUUo1eqqqtHUHihKfnuqCwL19U/fdxxrR3O6yWuPjvM
wGJrhUmfOYXqu2+5tbmfMTi/pU3Tl0L/K7HJnqxOaAzEmJ/X7sSGbHyZlMhg
W9b1bQu6KDSlr9z9uqUSO3ovbb7FoTBzha6oVDELOxelna05ykGvo1JZ2Twe
VsQ9o0InMPiVvqp20KAZZ4+fcfX/QOPsfgWX7i8cSM7MViow4iFvorfKi3Ye
3nrU7Y/L5aGLHWG5QpED941fc4Rn8OAWV+8g2UP/x+txWId1WP/zevsbs9Xn
RxuOrN5kYGLGwGplws7DsyisfBizNG17K/ySs51iZBnciJRMWBzMRY7uDsfP
l5rh7b44orScRr3iKdmQLg5CXcS4zXsaceqbY1bmFRpOndszXm7iIMfKeUD+
SS2cHGMaY9bRGPl48e7GaDbS8iVun+mtQu+IKd0KfyiseMrW+DXIgvC+nSGr
T5ZhwUxXj68xFCT7ps5t0GDBebXn86+9RciyLz6xcCMF8bvN2U7bOxF017f3
WnguQmYUdH9oJ7m398Pli44dsB6hsN/BMxGOla+c7M9xEbsxdcedC0M5UT/O
p3STDP/Pk0hZ/KHZnvw5cVav85zsWv6ceCvojbvUQn4u8MDeZbsXf060TRc9
cKOMPyfed+JE6k/j5zIPEq232PDnxGUHuSPuRfLnxBdvBKZr1LXx8Uv7e2a/
nNAGfb+OZKktQzzponZB2oZWiN3JfytZOJQHWz+/Xn0rpAXqJXJOpsZDfPOi
busMdjM+7gtaKN00lGvUhU4E5i9rhvhGVtTUg0Ncuq4/s8inCSYq2jIKvUP5
aKtHZe3IapITnTSX6fkPcR+JD5+PjG/E27uLLmVvGOIHvzg6N3k1QOLKpOzl
ckP85sY1m2266jEzWXDXS/ZQvstJk5zXtqseC6u+/VqRPsRHL9SyXf2tDuti
R74aFTLEvy7gZCxbUA+O8dXqEbFDfNG6X5YO9fUQSKJt7FuHeLnl14raoAY0
2UBz2Yyh6zl6pMNQX7cROZLBIsKWQ3xW6L0Hb0Y2ISnWwsrl1hC3CKRXeaQ0
oTKqJZee2IK6r5IFh7zb0Zy5c56RI4Pxr1TT9pkM5cHuDSeXOoi1IHgGe9LS
/hakTVmntnc+B7nTohOmyPMg1+XBufGN/uv4wpsaQetV23A8NqPfxeb/OQ9e
WDF98k2Df67Df3+86jlab0XJP/cL//HCse0SD93q0XR36YR1B2jYFHqdiPrG
/rfHLxOof7jYikKFv5D5nmM8rO+xc1328n/c72sP67D+n6xtOuutRv7m4X3r
4JVnf3hQznoQufnPv8+D1rcrhBUyadSuMvaaH8vD9iBp731L/v3xdaXVmXoX
uSjfliCmaMJD+GR8+u1E+tedri8lOXDOcvdyCZoHiwunwyvLeJD0TtjtdoKN
E5E9nX2C5OuZrW91U2lIokgpvphwkQsOiyUIn9z8SKGCRnWYwcmfCZ1ISPSY
fzaHAW7PFfeYTMNZy3E6e24bztsE5S9czkBD62Fh/hcuUlwcXAUMO9D7+Htc
zWUGHQEIfniLQkyBqoz013o4CEcwkkdp/LZ3qlIT5UDbpq9V9HQ7MiYsuv/6
EANbhcJPeUYU1O50B+wdXQnxP9MnjvhC4UxMROmORyykpcjXzLVpx5QpfW+2
2TNYg9DZrzdQ8N180svQthSC5oZ5265T2OU6YdprQeJnphVWl5O9HvHivHxZ
AIMpO5r0b94n5zfjpoY5lOOgy3QTs1cU7tvcli3ezYJugLt1cBkLXU7xI/wo
BovMrj6BO5nz9wPMpKvrkN2+KmeEFY3Xue1SgjVsFNl/XfimmgJ3pLoP5yLJ
fUlvg061M+gKy36wN68diV1i/qwTDDbUfVr3/uC//76cdb3OjvBEHuyvJ86R
7uVhg8VXQc224f/fH9Zh/d9Ro71rRkq9akN2WdkcHUMGk5hQi/UTyFxSuTcv
5HsLIt+oG+8dy+DUp+m5nYe5MHp6IWgN8eNnx0uu7Mqjofx/tXcm0FSu7f9X
KVRSoZEolGhAKildyliETCFSGkiElGRKkiQRIZKpFJkzK1MaEJV5Zts29rb3
s59NhlSq/9Pv/1+/x/rvt/c9nc45dc67W9b6rvWJ/Uz3dV/Dc933frnOX6qS
ChWPX6cccu8C9QuBPrfc6JC0Nr63aAUVBhcFyym+aIN5ozNrlTfSQTJosYKG
2wBUJLiWiM5ohtCUwCc76QiYKWifVG2gQPjxT+UpwnWAWEaIKwYi4PL2KBdt
nAw1pNDqpMZKMJqeYrlJEoEVef1DHjxkiJVMblxMLAa5N7LpJ8pp4EUSQ++t
7AdFIQPRwrXxsCiiaCz2MA16eI5SqxXwfLDv1LsdeShz3pcaKu5nps3M945b
77C+w5z3qX/x7pIeYc77FGfEuL5XYeabuQsWPbnJnPfldieu0CQx533l/obK
BSuYuYlPmrX4AeZ8UHV90xLOm71QcVjccCQR5z7impvuVpBgl3l10X6hSeuw
hN5Xm80nQXIarGi5h+d9ct0Gr3iteqCkte7sXlmcR558e84+jwgpclsVA4vx
vK/XuzLuxQwiyLwVyqhQx/nayNhKAcNuyEtmF55aj+dBkddaA+fFE+B1hX/l
iAvOoxc5L50iSIBzmjZ7GHtw3p1+NmHqtS4IXG1TyxDE+b2t0+4WTHSCa+ot
l2Y6nq8dLw+ItrfpBEvpSpGSIpxvlv4kdE28E6Ykhb8XTMB51tqZewObOkHy
8+3sZUSc+1QGet262gUvOpY9PzvpuI+UhnSkFAmwNiMk+4ExzkeLdIVejBAg
7OLM+PZQnG9uS4qlHuwGPslc9k1tOC+rXePThl2ng5iFuqQzft9M6QuTvW8R
4ULP54NqyTivOT2tMXkqCd5sG3I7FIk/l4WyCROXXzOPhwuC6URlRXzc6kzs
UV1o9wY6hZpU3h1EIDVm+A7NnwxsPMYZh+XJ4Dh6/5p4OpaHBl/azYWy3t/9
3TSk/k6auBsDDLcc3bMFYcBpKYSrvZYB3s0tM+/J0+GRT+yT8FAGcPZVPS3g
YIAR7+ij2vk0WDLWnFi3kwHBN+7IhqlicaPKS5qDxAC4+wUtCHqPgmu4HiEh
kg6yBpWHXSLJ8PGLRFl+EQoxSQV27HPpMHepr3CFdz/wsKfVUm+gcI4rbPu5
NAS8pWkc59j7QZ5P6kmyJwq+3s/Lrl9AQODUQeKuY/3gffY1cV8gCn5PiHNe
3UWgeqe6jNlsCkTf3ReS8BqFCvdq9sub6XDaQbQ6RI4G0Uly+W7qDBAIaE19
pfdX1QfY2BaUqPv4JPbAp0Uvo9TNcbu7/zBjx1RBZruL33FzxRUzfP5XNCrr
ZYt6BO3xpKihTBo88LSy7xrrg4O1RrKmqiSYUuAYZ7IQhfT0fOf6qzRIvHlW
/MArBviLqBRYjmNxeOKYiRrKisP/bnrQ5Bz/idd02H9LTulpMgMa53urndrK
gBZpeJRylwa8RMbSa0YMaM1bv2PXORREzwZLZqUOgLPkFdUd3AxYMldRO7yS
DoWuQVqnOShQNr1yFu0VCgL555e+weIp/8Ba8aGafnjMWWC+LwaFWSXpsssr
EdA/kNusK94PpavEbWf7oGDNkfVZIACBjA1c5Id7+sHk0A63BCwv9pBTOiv9
dX+2+haHS1FkeCnkspmjGIW1u09deIzZ9RGhy4WDVlQQSHbR3reaAWG9FXOW
Y/GggJJLw9laFOb5qbyIrmOA+813IoJhrPHJUpb+E/Xg9Y2Knsd7oZ2T036G
EgoGJfMzCoZo8IzNV9NHiQx5EWpGlzNQSD428Wrr0Nd1Om8scmPowH1uetmT
eAY4LrGwWyzJmh9Y+mMavyotUgxBQKxg2L7uCgNSTUimiggKt0998nJcRYYj
7Pf19qagQM1usbUiI6C8KlBGFsvD3AkfbQ810UEsWyNZboQKNQ6Drrt8W2HF
HY2BE4J00HXJOHNfeQA4W+zOvt1aD5aHxSc84hGIDM6Kc5egQA3f8r74OXVg
mhb6ru8aAi1hmTuejpLh+rS1aiV8zXD2hqHYfixfsk09ndLQRAHlCFMrYSwv
fEnidjrwig4tVsLF0gQqKE45cSBUjAph91e/3ibEgJlts4jXWP05LGXp31oL
xYeQtvI+0H4/yBVyFgWeyMs2xjYIJCoUP32m1Av3GWUXzRRQWLdeoMu7lwaK
F5r3yHj2QGWBqljcezo0z7g3xVmVBg3rC27ExXdD8NoyO41MOhhZLzGZHovN
V4Ubs5YHd4JpnMKjUWtsPnkVmBn8fgAOtiy+PKelFWxFDNwtReiQrOsgelt3
ABb5SnwRz2+E14cNVTc1ICC3/fT7+ggKdOtsT6hoqIEkwr7W/U4IBGSf1Wkq
JkOGXqGNo3I5+D3oFg6aj+UD3bmanxr74eCscf7k4gKwdjxu9SKNBprcY+qi
9D7wLOrcVVR7A3YrvE3/uJsGKVs2qmiw4/XVRDaDSptnzHVUDmn7ra9EmPky
74UnNp1lrq8uvirN+bmCuY46N1jj3vMlzPzMce/D6lbM9dUOD4nw5ZnMdVTz
UPkZGUPM+ftgQPAaobXMvK9WbsPVw70gU8M3L84H50GDYetVIkigE6hXUP4F
rw/45Cg1qvb3QPR8AXdHX5y3p8w/lLO1B5pm319ftADnIk8HfGddJYLpC7+Y
sVi87mfTWppxqK0bes7b8UhJ4rwqV2uxlmw3VFmJGDgX4nXFh2etwzQ9CeD5
xNKJ025S3XXo2Y29413gDO0vs3fg/IC7TiCnVRccecp1+vY8nItydfiVNHeC
jpqcoPekuqjjonk5Fvs7oTRupJEnH+fUxAzxCYNOUFh1fmJnLs6PWJyx2jOt
C+YePVHIOYjzux1Nm0h5XeAqR0yWX4Mft8lQbvo5GwIQZ+2LtLHCeWPdypkT
vN1QV8OpgdzHeab4h8Dlsd1wzFwx3oS9B2IXcBzYKtoHR5SyyZzmKCBq2uV8
GxCYuD3KcbyHAv7NR0bKUBTejoUGOnjRQdTV2FM7iwHzbbiFz48wwHOvUKx4
HyteZemPqan4B5uFLjTYUWCko6PLALqJ6LHH1igWZ1ZrDD/rA1l6kIco5i9q
PPRXGZzA5umrzgLPLbohjdhlZp1IB/SwmdS4LxUG+fTG1k80wzgHb3XuFyyu
LbogbfCFAkYRiSp1bPVAdtjynCcWAbtsqWpRYQqMD2a+vHi4HnjrNqQ7JSAg
SXVWspamQOy7RiVrnjaQnJ1xIGAVHYocVGQ0TQdA8UrUHr0QEhyOa/aYLYKC
gsi7VYIJNBj/oGD6nIbAbE2uKc+weNv+IX/qMuTbddfZagPRSif74MzNbcUi
2HXOmy0377MmFi9vNt+a00CCD0RyRfYazO4KyhvuFdFAfWvhnB7OHnjYuNHr
MZkOw2ril3IEaNAxEKW/d203uOx6WH00lg6nk6M6dzpRoUXqi+yFux2gVLRm
4Vxj7Pfn8G6qeTMAUhWByifILVDzsWj7/nl02DZ2NPi8+AAMui/dmXSpAVp4
yoK2FCEQ/+bZZ6kjFLC3aHsVwf0GesOWHdA2Q8A653b7YW8y2PMtQVwTn8Gz
gwn3vN/T4CWxvdkvsh+6/bP4Cn2yIV5Cil4QSgOJOUsbHmbi/i6GIL/xojRz
f6m+jGq2ZRSzvzvjeFIhZZzZ312Yum2bnwYzd+EybN0bxezvTs21d1rMYPZ3
fv19e0a2MvOGFtJKfS9mP8ix9VCdVymzv7slWzA+9JG5v9QhIuQKZX0vXE+a
iJE9gvPtbNxH9tiQ4KTyHelXxEnvpxbH1G0s7AH9pGkrrWxw/nyn2fFonh6o
sPfyM3qP+zVuY9mgkQNE0JKw/BB0EeeGdrMKdqd1QwNJw7qKG+evjl3U88f8
witf1dq4SX4hZaqd7QZzAoirHOdlOzLJP7Yb3PJv6AIJudyzFRtxfsaSGKqk
3AULCnuFM6bjXH7YJuhDVidMVeR9ebNx0ntD4ZwW+92d0Pi+kXg8E+ct5193
N3t2Qs/Jri3+z3Au2CbuUCjVBVo9e0vWfsG5gb4f6PZ1QW5OeZr5Vvy4/q9p
3JQIAiy7ohAddHbSe8bzn/pjMfsIjtjZxZ6P8/xZs3q4sDihZCz20qhEzzfX
Bf/v8/V133VphAjJIzdfqpF//7rFC8cSZE7nkWCwM2sumRcfD9+7njFS7l1W
ZyLz+PzedY7n+jwemQj9i/1yf+P6x0TCl16GXjMEfzI/smgYAaMPhBASkfLd
6yLlyNwXZy+ggmt6uypFgAHLlZM/CKJ01npJlrKUpSz9nerNFuo6gMWhqcaG
MYVNDAhdeXpZfgzju9e9xo5+YExkYvFp/FE/uMCA8cab9O0t6Hevhx28svpq
eSQVejl4fd9JMYCv6IICIoB+9zpZ36kWeacqKRCSpWXFTkMhY4/FcPY5+nev
n423Wq7zbh8Z+qZO1/y635rtw1mmh8e/f11tjc9Ns7Gj/RDzqMlEIxCFSs7R
+vS7yHevt71+ebcuUaAfGGuvftH3RqGV/9aDpX7Id6/DnU3pPMb5uh8i0zke
kKNROKFs6SdQgXz3+lx9/8wcUiMFHD9yi/dg4yhvd1Umjwf9u9ftpszeIXoV
y9uWjG6b7+vEgG1BpPMKJeh3r+f91rj6b1vn67notOiurl5ImZY87vf1e805
AyMiluBxZkNAZfSYJxFWaZ2Ztv1WD8zmNNO1DcDGw6onMmah2HgwtXVqfYhA
4l0fZbVZCPiHu7gvtGKAekGFqH8Uaz0RS39Mdcr9ypP0UFhcq89eWsKAwGB7
c35rBnQYT9Toh1MgTdFf9z4JBUVkiN/big7eeXf7HD/0wKOAlop3s1Dg3PN+
9U4HGmQkDj7ietsO92fXPSrVoIOPIDXrScYAZOw4pmla2wB05eVIfxkC5zXG
V9o7UCCRNp5+wLwOupWr+4dvIDBzTPo5aRoF8nXZHZNbG2GKXmxiQRMCqU+E
ZR/GUCC8sixOq5YAtEh00eIwOrgu8AqUP0AFxVbXaRKjZJD6kJ+1pgoF+7fs
Wlbr//7zBktZ+t+s1XGjyhLr+kClRXSfz0EU4sYNqgI2ITDXs00s2YEEt9/z
prQKomCj2tr/8RYNniUNn3QIIcKm4ZmblZvosKbnpOfIMBWsPJa7u54kAN9F
iwfpAdi81NG3kaFJBZ2E/QJ82e3wdv6jpUvV6NDTZEobuIfNV3VXdG4NNQOb
SHMw7TMCKXs1prh+okDslAbSi5X1IOS5y5tyB4FdnsmylSspMHenVEFNZxXw
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
JyrM1ZAMuvGyFeSBlHRkBR38blhuUdQZAOfFTfzXbtTDxfZtH+cmI9CeJLe7
bgsFulVtSO/O1AF1WeLLe6EIvH4rs66FA4vTRL2t2PyawUBA4eTKdwiUI6Rk
YxoFfB9zSQ+GE2F5x6qGQWweujvFTPnyKBUKc8LtJyyp4KTlniSzmgFWs99c
q5r5bbsOF90VLLqrDsS+SjACU/6HU/7f/7OxDfGbYz/M8Zhde65tey5zvITs
zV92iUaEHhe+NDVizzc///ce93v5t87zt57/n807vp6GLQ04zuhgPwywPPb1
H/pN/r3384/if/Rz+aOe1x/F/+rn/nfh3zs+fxb/WXbxs+3lj7KvX80e/5mc
2f/+anb0d7e777XHv5v9/r35z4/v/2j91ezxn2q/f3f+s8fpb9VfbXyy+P/l
P3tcsJSlLGXpj+qvNq/+U+ftX+0+/Gr37Ve7XhZncVZe9uOcdT9ZnMVZnMVZ
/M/wIyzO4iz+6/P/MeNfoN7BUpay9Pf3GX6L/2j/0s/u82H1rf25/J9at/m9
4+3v3p/5T+O/Wrz0q+Vff9V4/u/iPz8O+E/Ksot/NmeNq/9O/rOeO0tZylLW
vPqrzUus+/Br3gcW/2fwXy3u/dXeY/5q58niLM7iLM7i/57/an6WxVmcxX+d
fIqlLGXpt/TH34v9e3v/8f2y/hP/rfu3fG/88L3X+0fNh3/2e6I/u27wR4+H
Hx0nP8sf/dl1m39//N++386fXT/5vc/x+/Zl+t556bf//p89b/zW8fSfnu/P
isd+3+f/+D5R33s+f9R9YPVD/jY7/VH7/aPs7lerM3zrPL+lf/f86+fGGz9+
/t9r17/vufz1/u73zle/dT/bPzqe+dHj/r779tvnvT97fP41+cWP52u/2vV+
67r+D4fJTrE=
        "]], {
      DisplayFunction -> Identity, AspectRatio -> 3.333333333333333, 
       AxesLabel -> {None, None, None}, AxesOrigin -> {Automatic, Automatic}, 
       DisplayFunction :> Identity, Frame -> True, FrameLabel -> {None, None},
        FrameTicks -> {{{{0., 
            FormBox["0.`", TraditionalForm]}, {0.2, 
            FormBox["0.2`", TraditionalForm]}, {0.4, 
            FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
            FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
            FormBox["0.8`", TraditionalForm]}, {1., 
            FormBox["1.`", TraditionalForm]}}, None}, {{{-1, 
            FormBox["1", TraditionalForm]}, {-0.9, 
            FormBox["0.9`", TraditionalForm]}, {-0.8, 
            FormBox["0.8`", TraditionalForm]}, {-0.7, 
            FormBox["0.7`", TraditionalForm]}, {-0.6, 
            FormBox["0.6`", TraditionalForm]}, {-0.5, 
            FormBox["0.5`", TraditionalForm]}, {-0.4, 
            FormBox["0.4`", TraditionalForm]}, {-0.3, 
            FormBox["0.3`", TraditionalForm]}, {-0.2, 
            FormBox["0.2`", TraditionalForm]}, {-0.1, 
            FormBox["0.1`", TraditionalForm]}, {0, 
            FormBox["0", TraditionalForm]}}, None}}, FrameTicksStyle -> 12, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> {160, 350}, 
       Method -> {
        "OpacityFunction" -> None, "OpacityFunctionScaling" -> True, 
         "GridLinesInFront" -> True}, PlotRange -> {{-0.2, 0.}, {0, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJztl4dTFFccx7GODccYdOxjQaOjGcZYSBD9xmFijL3FWGMDNVGJRqKMEkuw
xJKoAcSCQbGgqGhQjBpFROwdMai0K8Bxd7t3GjVoLMm+3753O3PvL8gMO3Oz
7Gd33+/9vr+2tJn6zYiwaj4+PlW031Xtx/7Wj8eoPFeeK8+V5//recKGrOcd
J7ixPC5k3WybG++n7XAnX3LjZKuVzuEnXajaeXXjh7fcGBfaq3joT274pX5q
XuTnQnTmtV2fnHCD3a0Y6cbc3nXyds9VUX10fbYEjl9ZkJHYzI0bdChgq7Va
6Yb2sraCCx3JsIKaZNgNeivZhVX0nNOzbrBmNT7cBQu950CtQy20rbjx1SY1
Cj1c6MPM9nZgTd/JpXfaurGZufFKxbat7LCDbtdx48JzZlHF32S4HOypA09c
eJx8aWDgGhUjyOFy1COHXWhJDqsgd1Nt0DbRMDrThQH0gMrXtXn2vVDzNqBQ
wXQ6ykCybnBhDwmjgC6zStFgzEeaNC7cbZv/csnXCkjmVqUgd7504W1upL1D
VwXk7qISNCShXaAwVDjxgJnNsyKmCVPahbFsuQwnundjh9UTH6HjRjJsQRzX
5RgL70AnFLptBslsVWFiMjd0or8eIJC711T4kh4O7ocJZDZNRRAF2MHzyASS
e6uKGeS/g+dPETRR/GsuVxFLLzp4nhRie3bro9/OVHGepdFTO8+HArTguruY
HKftMNF2HoG2HaiiOa1nxxay95Drp/J92zGMDD9AIhlW8R0JZUc9ilcemNVN
qoLdmtU3ueXIprjcRxJdK7itqbF3ezmiSMhctGNhOqPg9YEnOYOnlnOd73ni
2on2Xc71vIv2lNAK9DKw8efuYB85rPC6sXF9buG9riyjFdC2omxchxvYz9Ky
rwLmbVyIjft7ldtTPPlXi86XkcK210BBIBVCGSJp/9mevKHyjS9DOe3zPKiM
ip0878qQSfvJ4PXvxDkSsAw7ye4pXgcib0qxjNY/DgpHnBNNKS9K+Tqp3B8n
+jFZI8Xze0Duhjoxn92G4LFI43m5k+JWyvPKx4fk7ubETeojJR5ezPPVm+t1
7ZC4rovMtWBrgZG5Xr8yJxnDZc6s5gyWeQzPe2/OsvuzejLXy9Yucb0eZU5l
fUDmel+TeQLVncxF/XjzZ29YQ5K5HieZDyKhyyX+gpVVtsz1+pD5MGq4Mhd1
6M31epH5KAqwzPVD5npd2CRObTtD5vq8k7moZ2+uz1uZ63NN5voclTmbdvkv
yySuzy+Z6/1G5qIveHN9Tsn8bATLaJnr81jmjahxyFzv+6USn0OFJHPRX7z5
RWroMp9Hc0bm+lyX+VUmc4DM9fkh8zYU4BKJi2tvnh74Iis0RZvnfrhUkG7w
HUntTr1eXYIvxv92TvnV4Ct8hx6JDStBAr8v+OzIRXu7hJTAYo9LqzfPO89L
+DwxePCQu5smvLVCvCe4v7bqs3wrmNXgLgav699xyfpTVlTUnLRlUCODP/15
ZIR/vBViPcFpPEZY+fejwS+EpkweNcLKnF0RdcfgB2/fH60EWCHsCB4TVGXw
Cl8rhs/atjAhyeCLtV23cFoQr3l7aJ3Bp1GCWlDA7Qs+cHF0wKB9FrTp+2Ta
jYkG/6AstX1JtAXTf5w2saCfwZsNf9Q8aooFYl+CVz1TQwuVBY8b9x/2uonB
HR2YwBb0ZO27qsFzNFVC/jFD7FdwkjnPjEwmc67Bd8045pifbkaN7u/0DD5r
8DU5Raa6MWYM4H4Irn83mfl3pcHH7O9xs9cQM+7Xntl2dqTBP353yoV7nc0Q
/gnOVJ9V2wwW3fUDDN7A/vuRajYT9hRn1E/oZnC9b5sg/BbcxB5LMiEgfHeV
MzUMfrlT0C/Xl5oQkd7o1XWX2cO1ZNaUN0HoIXj8vxuXvAoyQRNPdWYafKkW
1ZgmJujzzeA3U1igiiF0EjxhWYesVcnFuNWUOWzw8NHfp56YWgw/JkeYwft0
yd1W1rIYY7l+gten/lmERPreNHhh3vL5/WKLYO3ZLHN8a4MfOvxg0oKhRRC6
Ch7FwlenCHMuvk1b/JfJmI9jV33458VCHGPpnG9w/bu2EEJvwR3VWYIUovf2
zxMPHjb46Udr34RVFOAHy+Utf2w2+NqjZq0zFOAKj4Pg45jZOQXwZWZnGrwT
/+7W//8x4T/ufq1G
                "], {{-80., 
                  Rational[-15, 2]}, {80., 
                  Rational[15, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[-15, 2]}, {-80., 
                    Rational[15, 2]}, {80., 
                    Rational[15, 2]}, {80., 
                    Rational[-15, 2]}}, {{80., -7.5}, {-80., -7.5}, {-80., 
                  7.5}, {80., 7.5}, {80., -7.5}}]]}, {
                CapForm[None], {}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{-80., 7.5}, {80., 7.5}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{-66.66666666666667, 7.5}, 
                    Offset[{0, 4.}, {-66.66666666666667, 7.5}]}, {{-40., 7.5}, 
                    Offset[{0, 4.}, {-40., 7.5}]}, {{-13.333333333333332`, 
                    7.5}, 
                    Offset[{0, 4.}, {-13.333333333333332`, 7.5}]}, {{
                    13.333333333333332`, 7.5}, 
                    Offset[{0, 4.}, {13.333333333333332`, 7.5}]}, {{40., 7.5}, 
                    Offset[{0, 4.}, {40., 7.5}]}, {{66.66666666666667, 7.5}, 
                    Offset[{0, 4.}, {66.66666666666667, 7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-80., 7.5}, 
                    Offset[{0., 2.5}, {-80., 7.5}]}, {{-73.33333333333333, 
                    7.5}, 
                    Offset[{0., 2.5}, {-73.33333333333333, 7.5}]}, {{-60., 
                    7.5}, 
                    Offset[{0., 2.5}, {-60., 7.5}]}, {{-53.33333333333333, 
                    7.5}, 
                    
                    Offset[{0., 2.5}, {-53.33333333333333, 
                    7.5}]}, {{-46.666666666666664`, 7.5}, 
                    
                    Offset[{0., 2.5}, {-46.666666666666664`, 
                    7.5}]}, {{-33.333333333333336`, 7.5}, 
                    Offset[{0., 2.5}, {-33.333333333333336`, 
                    7.5}]}, {{-26.666666666666664`, 7.5}, 
                    Offset[{0., 2.5}, {-26.666666666666664`, 7.5}]}, {{-20., 
                    7.5}, 
                    Offset[{0., 2.5}, {-20., 7.5}]}, {{-6.666666666666666, 
                    7.5}, 
                    Offset[{0., 2.5}, {-6.666666666666666, 7.5}]}, {{0., 7.5}, 
                    Offset[{0., 2.5}, {0., 7.5}]}, {{6.666666666666666, 7.5}, 
                    
                    Offset[{0., 2.5}, {6.666666666666666, 7.5}]}, {{20., 7.5}, 
                    Offset[{0., 2.5}, {20., 7.5}]}, {{26.666666666666664`, 
                    7.5}, 
                    Offset[{0., 2.5}, {26.666666666666664`, 7.5}]}, {{
                    33.333333333333336`, 7.5}, 
                    Offset[{0., 2.5}, {33.333333333333336`, 7.5}]}, {{
                    46.666666666666664`, 7.5}, 
                    Offset[{0., 2.5}, {46.666666666666664`, 7.5}]}, {{
                    53.33333333333333, 7.5}, 
                    Offset[{0., 2.5}, {53.33333333333333, 7.5}]}, {{60., 7.5}, 
                    Offset[{0., 2.5}, {60., 7.5}]}, {{73.33333333333333, 7.5}, 
                    Offset[{0., 2.5}, {73.33333333333333, 7.5}]}, {{80., 7.5}, 
                    Offset[{0., 2.5}, {80., 7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    Offset[{0., 7.}, {-66.66666666666667, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6000", TraditionalForm], 
                    Offset[{0., 7.}, {-40., 7.5}], {0., -1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["8000", TraditionalForm], 
                    Offset[{0., 7.}, {-13.333333333333332`, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10000", TraditionalForm], 
                    Offset[{0., 7.}, {13.333333333333332`, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["12000", TraditionalForm], 
                    Offset[{0., 7.}, {40., 7.5}], {0., -1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["14000", TraditionalForm], 
                    Offset[{0., 7.}, {66.66666666666667, 7.5}], {0., -1.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
              PlotRange -> All, Frame -> True, 
              FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {160., Automatic}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.02`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.04`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.06`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.08`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.12`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.14`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.17`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.21`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.24`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.25`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.26`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.994, 0.986], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.64, 0.6626666666666667, 0.6573333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.96`", ",", "0.994`", ",", "0.986`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.994, 0.986]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.994, 0.986], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9199999999999999, 0.988, 0.972], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6133333333333333, 0.6586666666666667, 0.648], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9199999999999999`", ",", "0.988`", ",", 
                    "0.972`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9199999999999999, 0.988, 0.972]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9199999999999999, 0.988, 0.972], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.28`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8799999999999999, 0.982, 0.958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5866666666666667, 0.6546666666666667, 
                    0.6386666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8799999999999999`", ",", "0.982`", ",", 
                    "0.958`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8799999999999999, 0.982, 0.958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8799999999999999, 0.982, 0.958], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.29`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.56, 0.6506666666666667, 0.6293333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8400000000000001`", ",", "0.976`", ",", 
                    "0.9440000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8400000000000001, 0.976, 0.9440000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.97, 0.93], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5333333333333334, 0.6466666666666667, 
                    0.6200000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.97`", ",", "0.93`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.97, 0.93]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.97, 0.93], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.31`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.76, 0.964, 0.916], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5066666666666667, 0.6426666666666667, 
                    0.6106666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.76`", ",", "0.964`", ",", "0.916`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.76, 0.964, 0.916]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.76, 0.964, 0.916], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.72, 0.958, 0.902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.48, 0.6386666666666667, 0.6013333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.72`", ",", "0.958`", ",", "0.902`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.72, 0.958, 0.902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.72, 0.958, 0.902], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6799999999999999, 0.952, 0.888], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.4533333333333333, 0.6346666666666667, 
                    0.5920000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6799999999999999`", ",", "0.952`", ",", 
                    "0.888`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6799999999999999, 0.952, 0.888]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6799999999999999, 0.952, 0.888], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.34`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6399999999999999, 0.946, 0.874], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42666666666666664`, 0.6306666666666667, 
                    0.5826666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6399999999999999`", ",", "0.946`", ",", 
                    "0.874`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6399999999999999, 0.946, 0.874]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6399999999999999, 0.946, 0.874], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.35000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5999999999999999, 0.94, 0.86], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3999999999999999, 0.6266666666666667, 
                    0.5733333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5999999999999999`", ",", "0.94`", ",", 
                    "0.86`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5999999999999999, 0.94, 0.86]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5999999999999999, 0.94, 0.86], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.36`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3733333333333334, 0.6226666666666667, 
                    0.5640000000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.56`", ",", "0.9339999999999999`", ",", 
                    "0.8460000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.56, 0.9339999999999999, 0.8460000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.37`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3466666666666667, 0.6186666666666667, 
                    0.5546666666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.52`", ",", "0.9279999999999999`", ",", 
                    "0.8320000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.52, 0.9279999999999999, 0.8320000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.38`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.32, 0.6146666666666667, 0.5453333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.48`", ",", "0.9219999999999999`", ",", 
                    "0.8180000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.48, 0.9219999999999999, 0.8180000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.39`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.29333333333333333`, 0.6106666666666667, 0.536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.43999999999999995`", ",", 
                    "0.9159999999999999`", ",", "0.804`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.43999999999999995`, 0.9159999999999999, 0.804],
                     Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2666666666666666, 0.6066666666666667, 
                    0.5266666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3999999999999999`", ",", "0.9099999999999999`",
                     ",", "0.79`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3999999999999999, 0.9099999999999999, 0.79], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.41000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23999999999999994`, 0.6026666666666667, 
                    0.5173333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3599999999999999`", ",", "0.9039999999999999`",
                     ",", "0.776`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3599999999999999, 0.9039999999999999, 0.776], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.42`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32000000000000006`, 0.898, 0.762], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.21333333333333337`, 0.5986666666666667, 0.508], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.32000000000000006`", ",", "0.898`", ",", 
                    "0.762`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32000000000000006`, 0.898, 0.762]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32000000000000006`, 0.898, 0.762], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.43`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28, 0.892, 0.748], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1866666666666667, 0.5946666666666667, 
                    0.4986666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.28`", ",", "0.892`", ",", "0.748`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28, 0.892, 0.748]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28, 0.892, 0.748], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.44`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.886, 0.734], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.16, 0.5906666666666667, 0.48933333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.24`", ",", "0.886`", ",", "0.734`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.886, 0.734]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.886, 0.734], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.45`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0.88, 0.72], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1333333333333333, 0.5866666666666667, 0.48], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19999999999999996`", ",", "0.88`", ",", 
                    "0.72`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0.88, 0.72]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0.88, 0.72], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.15999999999999992`, 0.874, 0.706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10666666666666662`, 0.5826666666666667, 
                    0.4706666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15999999999999992`", ",", "0.874`", ",", 
                    "0.706`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15999999999999992`, 0.874, 0.706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15999999999999992`, 0.874, 0.706], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.47000000000000003`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.11999999999999988`, 0.868, 0.692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07999999999999993, 0.5786666666666667, 
                    0.4613333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.11999999999999988`", ",", "0.868`", ",", 
                    "0.692`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.11999999999999988`, 0.868, 0.692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.11999999999999988`, 0.868, 0.692], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.08000000000000007, 0.862, 0.678], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.053333333333333385`, 0.5746666666666667, 
                    0.45200000000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.08000000000000007`", ",", "0.862`", ",", 
                    "0.678`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.08000000000000007, 0.862, 0.678]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.08000000000000007, 0.862, 0.678], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.49`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.040000000000000036`, 0.856, 0.664], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.026666666666666693`, 0.5706666666666667, 
                    0.4426666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.040000000000000036`", ",", "0.856`", ",", 
                    "0.664`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.040000000000000036`, 0.856, 0.664]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.040000000000000036`, 0.856, 0.664], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.85, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5666666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.85`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.85, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.85, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.51`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.842, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5613333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.842`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.842, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.842, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.52`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.834, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.556, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.834`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.834, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.834, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.53`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.826, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5506666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.826`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.826, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.826, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.54`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.818, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5453333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.818`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.818, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.818, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.55`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8099999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.54, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8099999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8099999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.8099999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.56`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8019999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5346666666666666, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.8019999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8019999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8019999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5700000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7939999999999999, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5293333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.7939999999999999`", ",", "0.65`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7939999999999999, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.7939999999999999, 0.65], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.58`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.786, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.524, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.786`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.786, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.786, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.59`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.778, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5186666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.778`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.778, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.778, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.77, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5133333333333334, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.77`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.77, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.77, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.61`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.762, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.508, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.762`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.762, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.762, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.62`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.754, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.5026666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.754`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.754, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.754, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.63`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.746, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.49733333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.746`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.746, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.746, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.64`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.738, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.492, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.738`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.738, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.738, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.65`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.73, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4866666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.73`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.73, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.73, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.66`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.722, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.48133333333333334`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.722`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.722, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.722, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.67`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.714, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.476, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.714`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.714, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.714, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.68`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.706, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4706666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.706`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.706, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.706, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.698, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4653333333333333, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.698`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.698, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.698, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7000000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.69, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.45999999999999996`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.69`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.69, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.69, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.71`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.682, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4546666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.682`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.682, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.682, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.72`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.674, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44933333333333336`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.674`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.674, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.674, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.73`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.666, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.44400000000000006`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.666`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.666, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.666, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.74`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.658, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4386666666666667, 0.43333333333333335`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.658`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.658, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.658, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.75`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.65, 0.65], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.43333333333333335`, 0.43333333333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.65`", ",", "0.65`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.65, 0.65]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.65, 0.65], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.76`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6416000000000001, 0.6444], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4277333333333334, 0.4296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.6416000000000001`", ",", 
                    "0.6444`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6416000000000001, 0.6444]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6416000000000001, 0.6444], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.77`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6332, 0.6388], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.42213333333333336`, 0.4258666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6332`", ",", "0.6388`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6332, 0.6388]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6332, 0.6388], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.78`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6248, 0.6332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.41653333333333337`, 0.42213333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6248`", ",", "0.6332`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6248, 0.6332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6248, 0.6332], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.79`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6164, 0.6276], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4109333333333333, 0.41840000000000005`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.6164`", ",", "0.6276`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6164, 0.6276]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6164, 0.6276], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.608, 0.622], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.4053333333333333, 0.4146666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.608`", ",", "0.622`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.608, 0.622]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.608, 0.622], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.81`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5996, 0.6164], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3997333333333334, 0.4109333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5996`", ",", "0.6164`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5996, 0.6164]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5996, 0.6164], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8200000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5912, 0.6108], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.39413333333333334`, 0.4072], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5912`", ",", "0.6108`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5912, 0.6108]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5912, 0.6108], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8300000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5828, 0.6052], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38853333333333334`, 0.40346666666666664`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5828`", ",", "0.6052`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5828, 0.6052]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5828, 0.6052], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.84`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5744, 0.5996], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.38293333333333335`, 0.3997333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5744`", ",", "0.5996`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5744, 0.5996]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5744, 0.5996], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.85`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3773333333333334, 0.3960000000000001], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.5660000000000001`", ",", 
                    "0.5940000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5660000000000001, 0.5940000000000001], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.86`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5576, 0.5884], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.37173333333333336`, 0.3922666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5576`", ",", "0.5884`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5576, 0.5884]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5576, 0.5884], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.87`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5492, 0.5828], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.36613333333333337`, 0.38853333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5492`", ",", "0.5828`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5492, 0.5828]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5492, 0.5828], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.88`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5408, 0.5772], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3605333333333333, 0.38480000000000003`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5408`", ",", "0.5772`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5408, 0.5772]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5408, 0.5772], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.89`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5324, 0.5716], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3549333333333333, 0.38106666666666666`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5324`", ",", "0.5716`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5324, 0.5716]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5324, 0.5716], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.524, 0.5660000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3493333333333334, 0.3773333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.524`", ",", 
                    "0.5660000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.524, 0.5660000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.524, 0.5660000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.91`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5156, 0.5604], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.34373333333333334`, 0.37360000000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5156`", ",", "0.5604`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5156, 0.5604]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5156, 0.5604], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5072, 0.5548], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33813333333333334`, 0.3698666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.5072`", ",", "0.5548`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5072, 0.5548]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5072, 0.5548], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.93`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49879999999999997`, 0.5492], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33253333333333335`, 0.36613333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49879999999999997`", ",", 
                    "0.5492`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49879999999999997`, 0.5492]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49879999999999997`, 0.5492], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9400000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.49039999999999995`, 0.5436], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3269333333333333, 0.3624], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.49039999999999995`", ",", 
                    "0.5436`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.49039999999999995`, 0.5436]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.49039999999999995`, 0.5436], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9500000000000001`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.482, 0.538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.32133333333333336`, 0.3586666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.482`", ",", "0.538`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.482, 0.538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.482, 0.538], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.96`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4736, 0.5324], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31573333333333337`, 0.3549333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4736`", ",", "0.5324`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4736, 0.5324]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4736, 0.5324], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.97`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.46520000000000006`, 0.5268], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.31013333333333337`, 0.35120000000000007`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.46520000000000006`", ",", 
                    "0.5268`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.46520000000000006`, 0.5268]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.46520000000000006`, 0.5268], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.98`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4568, 0.5212], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3045333333333333, 0.3474666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.4568`", ",", "0.5212`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4568, 0.5212]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4568, 0.5212], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.99`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.4484, 0.5156000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.2989333333333334, 0.3437333333333334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.`", ",", "0.4484`", ",", 
                    "0.5156000000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.4484, 0.5156000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.4484, 0.5156000000000001], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.44, 0.51], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.29333333333333333`, 0.34], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.44`", ",", "0.51`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.44, 0.51]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.44, 0.51], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"1.`", " ", "#1"}]}]}], "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"2961.877784916933`", ",", "14962.744637723274`"}],
                    "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "160.`"}], ",", 
             RowBox[{"ScalingFunctions", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Left"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{3.823094555955296*^9},
 CellLabel->
  "Out[1350]=",ExpressionUUID->"84655cb7-1fdc-4b1b-b728-5e38296b9ae1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["probability of finding a given early - warning score", "Chapter",
 CellChangeTimes->{{3.8230946512319393`*^9, 
  3.823094656440728*^9}},ExpressionUUID->"86fb9bbd-b5a2-45d9-a3aa-\
459aeb90da59"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "cef2", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cef2", "=", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EdgeForm", "[", "]"}], ",", 
       RowBox[{"FaceForm", "[", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"ChartElementData", "[", "\"\<BoxWhisker\>\"", "]"}], "[", 
         "##", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"l_Line", "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.55, 0.13, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.3666666666666667, 0.08666666666666667, 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.55`", ",", "0.13`", ",", "1"}], "]"}], 
                 NumberMarks -> False]],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.55, 0.13, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.55, 0.13, 1],
              Editable->False,
              Selectable->False], ",", "l"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"GrayLevel", "[", "0", "]"}], "\[Rule]", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.55, 0.13, 1], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.3666666666666667, 0.08666666666666667, 0.6666666666666666],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.55`", ",", "0.13`", ",", "1"}], "]"}], 
               NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.55, 0.13, 1]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.55, 0.13, 1],
            Editable->False,
            Selectable->False]}]}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"ChartElementData", "[", 
         RowBox[{"\"\<PointDensity\>\"", ",", 
          RowBox[{"\"\<PointStyle\>\"", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
             RowBox[{"PointSize", "[", "0.015", "]"}], ",", "Black"}], 
            "]"}]}]}], "]"}], "[", "##", "]"}]}], "}"}], "&"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fig1", "=", 
    RowBox[{"BoxWhiskerChart", "[", 
     RowBox[{
      RowBox[{"Reverse", "@", 
       RowBox[{"Transpose", "@", "datatemp"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartElementFunction", "\[Rule]", "cef2"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"0.8", "GoldenRatio"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameTicksStyle", "\[Rule]", "12"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"All", ",", "All"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "1", ",", "0.2"}], "]"}], ",", "None"}], 
          "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "Black", "]"}], ",", " ", "Gray"}], "]"}]}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "170"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BarOrigin", "\[Rule]", "Left"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<MedianMarker\>\"", ",", "1", ",", "None"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\"\<MeanMarker\>\"", ",", "1", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", ".01", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.55, 0.13, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3666666666666667, 0.08666666666666667, 0.6666666666666666],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.55`", ",", "0.13`", ",", "1"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.55, 0.13, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.55, 0.13, 1],
             Editable->False,
             Selectable->False]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\"\<Fences\>\"", ",", "1", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", ".01", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.55, 0.13, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3666666666666667, 0.08666666666666667, 0.6666666666666666],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.55`", ",", "0.13`", ",", "1"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.55, 0.13, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.55, 0.13, 1],
             Editable->False,
             Selectable->False]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\"\<Whiskers\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", ".01", "]"}], ",", 
            RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.55, 0.13, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3666666666666667, 0.08666666666666667, 0.6666666666666666],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.55`", ",", "0.13`", ",", "1"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.55, 0.13, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.55, 0.13, 1],
             Editable->False,
             Selectable->False]}], "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", 
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.55, 0.13, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3666666666666667, 0.08666666666666667, 0.6666666666666666],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.55`", ",", "0.13`", ",", "1"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.55, 0.13, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.55, 0.13, 1],
             Editable->False,
             Selectable->False], ",", 
            RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "]"}], ",", " ",
          "White"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartElementFunction", "\[Rule]", 
       RowBox[{
       "ChartElementDataFunction", "[", "\"\<BoxWhisker\>\"", "]"}]}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fig2", "=", 
    RowBox[{"BoxWhiskerChart", "[", 
     RowBox[{
      RowBox[{"Reverse", "@", 
       RowBox[{"Transpose", "@", "datatemp"}]}], ",", 
      RowBox[{
       RowBox[{"##", "&"}], "@@", "options"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"0.9", "GoldenRatio"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameTicksStyle", "\[Rule]", "12"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"All", ",", "All"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "1", ",", "0.2"}], "]"}], ",", "None"}], 
          "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "170"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BarOrigin", "\[Rule]", "Left"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"fig3", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{"fig2", ",", " ", "fig1"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8230945638176527`*^9, 3.8230945648135242`*^9}, {
  3.823094597056683*^9, 
  3.823094626483869*^9}},ExpressionUUID->"b7b5b380-d73b-4d45-b058-\
aa2a03edb37d"],

Cell[BoxData[
 GraphicsBox[{{
    {Opacity[0], 
     PointBox[{{-0.03888888888888889, 0.5426676096012669}, {
      0.8166666666666667, 11.457332390398733`}}]}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.0625, 0.6552656370200842}, {0.0625, 
               1.3447343629799158`}, {0.02139222941720629, 
               1.3447343629799158`}, {0.02139222941720629, 
               0.6552656370200842}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.0515975402960684, 1.3447343629799158`}, {
                0.0515975402960684, 0.6552656370200842}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.02139222941720629, 1.}, {0.01282051282051282, 
                1.}}, {{0.0625, 1.}, {0.18181818181818182`, 1.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.01282051282051282, 1.3447343629799158`}, {
                0.01282051282051282, 0.6552656370200842}}, {{
                0.18181818181818182`, 1.3447343629799158`}, {
                0.18181818181818182`, 0.6552656370200842}}}]}, {}}]},
           
           ImageSizeCache->{{16.760693309010094`, 52.239306690989906`}, {
            75.76069330901008, 96.2393066909899}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.18181818181818182`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], "0.0625`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.037037037037037035`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.02139222941720629`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.01282051282051282`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.18181818181818182`}, {
             Style["75%", Bold], 0.0625}, {
             Style["median", Bold], 0.037037037037037035`}, {
             Style["25%", Bold], 0.02139222941720629}, {
             Style["min", Bold], 0.01282051282051282}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.019166666666666665`, 1.6552656370200842`}, {
               0.019166666666666665`, 2.3447343629799158`}, {0., 
               2.3447343629799158`}, {0., 
               1.6552656370200842`}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.011099371448105596`, 2.3447343629799158`}, {
                0.011099371448105596`, 1.6552656370200842`}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 2.}, {0., 2.}}, {{0.019166666666666665`, 2.}, {
                0.09090909090909091, 2.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 2.3447343629799158`}, {0., 
                1.6552656370200842`}}, {{0.09090909090909091, 
                2.3447343629799158`}, {0.09090909090909091, 
                1.6552656370200842`}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 37.239306690989906`}, {
            55.76069330901008, 76.2393066909899}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.09090909090909091`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.019166666666666665`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.09090909090909091}, {
             Style["75%", Bold], 0.019166666666666665`}, {
             Style["median", Bold], 0.}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.03777472527472528, 2.6552656370200842`}, {
               0.03777472527472528, 3.3447343629799158`}, {0., 
               3.3447343629799158`}, {0., 
               2.6552656370200842`}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.02263421567707399, 3.3447343629799158`}, {
                0.02263421567707399, 2.6552656370200842`}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 3.}, {0., 3.}}, {{0.03777472527472528, 3.}, {
                0.1, 3.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 3.3447343629799158`}, {0., 
                2.6552656370200842`}}, {{0.1, 3.3447343629799158`}, {0.1, 
                2.6552656370200842`}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 38.239306690989906`}, {
            36.76069330901008, 57.239306690989906`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], "0.1`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.03777472527472528`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.014705882352941176`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.1}, {
             Style["75%", Bold], 0.03777472527472528}, {
             Style["median", Bold], 0.014705882352941176`}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.039615384615384615`, 3.6552656370200842`}, {
               0.039615384615384615`, 4.344734362979915}, {0., 
               4.344734362979915}, {0., 
               3.6552656370200842`}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.022171782738233472`, 4.344734362979915}, {
                0.022171782738233472`, 3.6552656370200847`}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 4.}, {0., 4.}}, {{0.039615384615384615`, 4.}, {
                0.08695652173913043, 4.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 4.344734362979915}, {0., 
                3.6552656370200847`}}, {{0.08695652173913043, 
                4.344734362979915}, {0.08695652173913043, 
                3.6552656370200847`}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 36.239306690989906`}, {
            17.76069330901009, 38.239306690989906`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.08695652173913043`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.039615384615384615`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.02040816326530612`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.08695652173913043}, {
             Style["75%", Bold], 0.039615384615384615`}, {
             Style["median", Bold], 0.02040816326530612}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.07697610294117647, 4.655265637020084}, {
               0.07697610294117647, 5.344734362979915}, {0., 
               5.344734362979915}, {0., 
               4.655265637020084}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.053320688670265896`, 5.344734362979915}, {
                0.053320688670265896`, 4.655265637020085}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 5.}, {0., 5.}}, {{0.07697610294117647, 5.}, {
                0.3076923076923077, 5.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 5.344734362979915}, {0., 4.655265637020085}}, {{
                0.3076923076923077, 5.344734362979915}, {0.3076923076923077, 
                4.655265637020085}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 
            74.2393066909899}, {-2.239306690989906, 18.239306690989906`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.3076923076923077`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.07697610294117647`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.045454545454545456`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.3076923076923077}, {
             Style["75%", Bold], 0.07697610294117647}, {
             Style["median", Bold], 0.045454545454545456`}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.09303977272727273, 5.655265637020084}, {
               0.09303977272727273, 6.344734362979915}, {0.03884615384615385, 
               6.344734362979915}, {0.03884615384615385, 
               5.655265637020084}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.07691992476946395, 6.344734362979915}, {
                0.07691992476946395, 5.655265637020085}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.03884615384615385, 6.}, {0., 6.}}, {{
                0.09303977272727273, 6.}, {0.3333333333333333, 6.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 6.344734362979915}, {0., 5.655265637020085}}, {{
                0.3333333333333333, 6.344734362979915}, {0.3333333333333333, 
                5.655265637020085}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 
            78.2393066909899}, {-21.239306690989906`, -0.7606933090100938}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.3333333333333333`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.09303977272727273`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.07142857142857142`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.03884615384615385`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.3333333333333333}, {
             Style["75%", Bold], 0.09303977272727273}, {
             Style["median", Bold], 0.07142857142857142}, {
             Style["25%", Bold], 0.03884615384615385}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.10677083333333333`, 6.655265637020084}, {
               0.10677083333333333`, 7.344734362979915}, {0.0364010989010989, 
               7.344734362979915}, {0.0364010989010989, 
               6.655265637020084}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.07056717802626213, 7.344734362979915}, {
                0.07056717802626213, 6.655265637020085}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.0364010989010989, 7.}, {0., 7.}}, {{
                0.10677083333333333`, 7.}, {0.19230769230769232`, 7.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 7.344734362979915}, {0., 6.655265637020085}}, {{
                0.19230769230769232`, 7.344734362979915}, {
                0.19230769230769232`, 6.655265637020085}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 
            54.239306690989906`}, {-40.239306690989906`, \
-19.760693309010094`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.19230769230769232`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.10677083333333333`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.0625`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.0364010989010989`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.19230769230769232`}, {
             Style["75%", Bold], 0.10677083333333333`}, {
             Style["median", Bold], 0.0625}, {
             Style["25%", Bold], 0.0364010989010989}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.125, 7.655265637020084}, {0.125, 
               8.344734362979915}, {0.04041666666666667, 8.344734362979915}, {
               0.04041666666666667, 
               7.655265637020084}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.09695587249500433, 8.344734362979915}, {
                0.09695587249500433, 7.655265637020085}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.04041666666666667, 8.}, {0., 8.}}, {{0.125, 8.}, {
                0.45454545454545453`, 8.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 8.344734362979915}, {0., 7.655265637020085}}, {{
                0.45454545454545453`, 8.344734362979915}, {
                0.45454545454545453`, 7.655265637020085}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 
            98.2393066909899}, {-60.23930669098992, -39.760693309010094`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.45454545454545453`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], "0.125`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.0975609756097561`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.04041666666666667`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.45454545454545453`}, {
             Style["75%", Bold], 0.125}, {
             Style["median", Bold], 0.0975609756097561}, {
             Style["25%", Bold], 0.04041666666666667}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.16346153846153846`, 8.655265637020085}, {
               0.16346153846153846`, 9.344734362979915}, {0.0736280487804878, 
               9.344734362979915}, {0.0736280487804878, 
               8.655265637020085}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.13416112303170105`, 9.344734362979915}, {
                0.13416112303170105`, 8.655265637020085}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.0736280487804878, 9.}, {0., 9.}}, {{
                0.16346153846153846`, 9.}, {0.5, 9.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 9.344734362979915}, {0., 8.655265637020085}}, {{
                0.5, 9.344734362979915}, {0.5, 8.655265637020085}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 
            106.2393066909899}, {-79.2393066909899, -58.760693309010094`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], "0.5`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.16346153846153846`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.1111111111111111`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.0736280487804878`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.5}, {
             Style["75%", Bold], 0.16346153846153846`}, {
             Style["median", Bold], 0.1111111111111111}, {
             Style["25%", Bold], 0.0736280487804878}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.19375, 9.655265637020085}, {0.19375, 
               10.344734362979915`}, {0.08333333333333333, 
               10.344734362979915`}, {0.08333333333333333, 
               9.655265637020085}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.13676552658209626`, 10.344734362979915`}, {
                0.13676552658209626`, 9.655265637020085}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.08333333333333333, 10.}, {0., 10.}}, {{0.19375, 
                10.}, {0.375, 10.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 10.344734362979915`}, {0., 
                9.655265637020085}}, {{0.375, 10.344734362979915`}, {0.375, 
                9.655265637020085}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 
            85.2393066909899}, {-98.23930669098992, -77.7606933090101}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], "0.375`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], "0.19375`"}, {
             
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.11538461538461539`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.08333333333333333`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.375}, {
             Style["75%", Bold], 0.19375}, {
             Style["median", Bold], 0.11538461538461539`}, {
             Style["25%", Bold], 0.08333333333333333}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[1], EdgeForm[{RGBColor[0.55, 0.13, 1], Thickness[0.01]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.38085284280936454`, 10.655265637020085`}, {
               0.38085284280936454`, 11.344734362979915`}, {
               0.23307692307692307`, 11.344734362979915`}, {
               0.23307692307692307`, 
               10.655265637020085`}}], {}, {{}, {}}, {}, {}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{0.3238067762657249, 11.344734362979915`}, {
                0.3238067762657249, 10.655265637020085`}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                CapForm["Butt"], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0.23307692307692307`, 11.}, {0., 11.}}, {{
                0.38085284280936454`, 11.}, {0.7777777777777778, 11.}}}]}, {
               GrayLevel[0], 
               Directive[
                Thickness[0.01], 
                RGBColor[0.55, 0.13, 1]], 
               
               LineBox[{{{0., 11.344734362979915`}, {0., 
                10.655265637020085`}}, {{0.7777777777777778, 
                11.344734362979915`}, {0.7777777777777778, 
                10.655265637020085`}}}]}, {}}]},
           
           ImageSizeCache->{{14.760693309010094`, 
            153.23930669098988`}, {-118.23930669098992`, -97.7606933090101}}],
          
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.7777777777777778`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.38085284280936454`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.3076923076923077`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.23307692307692307`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.7777777777777778}, {
             Style["75%", Bold], 0.38085284280936454`}, {
             Style["median", Bold], 0.3076923076923077}, {
             Style["25%", Bold], 0.23307692307692307`}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], 
         "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}, {
    {Opacity[0], 
     PointBox[{{-0.03888888888888889, 0.5426676096012669}, {
      0.8166666666666667, 11.457332390398733`}}]}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.0625, 0.6552656370200842}, {0.0625, 
                1.3447343629799158`}, {0.02139222941720629, 
                1.3447343629799158`}, {0.02139222941720629, 
                0.6552656370200842}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.037037037037037035`, 1.3447343629799158`}, {
                  0.037037037037037035`, 0.6552656370200842}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0.02139222941720629, 1.}, {0.01282051282051282, 
                  1.}}, {{0.0625, 1.}, {0.18181818181818182`, 1.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0.01282051282051282, 1.1723671814899579`}, {
                  0.01282051282051282, 0.8276328185100421}}, {{
                  0.18181818181818182`, 1.1723671814899579`}, {
                  0.18181818181818182`, 0.8276328185100421}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1:eJxF2nlUzfkfx/GMIS332oYhUSlmZB1LYrq3bKEyDRWDjBnZGS0zmDDd1TYt
iLIVIiQMshX33hYqM9ZBYmQrM0yTJeuPoX6/3zn39X79U+d5Hqe/vt/7+nzu
OblNiRwz7QMbG5u5//vx/9/GvFE+qwt1vt36ds588vq+L7r6z5ruTYwvfS8N
H3Vk/FO9OBrufC2om7uLURwNnzk1KLNm1FJxNPzIs0DnY0uWiaPhNrrAdZq9
y8XR8KCmgY4j/1ghjoZvSA8wtrD7WRwNf9g14N3N/vHiaHivEyN/2Dk9QRwN
144YWTMvJVEcDT9zbcRU79NJ4mh4m2kjKho8XyWOhh9845795+rV4mj49QL3
6QGfrhFHw98td+94IJ+OhnsEu99uOS5ZHA0f0dp904+P6Wh41K2OY28tXSuO
hq/L7NhicPt14mi4aU7HC7uO0NHwu707/uwQlCKOhjd56+YfVUVHw7sVun1Q
tihVHA0PXeFmGdBivTga/mOw26Ite+ho+LbWbl4NB20QR8vzv+X6bMZ1Ohpe
k+n6y7nIjeJo+EdzXWd/ZrtJHA337uPaOXULHQ3/5q1L5dt+m8XRcGOhy5bJ
5+lo+L4VLhNOT00TR8s+BLu07vKOjob/p7XL5cS16eJo2Y/bHZKeeW7hflgb
PnRnh4BxRXS07MvcDo1N47dyX6wNX92nQ5FrLR0Nn/BemT946DZxNPzxXWX7
l6voaPn8n1Yu3n2Tjpbnl6W8Mf6TDD4/a8N3xSv7O35PR8MHRipTLBY6Gn5u
jPJ5lP12cbQ8fy/laPexdDT8RVvlgbIMOhq+7L1CseIRHQ13uqeYM3DADnG0
vD+nFb/WGOlouF+W4pOtl+ho+OV4xdLRzpniaPj0SEVVw5l0tLx/YxSDjh2m
o+EJXoqtM+vpaHgHJ8V7p8Cd4mh4znvHiedT6Wh5f+855mkq6WjZ79OOH/fu
sYv7bW347CzH+fdj6Wh4XbzjldRiOlre/0jHz0Y2383339qy/yGOq/4Np6Ph
x7wcH+3PoqPhAU6Ogd+8oKPhFe8d9rTwyxJHy/lxz8G2OJ6Ohn9Y7DBtYTkd
DU/NcjjVxX2POBrumeDgVjGPjpbzJ9JBk3SCjoZ/GeJwy69xtjgaXunl8Pnz
0XQ0fIGTw8ad6XS0nF919q/H/U1Hw9Pu2YfZ99srjob3KLY/bNLS0fCiLPvm
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
1g==
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
                    
                    "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["

1: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
P1BC4jQ=
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   RectangleBox[{0.008595571095571096, 0.6552656370200842}, {
                    0.18604312354312355`, 1.3447343629799158`}]}}], 
                Annotation[#, {{0.6552656370200842, 1.3447343629799158`}, {
                 0.008595571095571096, 0.18604312354312355`}}, 
                 "BoundingBox"]& ], Antialiasing -> True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQPUnFE4gW2b94O2ufZv0H+1kzwcDewGflzd+qr+13
C23VDty9yd7c60q8w/cX9iLWG4WtNy62X3Sq6uer75/sq0XWuT+sWmJ/Ui+s
0FjvI5yfN++h6kOrD/Yc8jUfDrLPt49nWzrX69M7ewYwWGDvktmVtnzWS/tQ
MFhqz3Z0rfvuZZ/sUxS5I084TbN/p3p0/eefX6D8Y/aKSm4lQoc+2luy6i9/
8HSK/fS+tKnTuJ9B5ZfZr/6Ueuv/l49w8+66LE9hYf4Mt89SM7kzZeYLOH+T
6CM+F4l39vOEnmg6zptkn3qfQUfb4rn9tGqpxJ3LJ9rrTRR5zGXxwV5j/cI9
bZ922TssvvlrozDM/5vtXyx6eWt90AeofUftv2qce1+/8wPU/A32L1UPvFxg
8RKu3rAzYtaHktf2MscLgWiPPfMu10kv1D7C+Z9iOf6eXvDe3k08tuSi63H7
6Oz3m8zWvYXyl9vvDdKaIt74Ce6/qVzSyYEp76H659hvqi6Yrnb+Ezz+rtps
ubds3gd4eLXpznrRvfGt/bwbnXNvdO61N3mweM/fGc/tC+QP1rJ8n2jfw6at
/frhB3vrW3v8C09OsJePuXnxZP5rezkw6LNnXzBtrbn3e3upJY5A1GWffcF1
ZoLHS/tr7cd+XYhYby92ZBtfav17+wz9hXtbvi2y13zrMt+f75O9wo9G+R+N
/fYXF8zptVj50j5cYLJ2x8mp9lfT/a3LTn+Appcp9kcNJ8V+/fwJzr/hZ3r5
ldZLe0EwmGj/1+DJjJalX+Dpb8pdTuNTXxHxu8P8acY8wS/w8OJdKLdy1f63
UPWH7afsPp65J+gjPLymRzXxRa94Cg+vhsMZ21I2frCH5IdN9uEnVV5t3PUF
Hp+S1uapJspv7AGQn3oc
                 "]]}}]}},
           
           ImageSizeCache->{{18.585786437626904`, 52.41421356237309}, {
            77.31029556366079, 94.41421356237309}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.18181818181818182`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], "0.0625`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.037037037037037035`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.02139222941720629`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.01282051282051282`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.18181818181818182`}, {
             Style["75%", Bold], 0.0625}, {
             Style["median", Bold], 0.037037037037037035`}, {
             Style["25%", Bold], 0.02139222941720629}, {
             Style["min", Bold], 0.01282051282051282}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.019166666666666665`, 1.6552656370200842`}, {
                0.019166666666666665`, 2.3447343629799158`}, {0., 
                2.3447343629799158`}, {0., 
                1.6552656370200842`}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0., 2.3447343629799158`}, {0., 
                  1.6552656370200842`}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 2.}, {0., 2.}}, {{0.019166666666666665`, 
                  2.}, {0.09090909090909091, 2.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 2.1723671814899577`}, {0., 
                  1.8276328185100421`}}, {{0.09090909090909091, 
                  2.1723671814899577`}, {0.09090909090909091, 
                  1.8276328185100421`}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1:eJxF13lUznn7wHEiyRoljFB4iqxlyVjLGmoKETGhxVjLEiVbo6KRypKkbKXF
eErJklFNTfYYS9bIMjSIDKNtNKnn9zvnfn+uf+q8z+vc3ef+9PleXZm4eU/z
1GrQoEHQ/335/+8BqWcbtQ6dn2v4jX5h9fqa0XTlqirDxvla1tZ+n++eHTxX
OY3v3Ot7xGGGs3Iav51Ru+ytzzTlNG58pNFqrV5TlNN43uOWLQYtslFO4w1m
zI+MOthPOa18y4dWE67rjVauaTzgfdJUr9NWymn1+Ydfi9COHa+cVq9vkFt1
d46DvF7T6v3dH/ebGu4k769p9fnGz3A75zVbOa1+fs/be7s6uMrP1zR+JDjR
48K+Bcpp9f7VbnVVOh7y/prGHRcZR5v7LVRO4+lFTy1c3y5STuN6U2Kv75q1
VDmNr8ie5Xnp6nLlNP7WMHTzBqMVymk8+tZiuyinlcpp3DbEtmP6jlXKafyT
tdnraxdXK6fV+X3RPvWq1kfOT9PqfDJKNn8dtFbOR9PqfJdesGu/3FfOV9Pq
/LrHd7RI9JPz0zQ+vzjg9eSn65TTeNO98055tFuvnMbP2Y8K2GS/QTmNL2rS
2T46eKNyGu+Q+2/HjJxNymn8qu/j19crNyun8RHRxUWfowKU03hkxZS8essf
ldPq9++YldTiljitnr9U87COS7fI86dpdT90Y1ab6gTK/dC0+v176roMPCpO
q/uT72dtPTpI7o+m1f3o8tbU/ok4jVf4O7d08Q1WTuN2Dy+XL9TfqpzGEwYO
ebw6TZzGayMS8wKmbFNO405lBslhb8RpPMU2KCwmMEQ5jTdOLF+d3PUn5TQ+
q6G7y+kscVrd7+8LrX9z3i73W9Pq/p63MbtZLk6r+294suWTiFC5/5pW93uV
ccWb3jvkfmtazZ9bEY8rrojTuEfv+ryGHmHKaTx7m1dyqwbhymncoORpWKcD
4jS+zNrep+fQCOU0fvFAtsvge+I0Hl6719hk6E7ltPr8x3/fY7ZVnMZLZmnr
9LsnTqvz0RnpP6jbLjkfTavn94zPh2ErxGk1P9xT5tv8Kk6r57tNyd2JLXbL
861p9fctt9PE71zEafzd8unnnY6J07ihUWjfOVXiND6mIP/IgnF7lNO4l1+N
/qLd4jQeY2q5zeuFOI1fvre4xqdfpHJazZctccvXbxCncSOLohc/FojTav48
13MK6bBX5o+mcZ8w2yvhC8VpNZ+GBwzbe1qcxm+UZqbGakUpp/GqfR+N4x3F
abzbBLPIY4fEafy7CledtDJxGvePj/I/M2yfchpPcrz5IStEnMYL67QX5D8Q
p/G6lJH3rvaIVk7jPeesmXhrlTit5qdu6vn7eeK02r8yS/oWt9ov+5em1Xz1
NIp7OVecxh/pOxmUHhen1fzND9328R9xGu+34kJN5YQY5TTu0uXf5bWR4jS+
9YblH1qvxGk8w3+Jk65FrHIaf9Yz/krrzeI03uxh0TDD38VpfEhwmxNGnQ4o
p9X8HzjJpPticRrf8UdAZK9McVrNx4hzOgO0D8p81LSajyM/+Q+ZLk6r+Vhm
9teIOHFazceYeQvGfhSn8YW2++5NGnlIOY3vrro50TFUnMZ/TWiSNbNInFbz
cdqoft+bHZb5qGk1HxuujXNfI06r+ZiWarDkgjiNZ574PPZc0yPKaTU/gsM3
ZvUXp/FXc80zf50pTuNfBl7+9NtGcRpv2dzN/FKCOI13f/nV/ep1cRr/9pf9
B69/Fqdxh52DH97sGKecxj1/uKNXaC1O4+tHLZ98/wdxGt/VTjfoUbg4jSeX
JeQ8OSNO4zkXrKufFYvT+N2Y4gEvG8Urp/HSlX5L/jQXp/F6W4OEt1PFaVzf
OP3pez9xGu9VPaX9x8PiND765hvHz5fFaXxGYuD2yg/iNL50Q9eL/xgcVU7j
P07P+vrvcHEa32fubFXvJk7jqQ3LV2htF6fxC4/Cj2ufFKfxojTzkqaPxGn8
49bLnVvUi9O4tqubc2vTBOU03mlw3c629uI03r9FTEE7H3EaH/9qcOOOseI0
Puf8nZFG+eI0vnLXct+upeI0vm2R7slueonKafzg6MR3/7ESp/FThjY9ermK
0/i1D8Xf9wkWp/HnF/329U8Rp/HKWIM7lnfFabz56vRmQ2rEadxkst24b02S
lNO4lcnbjSNsxWl8yj+BmaO9xWl8wa2uf4+JEqdx36Qs8wk54jQettHZY1KJ
OI0fdSo/aNc8WTmN/9I74qGDpTiN39Lq3Wb6bHEa/7Po8uSZAeI0/m+6W9Ds
ZHEabxNSlzP3pjiNm82LqZ5XKU7jI4cMsXA3Oqacxqe3LFyycKw4jf9Qsjxh
8RJxGt+Ypfts2S5xGt+zO7H9inPiNP7zYpupq5+L03iu9dPta5v8rJzG77df
d3FdX3Eaf/+XQd0GJ3Eab3g53SpgvTiNtz9otzIwXpzG+/q8Pb71mjiNj50S
VPLTJ3Ean93NuEtY++PKadz7S5bzzlHiNB5423nXHk9xGt+fXF4QtUOcxtM2
RTSOOSVO45dm9B518LE4jT/pc8X3SMP/Kqfxvxu5nzzaU5zGdZ7UvUtyEKfx
zhkxPY6vFafxgT8NcU09KE7jk+YX7ku/KE7j86y87px6L07ja1o1a57ZNkU5
jYf+mTju/LfiNH4422ZTznxxGj+z52lm3jZxGr++ZN3fF06I0/gfNu16X7kv
TuPVHU56FNSK02p//GR36PfuqbI/alrtj1fePrw9WZxW++OhoDb3VorTan9c
YzzlYbQ4rfZHu+ygx7nitNofu8/69elrcVrtjzXl1S9anpD9UdN44p0Ii5JB
4jSedaz30jdzxGn8zuYrCe+2iNP4m5nuzz78LE7jX/vWt//7tjit9kft2KkV
1eK02h+Lh4RWd0mT/VHTan88VXixZrw4rfbH7V51X5eJ02p/XNBsaMNIcVrt
j0OTVjbOEqfV/th6zH91XorT+Mxyr1XBjdOV0/iLZyNa63QQp/FlBc1SQnqL
03jVmUe2zUaL0/iWuKQ/Q6eJ03iLMJ8tLReK03i035iuEevEabybh162Xpg4
jZ9weDZr9xFxGh86PKVS/7Q4jV809d+994o4jX/X1rZ/+yfiNP74a7sb0X+J
07hH6atF32idVE7jf907qX2gnTiN++dtju/cS5zGG6fYjz48QpzGd+7rVGzs
KE7j3wSW+sW7i9N4kldmux6+4jQ+wCU4I3G7OI1nj5/uYHZInMYnWJiUHTsp
TuOFRh9DzC+J0/jcpjn/SXkkTuNvy7fn9y0Tp/FVz2fNS6sXp/HaAtPaAfoZ
ymk85GxFdIapOI23jc8fPGiYOI0fCttZeMZenMZ7rnP1tlogTuOnPfq0+MVH
nMZHOdYcGxYiTuMFw6+Oz44Vp3Ens6iXI9PEaTVf2npszs0Xp/EldRZGNg/E
aTVfSuvP5ZeK03jA/d9njPsqTuPNfov9fEnvlHIaj0pZHDGxhziNG0db9blm
JU7jKYHa1yZPEafxId53PW+4itN4vkuc1nerxGncboL34VvB4jT+yGLkiKn7
xWncrXPzosIUcVrNl6ZFa5zyxGncryKp7YO74rSaLy980pzfiNN4+PUxdkU1
4jTeIVOv1KXVaeU0nhD/LLjYRJzG+4WndHMdLE7j59f55z63FafxcZ62cxfM
Fafx246GX156i9O4y4iSvR6B4jT+2izD8nWUOI2v0A+49cNxcVrNlzr7ZaU5
4jS+9V0n3aV3xGk1Xx6UJpaViNP4gd8yx3j9I07jpqnBzz82P6OcxjOip29Y
2VWcxkcEmXQstxSn8aveH8/4TBCn8WlzcqZVzRan8WcTQj/6Lhen8UWWs3d8
CRCn8YrOZr3WR4rT+Cbdyku1yeK0mi+V+W6bssRpPPLFzvr6m+K0mi83XA/8
+FKcxo9n9vm2UZU4jQ86WnM/SPeschrPC7+6qklncRqf7B/VOmSAOI0/8PRI
0R0nTuPzp1pOCnUWp/GyEQ1et1gqTuNre97cEr5JnMa1DA501dstTuM76hdn
70oUp9V8eW81W/8XcRqPf6BdFXlDnFbzJf/ubsMX4jR+LjWuf3S5OI2P2e99
o6NOpnIavxk0cnHsN+I0PmtF8yad+4nTeMmcovhDNuI07jUxebTxDHEar7Fc
Uxy3SJzGg7qMXdd9gziN6zVrY5gYIU7jMZXPMkyPitNqvvyR4nDsrDiNp9/w
L+tVIE6r/+/blvSyOeSWi9P4E6uUjRcey+tp/H++5tqc
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
k8QOCcxIStb3H1cRaUo=
                    "]]}]}, {}, {}, {}, {}}}, 
                    VertexColors -> CompressedData["
1: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
XM/DvRd85tbbfNz//VCn/m/+Bxjekhw=
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.002272727272727273, 
                    1.6552656370200842`}, {0.09318181818181819, 
                    2.3447343629799158`}]}}], 
                Annotation[#, {{1.6552656370200842`, 
                 2.3447343629799158`}, {-0.002272727272727273, 
                 0.09318181818181819}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQN/+Ns3L3dlcJg1EwzslZftsv3Qx+QAk5+0k4Wb
JwLB36THvq3PkBHOD1r6hPdjPYKfIsV5/teXv/Ywvh//7Gv71iP4/xireESd
GODqWdeoLeEyRvCDig7pl+n8gavXqXhy/psDQv7T4qk2TGsQ9n1IX64Qt+Cv
fSgYLLW/06v6918+TP8Ce6kj+sfP/0Ko/2ZcvqCa8T/c/FWiOTKGEQj5da18
c+r/MjporF+4p+3TKvvNYt+zZkkj3L+yMYDVxQbhHsdFO44ILUPIa38/zjZZ
/jecf6bbYnaqMyL8ajfc+ZO+EKG/ruyW5aXa//Zu4rElF12324vwJF1RbUSo
nz3N+IfpJUYHmP8C9igJShj8tZc5XghEc+xz1ET29ab9t4fE30p7/dczd++/
hfBPAHu36/S5/+1FrDcKW29cbC/W+W6XtzxCnvX7P2O+9t/21rf2+BeenGAv
f1C16sWpP/ZyYNBnr2vhteVMxj+4f4xC7hSfcEXEz83pNn59kxgdMvQX7m35
tsh+8rafkXpfEf7/mZkl8yTtj324wGTtjpNT7Z+kW6y8+gLh/yj9iFPeZxkc
qkXWuT+smmJfd6Q/QbWDwUEQDCbaH9981c8oDeHeHolclfQYWPhMsA+ytHOR
dUOYt/qC4oIPkxDxa3b/6/MuF0R4ZnFZHpmizghP70KPNcN71RDxl/fnVN6s
h7/g/JKJX09mWjA6AACee+0Z
                 "]]}}]}},
           
           ImageSizeCache->{{16.585786437626894`, 36.41421356237311}, {
            57.585786437626886`, 74.4142135623731}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.09090909090909091`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.019166666666666665`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.09090909090909091}, {
             Style["75%", Bold], 0.019166666666666665`}, {
             Style["median", Bold], 0.}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.03777472527472528, 2.6552656370200842`}, {
                0.03777472527472528, 3.3447343629799158`}, {0., 
                3.3447343629799158`}, {0., 
                2.6552656370200842`}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.014705882352941176`, 3.3447343629799158`}, {
                  0.014705882352941176`, 2.6552656370200842`}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 3.}, {0., 3.}}, {{0.03777472527472528, 3.}, {
                  0.1, 3.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 3.1723671814899577`}, {0., 
                  2.8276328185100423`}}, {{0.1, 3.1723671814899577`}, {0.1, 
                  2.8276328185100423`}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1:eJxF131Uj/cfx/GQRuWmbGlpQjGa236VUCuaKCKJtVZWU1mNELXKUKJy0w2F
FKFIVispiZCbxkybJExLJDfVQliZbtj5nXO93q+/nOd5nMvnfM+5rq7XNfTb
5c4+3VVUVFq6qaj8/98DT50qhtZ4lWrE9m7ssOppg24NbNNRvahuY7PZvEfW
WXdxNHyI7TUfzUsLxNFyfXtpQl2CI69XGh5eU5ntMtFaHA1XMRqbP2GJujha
rp8fbR2zz8JarldarjdPceuwdRBHi3sVO+zRd6ErLX7EsMF04Nd0peX84CvT
Gnp58Xyl4Qkfr9Uyj/IWR4ufMXkQ2eM7utLi3zTk3gj/nq40/ED3tLUG7wLE
0fCKylGZRVYrxdFwp0MbYz06A8XRcn3Q/dWqJat5vdJy/YzJ7tmhwbxeable
d6ets0UIr1darm96Yfy2LZTXKy3XlzhoHzixhtcrDfeMPfzWbvVacTT8wSKV
umcm68XR8PHJY7x/CwkXR8NbVP6684lrhDgafswvZtbKiRvE0fAVlWalZTqR
4mg5f0q9iW4bHS3nZyRkfn9rI89XWs7X/FyvtHATz1caHhL0d6x2UpQ4Gm5R
m9zNd1W0OBr+r51d0CnnGHE0vDjvdYOmyWZxtJyve9DdU2sLz1dazo+YU1HQ
QkfL+Y0dth9UbOX5Ssv5zkdPuuVt4/lKy/klCz/LjYvl+UrL3ycj1f3dAuLE
0fL8x+ZrL3CM5/OvtNxfYeNsXXQSeH8pLf//OLWurk10tDy/9TVFR1rpaDk/
uWDFPJ/tPF9puf9nbzHuqKKj4edVvB4d+mKHOBpudGJi2pxCOhq+0a+v67+G
ieJo+KNPHmulJ9LR8C8qS67N6pEkjoYfitqxqTWQjoarTvGz3v+QjoZ7v7B+
O9N5pzgaXpahU/DqAh0tv9/12dK9E3bx9ysNj9EsG2F3kI6GN5xPefCi/25x
NHxm0MqUPeF0NDxr1EwX2xY6Gt6rdnDfZ98ki6Ph3+1ovbLrOh0N/9WuPMLG
eo84Gj6yI31KUy4dLb8/L7Q1cXAKf7/S8ObFTnlWcXQ0fLbup35Pu+hoeE55
17Dty1LF0XDNiKqayffoaPhSs+xdj2bvFUfDyxsjnOLO0NHw0Wmu6haj94mj
4ducx5XVpdLR8vvV1NZt1Ujj71da3m8lNRPN1tDR8vd7ecHL2iY6Gt7faEt2
jNt+cbS8X/709DH5jY6W++Nyar/n+gd4fygNTx4S3XzRhY6W+ycs8OrubXS0
/H2u8shcWkZHy/01zj5yaicdDXfbbOqpY3pQHA3fUm9g9ff3dDT8tJWG3vkM
OhretLutLekvOhqu96rupt+AdHE03GH278c+n0VHw8Myi2MHRNLR8J9UDvk3
nKaj4dVu8TPOvqKj5f4/EWa0wziD97/ScMt+vt2WfEtHy/PhN692SgodDd97
ybKkfyUdLc/PJyOTH/c+xOdHaXjnDwOCTk+lo+X5qnw3Lz6Ujoa7j24a651P
R8Pjom5pTGqko+HnHpxv6DP0sDga/nxyzi8PXelo+OCdu9NPJtDR8DkvNqzf
9isdDV9nH+DupZIpjobnZnw1ydyCjobXdn2ho7GCjob3dR3/+v4ROlr2xfFB
FYX36Wj5+6D5wc+bBx7h3welZX/4vtq8aC4dLfv7/D3f/0XT0bJPBl217VVK
R8u+DSoccq+Njpb9cn1/V/7YLO4XpeX7Z9TW6ihfOlr2TWTwya/T6Gj4q3te
SeNv09HwYRaOK3v2PSqOhjvvsJhTPZ2Ohm9oNvwsby0dDT9u16/XxhN0NPzh
gfZHrs/oaLh2x+MLY4b/JI6GT1twI627Bx0ND8w7s+ZOEh0t+6t3lmtOOR0N
r1qcaBahmi2Oln12bp32Qks6Gm6q6//CeDUdLfstcEH5+2w6Gp5UbnO0qp6O
ln03YnTU0UE53HdKw/8JH7h43Xw6WvbfX91t5m+lo+ELzZ7rj7xER8Oj4u++
7Wyno+FFjWW3b5j8LI6GP7E9VpDpT0fDddJSE9ak09Fwu3+jljlV09HwYOdA
h+HaueJoeGaOx6ft9nQ0/Laaver1CDpa9qmXaV3GKTpavu9KDM6FvKSjZZ98
pJHqOCqP+0Rp2SfL234Y5kVHyz65WufyJpmOln1i+PuE8go6Gv6htXu0k+ox
cbS8v5pvtE4eQkfDp++Z4T3cko6Ge9idreznSkfDg16bTG1fRUfDYw9k5T2K
p6Phhx0HD76eTUfDz7Ynbjt1hY6G3zrSuyOjno6W96fLer+493Q0XK17652Q
QfniaHm/5vnbLZ5IR8PN3R8UOs6no+X923uhocVyOhruW3Rt+7CtdLS8nxdP
VelzhI6G7+p/MuDNRTpa3t9nR9+rq6Wj4Zf902eVt9PR8n4fqHu6SOc43+9K
w9vKYkceNKGj5f0f2GP31jl0NHyEQWjPYH86Gv55+fNVnlF0NNw11PuhQzod
LfthRLWT2Tk6Wr4Pb84tNaimo2VfhP8yRr2NjoYXj5my9x+tAnG07I/qY+r3
x9DR8v0dPSL0qj0dLfvEbO/TAh86Gq77UGthWgQdLfslProsZh8dLd/3ll0m
q07R0bJvGgMPetyio+Ehuxr6zXxJR8v+sV20zqRPIfeP0vCslpvN+qPoaNlH
++y//mA6HQ3/06H06ktPOhre8sbUouZHOhqufvinzMvJdLTsK+chH+UX0tHw
ye93RqZW0NGyv3I0Xm1qpqPh/l9FeK7odUIcLftM7c0fbkZ0NDylYKnVdBs6
Wvab58Psce50NPy3Pq56eiF0tOy707/HqCbR0fD2JbZvnufR0bL/Pjrlc/ca
HQ03vji26tJTOlr24fJD03J7FHEfKi3f3/p6+ckGdLTsx6vxBpFT6Gj5Pg/u
GbfsSzoanm64pvPLVXQ0/ExFi/+0eDpa9uda37ujs+loeLNxzYyBV+ho2ad/
zivqVk9Hw/U3XTFqfkdHy341sUq8rXeS+1Vp+Oz7x7tdMKejZd9uG7ki25mO
hv84Ka12ZwAdLfv3yQDH8C10NDwncXOJfyYdLfvY5v2oBRfpaHjNs9XJ1rV0
tOznlCY143Y6Gq450zPoQ51icbTs69Zb9e8m0NFwy/RZzo2OdLTs77kXzt/0
o6PhAZ3m485toqNlnx/N2Zd1kI6Gpy0cppl4lo6W/d4jOWztXToa/sexPo1L
Wulo2fcekV86a53ivlca/k797S+WY+ho2f/FAaaf2tPR8LE+j9K1fOho+T7Q
dtPqDKej4YtKr69/speOlu+HpdOfVxTT0fC4j0vcS6roaPm+uDz+2uEWOhp+
blXmpATN0+Jo+f4Yop8VNpKOlufnw9wZdWHepfL8KC37R/1OxgorXo+G/wec
gtbW
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
P83i0WM=
                    "]]}]}, {}, {}, {}, {}}}, 
                    VertexColors -> CompressedData["
1:eJy12us/FIgCxvEps8dli7OkkGStELkXQ62Mu2jdqbYRilySSyqhFi3KdWKE
NHIpQqEhVExj2chMZXKZhtZtDWeUKHVcjmr3c84/8HhxnjffP+F58/veL8zV
fy2BQJhbQyCI/O0bYj7VO2N0L2p68yVBZASu3X5dq7QDuBOnNDYxLHCTrmic
eqeL6ynKWWeljBujenxnvQyu/IVxHkkCN/hhSepzEdyO7cdyggm4hP8Od9+L
buaFtbjORlGtvaK4gZH1YkIpXPc1gplbCrjFdSIhs+q4s6zemQpjXGpAG6/W
HnftrGapgIL7e6WcvFoUrtInqXzHdFwji3N2huW4c1pSvvVtuGbJHP9bw7h0
Ws/xsRXcHtd6q72KY7DmQ50TV/fgHgzsOcui4BbL1dTSfsGl+Rctvi3BfU0s
qSnrwJWlVjnRpnC5Na5VhRLjsKKRTWL52rhb5g95BTnj7p1n276PxCUS/31S
JheXnLrmyP1G3PupTS1MHu7PFwOd5Rdx7WN8pO9t+hM27MmKQZQR7nV2gpKb
O675IC/OPAI3JMVbWz8D9+t36/cq3sZtfKAoWG7DPeZp6tM1iMvcX7eY8AFX
L6dYTF18AtZWPuRqsxKuk4xWjIkhrl74okGNDW4VwYKteBB3OUy8OT0Yd72+
6dV/xOKa1hm30lJxZU7KSFsU4MaZfluoUIHrsly6S6sBN7ngdnQCC7fP5NlV
LQ5uct5XMomHq29Qk9U4hvvaXXr4/hvcwoYbD60/4Xpvqn16+gvudt/TtR6i
AtjGK27LH6VwVRpTJI/K4Q6UWcjUKuMuaVI4Uxq4KpIj3M36uCzBO62DJriW
5Cb/u2Rc/QtOl7ftww04ekfyuStu5i4el/EzLmvIQmLkGO7Ae11Lyknc9gwV
O+NoXJKhCflMIq4jt6hEJQOXXfv1s2U+7sBFM8OxMlzDTIoXoQ6XRG9pKm/B
LWr5wnv1FJdBzYq4xsNtudV26p0AN+HHeCLvI+4eF2qCB3ESdolKSQzegGss
7zIouw2X5VtX6GmEO5gsslnLDrf6wtp56iHc4XXi4kmhuEme32WLJOCW8nbK
ieXidu2oj8+oxP2+SEsqk4lbaXPJR6QPl/nyJnNSiPuDteRdPcIUrM+PfVb8
jbg3wvkar7RxSaGkLFVrXMkj6x3uH8Ytny4ciI/CPSLTSTmfjrt7XU9X8U3c
aq5T52gL7sFE7yGDftyF0sFj6TO4rdy2O+Pf/As2diZtTlMJV4pyLvSQEe70
YkdIwE+4NQpV9lYBuAopusnC87hdVrfZDrm4xM9DSz53cFkmT3W3tuNO3fvY
F8fHlXtlUho+i2tPlK56TxTCHuLa+SzI4wYVy5ac08HNLsppCrfAJajkHO33
wI1hsIaLA3EbsreOcWJwOxV5N93ScRua3IS6dNw/qK2fDt/FfZjbdW2gBdfl
6LhhARs360t7RQkf96zaycCZSVzSTF5kzDxu80qeo+1XXPPzXKKbxDSsJ6FG
l74Bd0dEqlBdCVcs7cS9WTVc6XaH8AUdXONH1qJkI9wzPm6xz/fg8n2crUot
cFUFL+we2+IOyT/lazji2sSp1Iw74cbpqAzPueJ+4HcNe3ngkic3n1f0wt0j
epRveQBX3/+wX+8qDBYG9fSswpzUB8oWq7C/L4iq7YXLOFSdV+CBO2A+MpHu
hmvFYHhJuuCOtRitqP6Eyx2b/+bVPlzny4vdOra4miljTD1LXP6HoVCBGS6p
/cZZd1Pcl6N+qUm7cM2aOyjxerjsVsZdRy1c7W6bXR+24TY8KK6MVsYtJbc2
TCngulxwnLORxTXdnzZKl8J1Uv91YV4c96ORQpwzEXdHWkPCwy9C2ErjFCWT
JdxsTvXKy3lcqZBQTuY73Nh/js9GCnFTvf+TnjSB+07gcpkzgmsetj15/xDu
dHzD6/U83DZSX7V0L+5mNf8cnxe49OhJ0RU2bteHR+bCLlzPG+QerSe4+xol
dne243q/kahgtuHudmGUbWDh9h6Ivc5m4mbVcHIFrbjKO6J2HluFXN/43+xW
YULpYzPaKjzcLGtoy8QNPi/33vcx7oPdT9QnWLhG6XX0Z7/hVj5Sub7ld9wI
0Ytbeztxb9n9Ovi2G1eMY2kf9Bz3lycOsTYvcb3WZ1ISB3Av6h2sVBjCnRv4
xFs3ilupraDnKcDterSte34aN1bTnzY+h2ujRg/buoBL4ddPlH/GnTjhEHT6
719FfZaRdSnlW1xhXAidL43bbHPx/XEF3M7yZZaOCq6Ex0YzTU1cnl8DzdMA
l1ufuFRrivsi5o8UA0vcVO+Q04MOuMQTidwyd9xL18rnUim4n8aXN6YH4Oar
RuWWheE+pPazn0Xjbqm0Jokm4p5Z1LF3TMMlxUZQC2i4G0+NdLyh437ZzWHu
rcC1YTioZ9fh6uqSFUcf4HaG+sWqteMmhw7R/Di4ZtfUo6/04/KLvPLqhnHH
08z9W6dw/9cFv/2/+Rfs3wPk
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.0025000000000000005`, 
                    2.6552656370200842`}, {0.10250000000000001`, 
                    3.3447343629799158`}]}}], 
                Annotation[#, {{2.6552656370200842`, 
                 3.3447343629799158`}, {-0.0025000000000000005`, 
                 0.10250000000000001`}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQPUnFE4gW2Yf22Wx6O5nVYdZMMLDPEJn7wt+Fy+GX
xJz+gz9n2OtJ3WYTU+d0ELHeKGy9cbG948foqfty2B2qRda5P6zaYn8iZAbj
Oh02OH8nR6Cqdwe7AwMUpAlOzZsiwwblb7Dnro2573eBDS5/72RIc91JTocU
Re7IE07T7GcWmKneiOGA8pfZX/YVrVCfx+Zgyaq//MHTJfYBth/NnumzQeW3
2ZcIrr/8TpPNIRQMltrna4YUzarmgJq/wP5bj2Cf0jSYeybY67Ev/3KfnQtu
f5173mrGOgS/tL1pueonDjj/1bzFK84HI/xz7bJ8HYMEgu/DUyT18gvCP4K/
1NjmAcMPEl6b7adGH7Cv80bIJz/zUFabijA/KmrWgkO8CPNM+M9stQjkdHAT
jy256LrcPiPPI69lDidc/llRa4LUIg4HmeOFQDTHfg1XWysDAyc8/rivvtNc
9xRh/qSY2/9z7rNB3TPZ/p1F3lq/aA6HAvmDtSzfF9p3b5Z+NE0CYf6trKlx
yjxsDnJg0GfvIqa7IjkDIV/sWPJ1ih0nND6m2DdpWy4Pb0LIRzzQf/9nPoJ/
6oXd318iCP+lz7M4u8+SC5pelthzlK07ln8Z4d5yhYkn/OQR6iPSllyI7kOE
3+wJjP3sb2H8BfYC8i5Om1/Bwmu7fdyK/OSQHla4+ilv38hsCkfE777nTNpF
v9ih4bXT3kH23J20ewj73Do3LyhOQdi3eVVS8DxWDgcAFnXuNw==
                 "]]}}]}},
           
           ImageSizeCache->{{16.5857864376269, 37.4142135623731}, {
            38.585786437626886`, 55.4142135623731}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], "0.1`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.03777472527472528`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.014705882352941176`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.1}, {
             Style["75%", Bold], 0.03777472527472528}, {
             Style["median", Bold], 0.014705882352941176`}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.039615384615384615`, 3.6552656370200842`}, {
                0.039615384615384615`, 4.344734362979915}, {0., 
                4.344734362979915}, {0., 
                3.6552656370200842`}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.02040816326530612, 4.344734362979915}, {
                  0.02040816326530612, 3.6552656370200847`}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 4.}, {0., 4.}}, {{0.039615384615384615`, 
                  4.}, {0.08695652173913043, 4.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 4.172367181489958}, {0., 
                  3.8276328185100423`}}, {{0.08695652173913043, 
                  4.172367181489958}, {0.08695652173913043, 
                  3.8276328185100423`}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1:eJxF13tczncfx3FLC4mUsEW0TCItJLcklRqFkRYy5DDlWlI5rHLKoehEauTQ
iYpQqVAO3WOJUAtLsRLuaBUykzUV4r7vx+P3/rz/4fF6PB+uS13X7/P9fL9Y
6ufqqdapU6eu//vj/38fzkw6ln1u8S/dd3V79s6mhx16vdWG7mpLdOwONy23
j0+ZT1ca3mnLXovfK2aLo+GL9S4P0dNwEUfDt8yqMU/1dxRHi7eoTMZljKIr
Le/f8JO1i0VfW3l/pcVVoyfXXplAVxpu171wYkCHszhafJWFWXCZK11peO0D
DWv7eHdxtPz/ne47qas8xNHwXvfnZNbpLxVHy+vvthtd/IknX19p+Xy+Hn4h
/elycTTc/11vu/Db3uJo+flOdVz74exK/nxKw8PP/J1+dIa/OFpeP1rl3bdo
FV9fabj7Dw/NwizXiKPl/R1dm1uPr+X7Kw03GXQ9TzUgQBwtv7+31kHVuwP5
+1Ma/qoy13pq53XiaHhVzpCPBQHrxdHwwsj4ItPnG8TR8OOe2jsSF24SR8Nj
7EKde5QHi6PhP+/aqGFrtEUcDR/5bqyqtYaOhh9RNZfkxG0VR8P17mWaqmZu
E0fL5+vgtcuwWwg/X6Xh73MN/6oqoqPl8x9Y4xK7MZSfv9LwP6LiTjuP3S6O
lu9H+0w9tVd0NLzMSzOg4MQOcbR8fyqv/r76+zB+f5SG59lvtjI1CBdHw7/M
sUqou0dHww8MaHmfEBMhjoZrRWZ7uE2NFEfL89+qKtRSj+LzrzS8Zdlgo+KL
dDRcdedhyKbAneJo+APbA/WWo3aJo+EuJ12nvHxOR8v3W7/HifQj0fx+Kw0f
E35dc5HHbnE0vPKt3dnuWjHiaPn+jxrY2Kiio+FOqnf9rhbT0TK/D1U5HTaK
5fxWWp6fu/nrNm6mo+FrtfZkuD+go+X5cvCvGWP1E58vpeFP132jpbOPjpbn
L3e4zZ+v6Wj4gsYuviUz94ij4Z8NrE8+mkVHw39zK7q9tdtecbQ8v1GHOnl4
0dFwx6KNo8ZfoaPl+W6bt7SvYRyfb6Xh583/tef1Rjpann8vvau3qulo+Iik
5paMsfvE0TIfKm4NCdtDR8v5ppk15/tXdLTMD/uIMNtv9nN+KC3nQ5DX+f4Z
dLTMl2yHZ60aBzhflIaH1hvqV35PR8v8GfBham4hHQ1vc63ZsNPgoDha5lPE
+SzVejoa7lMY99Dxdzpa5lfr6p5fjInn/FJa9gczF9uOGDpa5tsyM//qP+lo
uFuCZkr+1ARxtMy/O43lscfoaPiNrsVqvuqJ4miZj7apFlOX0NHwCQGblxlf
oqNlfmYtiFPrn8T5qTQ8q87q2qNAOlrmq36/1oJKOhpuOKtl6P5RyeJomb9h
5e5roulo+N5L2REzm+homc//RBWYOh3ifFYa3nXED01djtLR8KWjBvd83emw
OBp+qSzWeLE5HQ3XV3WyvbWQjoYHdfabO2EnHS3zP/mhX0YBHQ0fPX56+GfP
6Gh49N2Cwzv6pYij4S/8h11o+ZqOlvND60D50rV0NDz9mMbz31LpaLiaw49q
tuV0NNzjUZ3+yY90tJw/61wt+n+VyvNHaZnvfS5Pi1hAR8MDcs2XtUbS0fA7
05I3el6go+X8atSKq2iko+E7t204ad83TRwt55vB8+IcRzoaPvmC+yODNXQ0
PNXt+puoFDpazu9Xltpvb9PRcj5GHRmq+kBHwwuMe9vdG3FEHA3vW7TV3XE+
HS3n/8JX/qcj6Gg5X9s8IgzP09Fyfu29mRLdQEfDI80nFLzXOyqOhjeUZtzx
dqCj5Xz2+rypahUdLeffJ+Gdpxymo+EfEt/0z79FR8O/G+c5ZnAHHS3ne0XF
9FjTdJ7vSsv9wW+S58d5dLSc/5qnNq0Mp6Pht44O2ldzlo6GD7ePznaup6Nl
v3nw/tq53se43ygt+0Pgiv8MmURHwyf1vt+6x5+OhidnO/VSO0RHy37kfM7E
/yYdLftH/RD7R+/oaDnft+ydN334cZ7vSsN1B3ReXeBOR8N9z62KNAmjo2V/
ca1N3ZdPR8v9+eWMf6v/QUfDd0RcrFite0IcDX/y5YgXtXZ0tOw/hfHqM/3o
aHji/G4GF5PoaNmP3gRampbR0fA5PzV8c/AtHQ0/bTbbq8uwDHG07H8lV4J/
nEtHy361bPT+uu10NLz04+GcWXl0NNw4QfvGL0/oaPi2scG1ZjqZ4mjZz8pf
tCXY0tGy/6ycr6PpS0fD47uWDgtKpKPhb9LGTWoopaNlv7M99p1bOx0Nz73f
Z03R0CxxNLxnQGjUyDl0NNxb5++05FA6Gn4ta8nPWmfoaNlvnX6rXP+Yjpb9
sW7in0+1T3J/VBr+KPjkp3Mn0tHw8foDBhb70NGyH+dHjrVIoKNl/3Rpn5FS
QkfDXV8sX67dRkfDs8Pubd5knC2OhmsO/vpAkxsdLfvrpTO580LoaPjVeUYl
10/R0XCjf2IeW9bS0fDgmI/taT1zxNGy/5r66ura0NHwcdcfDN+ygo6G71s6
zeHlQToa/rrjwvwFN+ho+IyDJmtL39DRMj/ip01O1M3l/FAarv50m2vFMDoa
fsaywEPTno6GLwlp9rZ3p6Nl/pSbBAb50dGynw9cHJKzg46W+eSzf3dDEh0N
719wK8Egn46Gl3TROO5WRkfLfj/bJi+qjo6W+Za2trDoLR0Nv/sqs6xd55Q4
Gh4ysa5q5DA6Wu4HO/Xrl9vR0TIfq2c1J8+lo+X+MDSi464vHQ23+bGwW48d
dDS8qai1j2MSHS3ztZe50YY8OlruHx5eX53+lY6Gt2YmjX/2hI6GH22vnGz4
lo6W+TxF69u5Oqc5n5WW+0ucw6JoEzpa5veT9SuKbelo+KKRpwPfz6Gj4T2C
n4VY+NLRcv/51TDGezsdLfP/c/fElEQ6Gv758t3Hq87Q0fDredfytH+lo+X+
pPahcPITOlrODxfLm5va6Wi5XyX5VOf1OsP7ldLwrU1p9U1D6Wi4uVVNs5Et
HS3nzw7dD/Pm0NFyP6t01oxdSUfDrY229r0RSkfDn/mdN/qYQEfD91/866ux
Z+houd91H2q9spSOlvPN3WPKkcd0NDwtPe7bmjY6Gj6rpWyRbq88cTT8o726
j/NQOhqes9s6aMtEOhq+8OHq0HOz6Wh4d9OMmJc+dDT8QtDjxCGhdDR8+bXP
TixIoKPh/fRc8vecpqPhxUvCLpeW0NHwNTmXbn7ymI6Gf9HxT/W4NjoaXj7V
rMFPO18cDd98YNnrdGM6Gm7WkPDhoQ0dDa+xqNDsM5uOhkds1ew33YeOhlvd
th8cEkJHwxsHrDMviKej4XHeudbNp+houMP5xikmJXQ0/O9PB7ktqqWj4Snf
zlm8r5WOhs9M2eVzs+dZcTS84+XVIHVjOhqeOeF9qLUNHQ2fH2kRu9qNjoZ3
q/JOOrGCjoafG5J6onYbHQ33XFOd3y+ejob3udyraMYpOhp+pafTre036Gi4
wdbUkxq3l/wCR8NXWgZF25Xz36Ph/wWGouyA
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
                    
                    "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["

1: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
fusT/zf/A2mC87E=
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.002173913043478261, 
                    3.6552656370200842`}, {0.0891304347826087, 
                    4.344734362979915}]}}], 
                Annotation[#, {{3.6552656370200842`, 
                 4.344734362979915}, {-0.002173913043478261, 
                 0.0891304347826087}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQPUnFE4gW2Z/RkpqZLS7gwAAFdT8elm3qEnD4JTGn
/+DPFfZ75/8492mygIOI9UZh642L7Usqd6w09RRwqBZZ5/6waol97fkj9+/f
5ofzZWel7s04xOvAIV/z4SD7evu7OtfvPfoIM3+BPY/qrXxvQQGHUDBYap9z
i4fv5WMBhxRF7sgTTtPsV62PmTjNBsbfZi/8b55XhpQg3H1sGtb2Fhth8svs
n1xnYDmRyQ+Xn/TTI36LNz/cvnTH58UXM/ng/H2bbvtyMQg6zBN6ouk4b5L9
hs0JvJm7BRymVUsl7lw+0T6L+6PAZElEeExsX7L0VhqC7/eFV0amGcFfujd+
towIgu/G7Cf9XAjhXotvbfd9zyPc94D7ybNrV/jg/BcGORULghH6JQqeHfBa
i1Df/oVNr6gEEV5u3+wYjhgLOsgcLwSiNfZ7BPcudufjd5g1EwRW2oeuOhh0
RR9hf96rb8x3tvJD42+yvRHje0W3WD4HjfUL97R9WmXffM/oapa0gIP1rT3+
hScX2H9N2Xd3+Qo+BzkwmGd/b1vCq41mCPec8pFVvTBFwMGSVX/5g6dT7DfI
27p5veBzyNBfuLfl2yL74NilF04YI+z/t5sx/v8UhP9eH3lbeq8Hwb/hsqvg
/zIE/wJfWM+cawj/zD8QzB34EiFvzL4uxd4BkZ5EVH9EyqxHhOfRkko2s7UI
/iN1BmO/NH5oeM2x19L72LNRVBBq/kz7ktlzvJNUBR0g+WGT/e0VepNT1yHs
qzKtFItuEXAAAC3HBRY=
                 "]]}}]}},
           
           ImageSizeCache->{{16.585786437626904`, 35.41421356237309}, {
            19.312780281989404`, 36.41421356237309}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.08695652173913043`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.039615384615384615`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.02040816326530612`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.08695652173913043}, {
             Style["75%", Bold], 0.039615384615384615`}, {
             Style["median", Bold], 0.02040816326530612}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.07697610294117647, 4.655265637020084}, {
                0.07697610294117647, 5.344734362979915}, {0., 
                5.344734362979915}, {0., 
                4.655265637020084}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.045454545454545456`, 5.344734362979915}, {
                  0.045454545454545456`, 4.655265637020085}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 5.}, {0., 5.}}, {{0.07697610294117647, 5.}, {
                  0.3076923076923077, 5.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 5.172367181489958}, {0., 
                  4.827632818510042}}, {{0.3076923076923077, 
                  5.172367181489958}, {0.3076923076923077, 
                  4.827632818510042}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1:eJxF1wlUzXkbwPHsFQrRWLJWki2FiIkaVJPRmJHkVabI1tiyJ4mQLJGpqCSE
yL5EUWQrW0kRkwaDkCklxdtE5p33nPv9Ped06nzP5/zvv3vv7zz3uV2nzPt5
Wn0tLS2vf3/9/+/lT33WX/IIzFiXtba6Lr6VHb3cJqBpfe82dpfn+RWU1C4T
1zR+ryTZ2CBmkXJauXeNn+2g+eKaVo9/dumq3MMz5PE1ja/6sc7G6a6nclr5
DMPXL8KcxDWNa+3d+WNUvYHDcRq3a1jYPv2Gm3JaXR/+av4GMx+5XtPK4yc/
GFA6W1zT+PuC0g7zHy1QTuN/ehzKGWWzVDmt/KVPUIedAeKaVu7b1bLyS5C4
ptX9a+b6TbUIlvtrGp//7RhnF6+1ymn1+EG9jG22hcjjaxr3uqbzxfhqqHJa
Xd+45IFe1Ua5XtPqeuesY38bh8n1mlbnJ2x/SLHrVuU0fmjmlRNvroYrp/GZ
G/sZeRZtU07jPY7uDs2v+k05jZfk6H10bBapnMb3VAR6XzSJUk6r59fyXY6V
7XZ5fprGu/T3GHJo/A7ltHr9XO8kdpwbLa+fpvHoJUMMIkJilNO4e3RSkPbu
WOU03vZC27LAlJ3Kafz3ovXuVblxyml1/7pP12eW7JL7axof23m65VOt3cpp
PHTPX3eTmu1RTqv3z7LbuuJocRp3ujpxaGfTvcpp3GTctsqJp8RpvGHxzYOR
tgnKabx4kdbk3FviNH690eDWum77lNP4/u3zbo98IU6r+WV2cFXQ3P3KaXV+
Up9aX6gVp9X8+t7wXXXIAZlfmlbn6/GYfRYGiXK+NK3m16/rJvruFqfxPz6n
6x/odVA5jadvrs58liJO43Ede69oP/KQchpfcXyq1fh74rQ6v8N3lmz1SJLz
q2l88L38+Nsl4rQ639664xstPiznW9N4TaV9U7t6R5TT6vwH+19ZHiZO48kG
p5aebXdUOY1H7i/p8/6AOI0vGtiluKfVMeU07po1IXbaJXEa7zdh69g9zseV
03iLkqzGRQ/FafX5sOxrepupJ+TzQdNq/upYLxxbIU6r9yfnXGSm7Ul5fzSN
Z0XlV7xYI07j1pPLnbVui9N4YnfdxI4tTimnccMK03pD3cRpPCTF3sM9TpzG
q4M8Uxa/EKdxHyf/VhE9Tiun8QctouacnCtO4yMLT97MSRan8dN7s41La8Vp
vJtvyUpt+zPKafw3q4aPTdeL03j9z50HjsgRp/EF14aGexkkK6fV58+mCaWB
E8VpNd9dFzrs3C1Oq/3OaOve1FfitDq/rw5/Keh1Vs6vpvH4Y1kTqvzEaVxv
yYvTLVLFaXzlsK/N+34Vp/Hyxu1njR55TjmNT84deH3mRnEaz97xU+eQe+I0
/q3XnOX7DFOU0/jRHhsKLnuI07hR5f5+TxPEaXzj+cubPpeI03jt6j9et7VI
VU7jvs419taLxWn8cavWu8alidO4c5FFzfx655XTeOq+0eO2OIrTav+aPeP4
kTBxWu0XA9bo3LovTuPadfE+r9tdUE7jSzIvZDTwEqfx12EP23dNFKdxN7cP
i4eVidNqvnXSy5tklSbzTdNqvr0x7+2/TJxW+8GJUeu3XxKn8dbLvF+caZiu
nMbX2gXa5jmL02q+acdEl4eL02q+5SVXNX0kTuP5MfdczDteVE7j300pS3KY
Kk6r+dZTu5FPkjit5luVsdfqCnEaD08bnhY/8JJyWu0vaycZpgeI0+r7zQ9L
/QqviNNqvrWOyP7UJEPmm6bVfHty3Ky1iziNXzpwO9gyUpzG+859/cTlsTiN
/9hhtZF1i8vKaXz9P3q3R/YXp9X9X8YtHecmTuOfbvQ0neIvTqv/72hq/vw4
cRqfFu6wKihDnMZ3LXrQZ8sLcRovcJ9SFNfoinIab277PvRID3EaH9V1pfWF
0eI0HtioWfHNueI0fvZtzLZH28Rp/F2O2fDXyeI0bnr6bFn1I3Ean7R9RGyD
z+I0HrE8z7FVp6vKafzO5F8+drEXp/EGI94lWPiI0/hQs4Cxw9aL0/jCpjpf
fzgsTuNHKrYfmZQjTuMv75tM9H0vTuMdUk839je4ppzGf4qzS15vLU7jG1bd
9d4+UZzGr/h46B9YIU7jfzv9lX5mtziNW/ZZ5nv1qjiNz2rZuG3eK3Ea3/sx
IvOZ9nXlNF5Y2HVheS9xGm956USXOhdxGndMsL3bdIE4jQeF3AloHyVO4ym+
E83NU8VpvMLlzcNBReI0btZ/8VqHr+I0/ss3DazGd81UTuM7Poc/mzpSnMZz
n3UKWzBDnMabXD86ZPVGcRq3PTSkZOsxcRpfvPlmVPw9cRo/Nt9txLEqcRp/
5Vr8Ps0wSzmNd7RZEH/bRpzGx3fU+qHQQ5zGw+pt+ftNkDiNZ77qcPBTgjiN
191Kcm2UJU7j/Y8Pqt/6rTiN//pb5oluzW4op/F9S8Z5WlqI03jRf57r2v0s
TuMGw+eluiwWp/HRxnXTPKPFaXxNk00Gs9PEaTyttO2V5U/FabwqN3Huhno3
ldO4efIAo2gTcRr3jr56K9FRnMZjVoxdetZXnMbzvJ6aXA8Tp3GdUbPz80+K
07i9eW3Q8/viNO7fPLTP+0/iNH6qsk3R13a3lNP424J9oc1txWm86wVLayMv
cRqfEJ/xsucacRrfGjxmm02iOI3fmF40zOmWOI3/4zyrzK1MnMYHWfw3Zpr+
beU0Ps9gneMiK3EaP/jfVh+Dx4vT+LOiPQnblonT+DeX+47ds1OcxsfsT687
fkmcxteFOh+5+Fycxi/O/t09u+Ed5TT+cez0xkVm4jTeZ2D1mbfO4rTa39oF
e9fMEafV/lanr99kmzit9rfnu9LbJIvTan/L6uVr8kicxkccPv9N/1pxGg/Y
4php3zFbOY2fWVCwYKydOI2Xuk3t8stUcRo3HlqZMydEnFb7W+eggBVJ4rTa
3xo0N9+ULU6r/e1N7MOYCnFa7W/ZPdYeapUj+5umcZuT5yxTBorTuF/kyGeZ
7uI0nrQsf/ODAHEaf+7hNeRlvDiNt7Mvf1N5RZxW+5vpiiitV+K02t90dEfo
a9+V/U3Tan97t+N9x17itNrf8kzje7uI07jFuTOjh/qJ0/iMWPu/v48Up/Hd
K3MT3VPEafzRFE/XGY/FaVzfsbTekjpxWu1vvfxPrO2SK/ubptX+pt/EM2KE
OK32t6pI3YTp4rTa3x51Sz25QZxW30/ST07LOCpO4557hhnczRWn8ai12Zf/
+CBO49MH9En5qHtPOY0Hd69uHmgkTuPxbdN8GvYVp/ELusFpm4aL0/jDL06t
DH4Sp/EP5fqzYqeI07je84cZXReJ03jP+7sMk9aJ07hDps+cfjvEaXxKSq/r
KYfEaXxl0of2wy+I03jszvN+WXfEafxc2KqbY56I03h+kGPngnJxGi/301vi
oZWnnMZ1fQqyX7YUp3ETtzjjX43FadzOaeryDwPEadxjSM88fwdxGl/Wu9Ks
nrs4jUd2Sl0ZOkucxk+2CCrQDxCn8ez6Dr13bBan8ZLqZms6xYvTeMM39wsP
nBCn8S6Fsf36XBGn8W/veK9PzhencfeLPZ4OLRan8UUnKgZc+yhO4+F7z21y
bpKvnMaPRgS+yGsrTuM31420mdhTnMaLlzYN/3OoOI1r+ea/njFGnMbbe8TY
VkwWp3FrF6/IJfPFafxnO7PSutXiND7Xqtx+XYQ4jW80ORvd7IA4jScarqiI
OCdO41e1Rzh0uClO409rdXYlFIrTeG3ZvSrzUnEaN3y2w/nUF3Eat8qbvHew
3n3lNO5yzbQmo7M4jfueLXNxtBSn8ZCDZw7c/U6cxhNiln8Z7ypO45c22Y97
Mk2cxh8Hah/2WSpO45/m5WqVhYrTeIsp2ycsjBWn8d6unsdrj4jTuJODSaPg
i+I07jO4dJJOrjiNr+p5+nT4n+I0Hmfkr9P2gziNp+rZee1u8EA5jT/QapLS
vY04jb//kNP8eHdxWs2fmtWda1YHZaj5o2m8+juLf3/kehr/H0QGVd8=
                    
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
7oT3H9OCONg=
                    "]]}]}, {}, {}, {}, {}}}, 
                    VertexColors -> CompressedData["
1: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
YhD3fm120NUhXE8VGd/l97jb/H6uaI/gTlC4TS1HcTufsmTt/YB7NEjcYZAJ
U3fPbjwyhuuroOWexYSqlgFKJUw4KCR15joTZvv1S2kw4ZXf3G+WfcANfnhY
5PsobnI7dS8nE+acFQqcHcZdbLKiZ73HZYhaTm0bwt3QKC/qPYirL9mcntiP
K8Oe9irmLa5xu72T3Rvc1+8KeRhduDRa2qx/J+4N7SLx9nbc8ZYvfCwvcXXm
PY4Lt+D6cPB38zXiXkrJPbfwFPd5i/Op6jrcJe8caVI1LknilvrWKtwL89nu
ZRW4/u221wzKcE+7v2l4XYzLkVai7FqAa3H13M7FfNzn59PnEu7giqoxGGq3
cJ1U4isXsnENomYTnmXgHq06OVVyE9eKrYOfnoLrMy9uMpGIe+LHZqpmAq6J
bcEqPR6Xps8lQYzFXdjkFGkcg1vWK3vcJRqXMqxAKyLjhiTTlg5E4m4O97qz
Eo4rYBl6g8CEHbo9ZiZhuNpSaWxdobgyYRkhFCZ0dSvkKWJC/u7FslUmPKNg
MZcUhis8UzDmFY57bfWcQ2gErk9D593uSFz3G3ydnlG4//vxzP/f/A8CrYYw

                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.007692307692307693, 4.655265637020084}, {
                    0.3153846153846154, 5.344734362979915}]}}], 
                Annotation[#, {{4.655265637020084, 
                 5.344734362979915}, {-0.007692307692307693, 
                 0.3153846153846154}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQfXtbLhDtto9adfVG0y4RBwYoCJrAuqP9KoJ/c/GC
a/9eCsP5y8Q/b2veKexQLbLO/WHVEvvd5f5TWqYh5LuPWE5J7RFx4JCv+XCQ
fb69yKQlbo0rYeZtsD/97lsNS4qIQygYbLVvsDFg/mks4pCiyB15wmma/RE2
l2x7WRh/m318fcLbM99EHK61H/t1IWK9PVNVo/93f2EHkKzYpgP2DH8nVD76
JwS3v2PVhuW6N4Th9uk0nWVd/wzhH6X1XBkvngs7vJW+ti/x7Wr7yh/z5MqP
CztMq5ZK3Ll8o31I7tyuS+uFHTTWL9zT9mmXfWUY90+PYoT/ml1UPTn1EfxH
79v2K51G2K+dFq7GwirsIGK9Udh642X78BMZyx5aizrIHC8Eoj32/98IhRSL
IPj3mwXl7P8izFvEXTsjPlDYwU08tuSi63J7KR7ZUu+jIg6rV4HAKftzG71e
lIaKQPWvsY/dOuu5yxKY/gP2O+ZJnS7WFXWwZNVf/uDpFPsde2J7z6bA3LPY
fmJGeYuzubBDgfzBWpbvE+0vrXfvEL8v4hDhPvu7pt5K+0lV05eEuok4XL4E
Apvsv3VV37aaKuwgtcQRiFbZH2Tl0BDxQrj3d6/nyV1XReD+iX17WEJ5K0I+
/2bq59w8EYdwgcnaHSeX2rdre5adXCPssEOu9XXgjnX2W878la+eAEtPU+wb
Pk5+rjBJ2EEQDBba33gp+GHpKkT86dgJZX0th/G32OclzW8rkhCBh5ddwOT3
27ch1D/x/nyv6ZEQ1H1z7M+uY3P5Bkx/s2aCwE77Ist1CelpIg6TVDyBaJP9
hb/v/5m+Qbj/ge2i2tlpwg4AeFgqwg==
                 "]]}}]}},
           
           ImageSizeCache->{{15.585786437626904`, 
            73.46526251342205}, {-0.4142135623730958, 16.414213562373096`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.3076923076923077`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.07697610294117647`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.045454545454545456`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.3076923076923077}, {
             Style["75%", Bold], 0.07697610294117647}, {
             Style["median", Bold], 0.045454545454545456`}, {
             Style["25%", Bold], 0.}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.09303977272727273, 5.655265637020084}, {
                0.09303977272727273, 6.344734362979915}, {0.03884615384615385,
                 6.344734362979915}, {0.03884615384615385, 
                5.655265637020084}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.07142857142857142, 6.344734362979915}, {
                  0.07142857142857142, 5.655265637020085}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0.03884615384615385, 6.}, {0., 6.}}, {{
                  0.09303977272727273, 6.}, {0.3333333333333333, 6.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 6.172367181489958}, {0., 
                  5.827632818510042}}, {{0.3333333333333333, 
                  6.172367181489958}, {0.3333333333333333, 
                  5.827632818510042}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1:eJxF13lUzfkbwPHsxr6EJolkTVHW0Eb2se/bIKQQEllGY28me0rZkkQilZBl
KCWJ7LsxZEuRXZqs8VvOfT9Pf3De53XuPd3u9/t8n4/F+BkD3YsbGRld/O8/
//u/yoofUZl1F6f4ZywvKAqv6UL/1n5B+eJuP7skeKVv9LP3E6dx27Mrst3t
5onT8nqLfi36Wc3W1xsad/EzXmBv6S1O44vjDq1xtfcUp8XHOzWsaTVO3dDy
/i2C5l9r11/f39C4kcvm6D1z7p3EaTz1W+cmT436O+O0vH9mqN/2SuPEaXHj
CjkXzTzVDY1H7E9t9HsNb3Earzfk6z/BZrPFaTzwS5t1MZbzxGm8SoS36ykr
P3EaPxd56+tLk8XitPx9/80fMtdsqTgtn69HlYTi9Zbr5zO0/H232pRba/mH
OI0fe91r4s+NA8RpfJ6L58ldVivFadw+2N/EtvlqcRp/lxPpc8JurTiNDzcb
N2mnaaA4Lb/fmenVJ5ut19/P0LjJjN9Tm5sHidP4bJPV0wrqBovT+M1TW0yP
W2wQp/HWU/eeXWQZIk7L9298bHbXhqH6/RtaPn9yhkX5xhv18xsa7+9x6/LV
JpvEaTy2ytMFoVabxWm8wvH8JqOtt4jTuNeEYrctmm8Vp+X6q1Bl2bMWYXr9
GRpvcsTcNs5umziNB4y1yfJpFS5O40/LOqy0b7NdnMbrj4iqvah2hDiNX4+z
zncLU6fl/iieeK5LnR16fxha5uOwjtsbh6vT+KN9ab7l6kaK0/L9GvXq/Xq7
Oo07DblW/2q9neI0/mbv8M8Hd6jTePj3h1dC6u8Sp/Hegzx2z9upTuPfot/4
jWoQJU7L9fPNd5BTlDqNjx5Q1NSi0W5xWq6v3cuNSkar03J/fil/J7dxtN6f
hsY9+wXHZe5Rp+X+3WW6PLbpHr1/DS3X56cdI9fFqNMyn/o0tfNptlfnk6Hl
+o1MKDMkVp2W+7+w3YN2NjF6/xsaX/5LSqJpvDot8yGi26qi5vt0Phharv+C
S26P9qvT+IaeQ+xP28aK03iX8PuVdh9Qp/GC/Ak5AS3jxGl5vnV/eWLqIXVa
5k+YT1Df1vE6fwwtz4/3nz3tDqvTsl90XeJs3Ha/OI2P21K25scj6rTMj4/d
C1/VTtD5YWj8wY5VbmNGq9N4295XLl4JU6fxtYXV7DtlqdN4bsTQnQfrHBCn
5f7+ZUulBmPUaTz036z5IeHqNP5qu0VO6YfqtHy/vdz7z6t7UL9fQ+NhBXtO
5I1Vp+X7D3/VaFSEOi3zo6dt0MVH6jS+68OsIkeLQ+K0zJdtRz33u6nT+MAe
X2/Ui1Sn8Zh8J+egJ+o0Xnzb0pgSloniND6ye0YN3wnqNH7w/U9Lcneq03i5
sD6vhj1Vp+X67LZ+WGaDw3p9Glrm27ubaR3c1WnZ77aaNI+NUqdl/nUdvblO
rjot++3b7SXXNTqi+62hZT5uyZ5h5KFO49O7NL43M1qdxjPeTOmW/Uydxs03
xx8Y3OSoOI3Pcc03y/BUp/HLr9sEtNurTuONNs3/sCdPncYXdk4eY2p1TJyW
+fzK6PyqKeo0br2xS5uiGHVa5nengIjpL9Vp/P7LC+UfNftLnJb5Hlp57gAv
dRpf7TLoSVqsOo0/eRHap/VrdRrvEPLPsSib4+I0HuRs3qDWdHUaf5Hnti4g
Xp3GO2+I+vL5jTqNb3HKc5/a4oQ4jec/t752f4Y6jfcI9nbom6BOy/PHMTE6
5Z06jX969rGanV2SOC3Pp6COCyNnqtP4HodFedUPqtPy/HqWNtg/X53Gh64v
nVrYMlmcxuM79mrmOUudxkvnrgm9e0idxscEXiv2S4E6jR/pUGNaUuuT4jRe
KWf43za+6jQ+aV2Y6/bD6jSe1P5RfJVCdRo3fmppurRtijgt54e1Hv4f5qjT
eLr9vncTj6rTuFn2m1G3P6rT+PFum7MtzVLFaTyndsfNox3Uabzq+/t9Q0ar
07hjxsKSl/3UaXzy1nrHS29Tp/EQ77QZzsnqNH6q68SG87LUaXn+m5a+l1Ck
Tst8fxcdmFfnlM53Q8t+cKZnt/pO6jTuveXl15Fj1GnZH2asORC8UJ2W/bpL
C4+L4eq07Bc/XzMrlaJO43Xf+lx3fKhO47+kGwfM+aFO43M3H3HcXzdNnMZ3
Th/+4ZmzOo1fcf2yp944dRr/ahI2ZsRidVqeT28cjYMi1GnZb04/zDyfqk7L
82vTkkUlHqvTsv9Ms2zjUOy07j+Gxm93PvNitoU6LfuRiUdEXCd1Grd5XXZo
rps6jY9Iiylfd6k6jftv7H1qWKQ6jR/wejMnME2dxrM6BVpnPlGn8Z9qtXxS
rES6OI23eXVjYwdLdVr2s1O+fWa5qtPy/A2tVSJ2gjot+9vUv449XaZOy/nM
ZdT0OrvUadnvahZZDk1Xp3GHl+F31z5Vp3GPVJd1Z0ueEafx4JAnXYwaqtN4
ypTlX+y7qtP4S+dGCTPd1Wm8Vo1z7jH+6jTu+mJy7ewodRqfkVL+Wu0MdRrf
uiHuj8G56jR+dnI/hzWlM8Rp/IPT+/dnGqnTeB3j4Ojv3dRpvGde61/beajT
uO/J29W8/1Sn8R3B887tiVan8Uuepgsfn1Wn8c+OSa1Mn6vTeMPqY/IGlj0r
TuMDnv8IX9VEncZ/T94xOL2HOo3vDXItV+SpTuO3PHJS2qxQp/Fijn/6Tt+r
Tst8qda0WXSmOo0Pe3b+0cM8dRpfluQValLunDiN719fqfcAK3UavzcpodjK
Xuo0XsZh4NG0Keo03qpqgdfXleo0PjY3pH7rfeo0vupEu7+9LqjT+NHAu2ui
XqrTeLb7AtcH5TPFabxyxzqfa1qr03jHKinx/Xqr0zJfcsZNDPBSp/H1x4ub
nlqtTuPJ63Zd+RyrTuN5E7v5t7ykTuM1OjzvMPW1Oo13qrzy3c6K58VpfNrT
Zrvv26jT+Oa/Lo2q0Vedxs+snVG173R1Gn8/oerZP9aq0zJf2h/yS4lXp2W+
VBrS8tNldVrmS3bhM9u36jS+/dimbZMrXxCn8QtrOgyKbKFO4x/H3y97r586
jVvaLzxZ3VudxvtVrDe7d6A6jS94cqqpf4I6jUcfnfAw+ao6jd9YXSqk8J06
jf9wi+7VoupFcRpv1q6nkaedOi3zpcLLwxED1GmZL49XT707U52W+XKkuUW1
IHUav7vq6u1eB9VpvJSbz+pl19Vp3K6tceekfHUa/7X8kY8F1S6J0/iKR8Pi
bFqp0/jhw5/HTxqkTuOPV2412T5LncYrjnO8fCdYncbbt3m4rEqiOo27l1vS
vudNdVrmy8P6b5cUqNMyXxLTdx03vqzzxdAyX1ZMGvmhtTqNVx9btor1EHUa
d24dc2airzqNT/2p94JtIeo0vvHBa9vbh9Vp/PShdbmVbqvT+NsAu7Duheo0
XnvMjQGLa14Rp/HurXzL/NVWncZnla2V/H6oOi3zJeuYj9VcdVrmy8GRTSZs
VKdlvvz5LWvrUXVa5suv4cE376jTeJ+WLj0rflKn8aQSM3/Ur3BVnJbz1ZtO
I53N1Gn8+d/VDo+yVqfl/HU6u/I8B3UaN45PnLKhtzot57NN/mcSRqvTuMuy
ofUueanTcn6b1nhBnp86jXsN/3Sr1Bp1Ws53rpm29bep0/gmmy2rnOLUaby5
ydTckcnqNJ5e3KHT3EvqND7ydYWw4Cx1Gn93J6tw/2t1Gv8jLX7AxSJ1GjeL
WxT7vOI1cRo/uLF/mVLm6jTeY6nFeIvm6jT+wCs/ydFJncZnDztda2RfdRov
13mDz5wx6jQeYe1+KWi6Oo23rdW2yf6F6jR+vliZZRfWqtNyvn11J+tZuDqN
F97eY19yvzot599T84PrpajTeP3YXm8crqjTcj4Ord1zxEN1Gu+75NVO37fq
tJyfpyZ/X/9DncZ/G7p2RHzl6+K0nK87jU08X1edxnc3s638rIU6LefvmsWm
lHBRp/HrRtfT6/ZXp3HPl5F1Hcap0/j3W7N+G+6tTuMbUrvcmr1Yncat9tWw
XR+oTuOpIbkr4yLUaXzo4qM5mQnqNP5qSoBLbqo6jS8dMmJr8WvqNG7iYlVo
/lidxuOtvvbv+F6dxrvUuLhvWLEb4jT+z4+w0rOrqtO494tpboEW6jRe8pZT
UqydOo1vSalcK7OTOo3bxjyamTNAncYzNhy4WGy8Oo2PXrS0sbmPOo3nTx60
tMNSdRoPGNwga2iQOo2bO//bblakOo0nNs0IWndQncZ7GW98vS9NncYffffo
ce66Oo3PybPf+fSJOo1XuPnTd6MP6jQeefKf4XVK3BSncfu9+w61r65O45eD
/SoNtVSn8YkL+0z2aaVO4188zdPXuqrTeOCgt+b7BqnTeCOn1PlnJ6jTsr80
WX8ze5Y6LftL9fEtjJar07K/FLVcabZBnZb95XmJHPtd6rTsLzduOg9JVKdl
f0mO2jIzXZ3GnfbM+XfNTXUavxnUvX/MU3Uan/K7yb6MAnUaN/LMK5Vd8pY4
jYcOPD7uh7E6jVs7rjpRu6E6jac1Hl3Tvo06jQ+vZjNzcFd1Gn/zreiC9xB1
Gl/+7HKjNe7qNG56ffuSvb7qNJ6Q5H3/jL86jXeL7tTuSYg6jd9fXy3oe5Q6
jfv4Zb8yPaJO42U9Eru3y1Cn8fAB/pGDbqvTeNX//yxJwWnZr7L+96Ovp/H/
AIsDW/4=
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmQVwVVcQhsPDHYIGDe7uAYJbgOCuwT1ocEJwCO7uTnB3dy1eKMVaWigU
l0Ip/Xfed2fuTL+es//+u3vueZfwMmRqF1q/l8fHx+eC/hddawwf72paNFaL
Y5KLJWKLOCIu+1jETr15E4oEIhGxUxcXbzwRnzUBuqOlEMlFSuIE9EsmfMkl
pHdiSCKSilwit8iDnsiV86VHKnqnRk/iyiVnfgo85k0v0okMxFbnJ7KIzCIr
cRqRVmTE60+chvpMaJnR09Hbj55pqPXHm0/kFfmZZXOyiRwiu8hJnJU4F1pu
9Ox4MzEzC3FOvHnw2oytYpvYLgows6AoxFpYFGEtytny4y0lSooAYqeuGN7i
7G0tAcWpKeTqXQS/eUvTr4woKwJFOfZliEu78uXQyosKrBV5xryctwQz7byV
yFem1qmrglaVuCLeamjVRQ3WIFFT1BK12QcRV3N5a6MF078q+TpodfE5/Spx
BvPWI19fNGBtSM9getTBY95G5Bv7eN8tew8zknN6NMBj3iZ4mxI3RmuG1pz7
CuC+W6C1FK1YW6M7Whu0tiJEtBPt2bclboXHvD1FLxFK7NS1x9tBdGTtJDqz
dhHdRQ962L4bcUeXt72rR2fqulLTg9ld0btxDtN6o3ej92gxRowVfcj3FePF
ODEB3bR+YoDoL8LEQDFIDGYfRtwPzwDm9qbHAFfdYLxD8PelZrgYJkaICDGK
M9p+JPFQPMPpMwRtOHXh1Izi2cLRR/KcY3i2cDTrPZFnnYRnHHewSqwWa8Qs
MVPMJjeBukjqJospYqqYxn6yK54uZrCfSjyR2khwesxhzlwxT8wXC9jPJZ7B
eWaRM20h8Wx6zHH1WER+sVjCutTH++fC3v8W9JxO3wX4rW4Z3uXcyUruZQm6
5TeI9WIjsXlXcHfmXUu8nPp1aOvRV9J7Dfo6WE/vnWKH2CU2iyixhZzN3MRZ
neezP/NNeb5NeKLYR9FjKz22EW9B245m8+z7wnmP9/vEbubvEXtZ94n9rAc4
p3nMe1QcEceInbqDeA+xt/UwHKJmr6v3fvzmPU6/E+KkOCVOsz9BfNyVP412
RpxlPScei0fiCXOPcN7z5C9Q69QdZa71vkj+krjMegXd0a6iXRM/ieviBvtr
xJfxXGXuBXpcddXdwHuTc5zDe0fcFnfFffGLeMD+HvEtPHfocxPtDnU/U2Pe
X4nvUv8Q7RH6PXrbu7GDz/kBnofwiHt9zL0+Fb+L38Qz8Yf4Uzxn/4z4KR7z
vhIvxd/ETt1zvC/EX6wv0R3to/ggPhG/pN978Y7cK3q/hjfiLWd4wjle43Fy
7+jxmd5fiD8w8x+0r8Sf8H5Gt3x0ffn2iBjRvLF5v4kf4j9hX84t/ld8h3/J
fWc1b7RoXq8H/1d8P+gRDSxvM2MyM5aIzRqHXAzyt3g37F2JSz6eiM+aAJ/T
IyFaImLzxwWnLjH5JMQJqEsmfEVy4kR4/URqkYbY6pKKFHhTimwiq8guUqGl
xudL72T4U0BKvFlEZur9mJNWpBfpRAbiNMQZ0fzR0+FNxUw/4gx4M+HNTOyP
lgnN5hcTxUUJ4qw8UwGRXxQktufLIfKI3CIvcU6RC3KSy8Vq3nx48+PPji8P
ej7Iz8xCzCwsirAWJVeQfGkRIMpw/qKuZ7C1JD6nRym0AOKi1Nl3FPuuYt9d
SuAxbwvRXLQUFURFUUmUE4GiPL4AzlJFVBZVie1cZUU1tOrEgfSoQA+nb0Xq
K7FavzoiWNQlrkq/GvQLIq6OVhOtlqjNGkwuiHxNV97eT3uffTlTec5Vj5n1
8QVzlnpoDUQj0VA0Fk1EU9GMfWPiBngaUV+XHo1cdc3w2l234r5bizasbUWI
aCfa87m0xBtCvh2z6jOvLPcfSP/m1LXH24F6Z05HtE7EzszOaF2o7YC3K1o3
PF3QuqP1ED1FLxHKvgdxVzzmHSyGiKHETl0o3t6iD2tf0Y+1vxgoBtHD9mHE
fVzeUFePftQNoGYQswegh3EO04ahh9F7mpguZojh5EeIWWKmmI1uWriIECPF
KDFajBFj2Y8iDscTwdxh9Ihw1Y3FOw7/CGomiglikpgipnJG208mHo9nIn3G
oU2kLpKaqTxbJPpknnM6zxaJZr3n8Kxz8czkDraKbWK7WCaWiuXkZlM3j7r5
YoFYKBaxn++KF4sl7BcSz6F2Hjg9VjBnpVglVos17FcSL+E8y8iZtpZ4OT1W
uHqsI79ebGDdKI6LY+IEPRfTdw1+q9uEN4o72cK9bEC3/G6xS+whNu9m7s68
O4ijqN+Jtgt9C723o++EXfQ+Ko5w1v1inzhAzmbu5azO89k7Ye/GBHJ7qNnL
aj0O0uMQ8QG0w2hHiA+hHUazs/jp95PUIo04rfiUOEPuGPd6UVwQl4jtjk+K
s3jPiTvitrgrzqNdwGc9T8MZ6s7iMe8tcZP6i8y5LK6KK+Ia8SXin9Cuo1/B
e56ZF4mv4b2B9ybxdbQbaDb/D/GneE58m2d6LB6JJ8T2fD+LB+IX8SvxPXEf
7pG7z2reh3gf4b+L7wH6Q3jEzKfM/E38zvqM3BPyr8RL8Tfnf+Z6Bltf4HN6
/IX2kvgZdSn02acUqTze2hd4EypOIBKJ94o/iI/irXgj3uF7yVk+i0/iC7Gd
67X4B+0r8Rt6vKeH0/cD9R9ZrV80+0VaeDze+Av9vtHvX+KvaN/R/hM/WK3+
G/p3cPL2ftr7fIozveNc0ZkZw+P1WQ87S3S0mCK2iCXiiLginojPPg5xTDyx
qffQI7arLj5eu+vE3HcSkZTVVyQTyT3ezyohnsTovuRicjab95r7t7uOT++E
1Cfn807smpMKLTWxM/Mtv8/Z73Jp+TmRTswSM8VskU1kFdk93p8n5jFverwZ
REbhLzKxz+CKM4ss7P2J01KbHpweOZiTU+QSuUUe9jmJs3CebORMy0ucnR45
XD3ykc8vCrAWFBVERVHJ4/1eZd+17PtUFs5oMwrhLSyKsBYVxViL07Mg3tIi
QJQhdupKiJKiFLHTowQ9SvIseTlvKfpYv3KiPOfN53qO0swpiycQX1n0QGrK
85xVRGVRlWeuSFwWr/WoRr66qMEaJDqLTqKLqC2CRR1Rk3wt+lelRz1RV9Qn
dvo1QGtIHESP2vRw+gZTX4fV+rUQzUVL4vr0a0S/xsQN0ZqgNRXNWJuTa0y+
iStfifuowplqca5WzGyNrzlnaYXWRoSItqKdaC86iI7s2xG3wRNCfUt6hLjq
OuK1u+7KfXcT3Vl7iJ7C/jEzlM+lC96e5HsxqzXz7F2y9yuA/p2oC8Xbm3pn
Th+0vsTOTHtf7V21d7Yf+f706U3dWDFOjMdj+QFioAgTg8RgMUQMZT+IOFyM
ECPJmTaM+jB6DHT1iMA7ink2d4JYJBaLJWI0+TFiOP3D6T8MLZw+EfjH8BwR
1I4mHsOM4dRar4nMnCQiWSejO9oUtKlimpguZrCfShyJZwrPMoEeU1x1M/Da
z+U5Hu/P5rliHut8sUAs5A5m4ZmDPp/cMrFULBcrWFfSfyZ1i/Aupt6ZswRt
KbEz0/5+sb9b/PAsZc5RcUQcE+vEerFBbBIbRRQ+5yyrOMtqsUaspW4z3i34
VuJdg9fxrWXGTrFD7BK7Wfd4vO+SvZP2Pm2l3zbOtJFzbUfbQRzF/K3olrd3
3d7/fuS2kF/lOvsGzrKRmh2ca7/YJw6Ig6yHOKedca84zp2dIN5H3WHu8yix
0+MwPZzcMXrYVxv7dwr953Na/zsjzpKz3ic5k3NPeznDPvoeorfVnnLV23qO
+hPkLqJdQj9F3Vl0y/8P3q/3vg==
                    "]]}]}, {}, {}, {}, {}}}, 
                    VertexColors -> CompressedData["
1:eJy12+k/FYgCxnFCRIeojD2KSpHClLJGGCJLiSuyHDtZCmU7OHTIWBJZztiy
RtZK5toGHSrJVpaELCmVyb50SHc+9/4Dz3lxnxe/71/xSNh7mTpuYWJi6vgn
LP9I9I2wOLj4SR11kCeuVKMDl6Z0eN6jEFe4S7u4NRy3MvrkmNVlXMeLu1+p
quDe8LS29xDGtVOYk5ha/wgrf22XSeYIbvMnYiq5CZd/zdg3KB9XSDhst8st
XGpZbMJeL1wZf7nEUDPcSsUfjkYquKe05zcv78MlHznx6QYnLqXyk4bT/BSs
wXCex9wAbkmR1OB4AwMe+XaKPQ/Xen9L39EoXPJtthAFN9xHjXYxn8/i6qVy
dirI4B6tWQygc+Lm8ugayE5/gF3I5DalPcX9cGV0Z1MmbvLk6xJpf9z2iJYi
PkPcGCWrV8l7cZtoMtk9K5OwktWnns+/wH2RxmYtmYHbbNv8OvMK7i8/aHmp
arhKBvLEczy4R9tNZZnHJmDzf6ZZz1Xi8tpvd7Yi497mHa2IvIC7/Ez7euEB
XLeE8Jfr6+OwfJVWd2t7cDNPtmfvLMa98zdNXZ6MK5Agq69sjdtZfpFmcAq3
pTOIFCKIO605QByhj8E+Ovfyte8o7iTnrLg2DZdVdqrnt1Jc/z5XLt8U3Ppm
EbFqMm5FW9TRZW9c0hUTZkE73Ht9Eg3M53GNuLwn43RwH9rRhKjKuB3bjxls
kcc93k0Zy5XGzcgMeW+xlwFdW31ZRHBT3MjUSH7cn1/J75p5cbsrPmzmE3Cf
D86ki3DiXvO1uynCjtsrpK+YxYr7uIv6JWcL7hOPb73SzLgiboKLWky4TP8d
riblT15fBjTloJ6sY8atq3LYWGLBza5VeHSGHde5xqq/mwu3q532awsvrlNW
1F4tQdzu+6Rg0l5cbp5Ti1myuAfP6O3oPIV7o6tXUEEfd6uacMHCJdz2N8HK
st649nTnr5sUXNK/R0mkHNzIcqfR+npcmpwckfYOty3o5kjaD9w3RC/Cib3j
sOLlZKlkPVyZ3KDhrGu4ncc0zqrk4EqnGBAMu3B/nGXbVsI0ActvYtsppYjb
xq23J84VNybHJ74oB1cgTUVB6S2ukIut1ybfJGwnV1rLE0Nc+s7A+8K3cLVE
XYM/0nCdY0Ntupk+wHaEWIkkqeB6j3ezfrmOO0xIb73zEHcqPEHm3AyuGvmX
0THJKVimtvcrO61wdyjEplYn4vL90WyT3oor6KTclLaKu/DckSPpwEdY2kES
h6cZbtZnnprd4bhPfZo1gktw+d0PZqT34MqbLg26r+COHJC+uCLwCdaYzyjo
9ElcTb0kdUtzXCGlMyUm13B9J2vUVOJwA+rEZI8V4NKnBc/p1+EO0z435Hbh
esV6sphP4Oau7ZuOWMQNdVi21WGZhk32qqyr5cUNXO3V3xDDTWDbrip1GJfi
MZRheBxXxoHCFauBS5Y6Kb6sh5t1y3CWaopL6RrOi7PENTNI0Xlnh7uVwjOc
4IJLftqdWe2Jm1J6+JKZL26WmJiefwDuSvijYTESbi+BwGdGxtVUvuUnRsFl
lVPZCLuFqyhiMEOOxRV1Uz97OAF3v/4JV3Ii7nrhJO+dJNxrBk3Zjndx69t1
ZTlTce+/Oj4Qn4a7MhuZw0rFDQ6/Z0z6A7d016G7OzJxDRw3wnqycPnD3rQP
5uCubBUhqOfhct/mvi1aiLvid3Iirhg33lXHpbgMt4HybSP6Ie4V3SrNM3/i
uozL8c834vqp/9qU14b781AFl2cXrkVtqMvlt7gk+b0Pwj7g3pZUrxyewy0U
men338TdHkzNNiJ8hqXwiWcQRXFHtnCZPDiC2+IfYSt8Gnfj2kRe/gXcqB19
RxVdcRe66wUek3AfOzH7c93FdcwJChArxZ1x9NTqeop7qN/daPMd7vAIV3PM
Eq7PqsuAKeELbNGrpkjF/bh6h4l0gjpuh/ae+w3muC8/e+/a541bJmklsSca
V9fwjG5yNu5qccSM0xNc4mjWg5AOXE3SnqvN47ibOmSK6Aquom8ne9i2r7DS
3hbUt8K4cY3cFFFZXJv8krLTqrhqAQYhaga4xZ/7ergtcU1vOAxVOOFqqpsu
i1/FXWAXjiEG4353ozAF3cR9JjC10yMO9xjvT5JqMq5IlZDqajrusQb/+Nws
3Hs2Iv16ubht5MDAtXzcJ6XsL2oLcX/ITw5nFuEqHtGJrmDAC+85zTcLcRWJ
7FLpBbh//ZUQkZCH2+1H9JvPwXU99N2zKxO3kb9y4iQVt7bywdvTKbj1sxXX
1xJxA96srnnG4S4Nqec+icatuGVaPBaB++iSkfAmCbcrraFpTyDuy33ZP838
cKedB+sqvXETisT11T1wLcu5pHa44AaPW2YedcCtjpsLLLPFNbvxdf8da9ym
ZZ9n05a4umxXpWotcBPntqcQzHE7Es5PT5vhjmlPmBsz4GBad6QOA16Y/s2n
gwEV1OmR4xdxY5t9UiIscPk3tejllrg/yl6kXrbGHbffwRJri3vXOfQPOQdc
UmlyuYYL7no/W1a1B26iaChHpA9u9neZpRx/3DxJU3bmYFzuR2LxaeG4B91W
ai9F4e4eYttQi8OduqlTczwJlyzOsnwiHVfQM2n5RDZusnP5FtkC3KX7xGrC
A1x9x2elPZW4bRNbBX2e4L7nj+SfqsOlHdsxd6AZ11urvkqxDbdYLtWY/SWu
dDdrQUYXbuv+V3YLr3HdmU052AdxQydsht6+w13s5m13e4/bIq7uUjuBK533
sefFFC63A2smdRp3hHq89chX3Crl2LTov3FbxDvyS2ZxO+OvF6TO42pbNl41
XcQVocbPjyzhHmIdZVVdwXUV0Ai7uoob6dYrHL6G+34g1NX9O26xT/JLBTru
bvcUj2EGFAq6oOS8jtvX+Ut/HwM6vv6YJ72Bq5Tf9pDIgF6FX55GMqAtlaYT
x4BuG1/MQxjw8sOupgsMWBOivcbHgPnKA/tq1nHp9muCGgwoISvkWErHtZJ9
rEv/jkuPN2k+wID1SdXJ8mu4ctsOGQms4rZKbDPpX8aNMk4ccF3C5XIkcHQv
4MbJmm2wzeOq2OV1c8zi/jv78cO+GdzN3YILrl9wi7hTeZ9+wn1V4P129APu
mo2pW9047rWPecbmo7hRQtOpVUO4HpTOkRf9uJHu8Q45vbiFz4Ulj3fiRks3
v419gctzvnB3EQ3X37hDO/ov3CVjrkbFWlxj+8L6qse45kG73NkqcAN8yoaO
F+P+69eNDcM8XInZE/fOZ+LmKA0ZmaTibhn9JGySiEvtTZ+x/h33iBcrS8RN
3I3frZZfhuKWOavFnAnETThikbjmi1slKV276IX7QYnqetodl3ddK2HGCXfj
b/Wgn/a4Ez7O1RE2uD6NY/3hVri7PHudmC1xMwgcdRwWuOaaaiMZF3H7Jh/5
NZvhno8JrbvBgARXdvenDJjU9aYl5yKuoX8/hdsCt+Hbj23bLHG3Wm+q/m6F
yyfT+TzeBpfe6b5nOxF34I1uAd0J93+/pZn/m/8BdcHSAw==
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.008333333333333333, 5.655265637020084}, {
                    0.3416666666666667, 6.344734362979915}]}}], 
                Annotation[#, {{5.655265637020084, 
                 6.344734362979915}, {-0.008333333333333333, 
                 0.3416666666666667}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQPUnFE4g22X/8vKiXN0PCwRgMNtvXNf/c+6dTwuGX
xJz+gz9n2D9q27xzZreEg4j1RmHrjZvtmQMmtbdOlHCoFlnn/rDqiP2v17Nf
1GwSh/KX2N+7nR3oeVXcgUO+5sNB9v32N+Pe5pffE3NgAIMd9maiGQprJ4o7
hILBVvvoFTplDZUSDimK3JEnnLbZ+wUv5Dc/BeMvs9/2aKGfo6mEw7X2Y78u
RKy3X6a2UHgPpyRc/TH7Uw6sR8Wh5jMwlF7tfXFniQSUv8BeOPNrjJ+tBFx+
vytTJou6hMNb6Wv7Et+utn+0hM3ka52EQ+LO5YLTqlfZ70o3/csoJ+kQ51zJ
+9T0iH1AVCgP+ySE/p27VXYJqcLcf9T+A8N+keRrMPkN9soGIX0blos7zLvR
OfdG51n7t8oPH6n5w9RftRd5G+5byYgwj+PoX9EuN3EHN/HYkouu2+0Fpr19
90pWwgHIAYoctBdZcPmF/0cJuH0B6RHWUvaSDjLHC4Foj73QAaPY718R8Tc/
t2PJv00SDpas+ssfPF1if2B+0YZQLkm4feZen06FbJVwKJA/WMvyfaG9neex
dgtzcYcI99nfNfVW2lc6P9S2WyrhMH0aCGyzrxFldgvREHeYnv9zWv7PbfZ7
NuaIVD+BmT/F/u/8OfcUb4o7ZOgv3NvybZH92Qr3lA0bxOD2zfzpMGdLuoSD
o886BbXwDfYy4tM3OX+ScJg1EwR22sf8/WG+tUICnn42dF6IzTeVdBAEg4X2
QpNmqUx7jUh/FiZxd4vuw8Jvi/3mBRPq5p8Rh4eXeM+jYxvLYeoX2+tMvrMo
R0IcGl5r7I/8XLt81iFxqP0r7fedCgmSTRZ3gOUHlnsbNjgsh6WnA/bpnWaa
1jPEHQA6Uz17
                 "]]}}]}},
           
           ImageSizeCache->{{15.585786437626904`, 
            78.41421356237309}, {-19.414213562373096`, -2.585786437626904}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.3333333333333333`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.09303977272727273`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.07142857142857142`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.03884615384615385`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.3333333333333333}, {
             Style["75%", Bold], 0.09303977272727273}, {
             Style["median", Bold], 0.07142857142857142}, {
             Style["25%", Bold], 0.03884615384615385}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.10677083333333333`, 6.655265637020084}, {
                0.10677083333333333`, 7.344734362979915}, {0.0364010989010989,
                 7.344734362979915}, {0.0364010989010989, 
                6.655265637020084}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.0625, 7.344734362979915}, {0.0625, 
                  6.655265637020085}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0.0364010989010989, 7.}, {0., 7.}}, {{
                  0.10677083333333333`, 7.}, {0.19230769230769232`, 7.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 7.172367181489958}, {0., 
                  6.827632818510042}}, {{0.19230769230769232`, 
                  7.172367181489958}, {0.19230769230769232`, 
                  6.827632818510042}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1:eJxNknlUDvgaxwshlK6lxqSJopOaUGNJomx1SBkUTbdQpmSrFComZOzCKAyy
ZA0plaSEpnIrXUshqbFmiWgS6ZpM0z1zzvN8n99f7/m8n/N8ft9z3revX/A0
/zYaGhqfNTU0/vmcM2lR0LmDobnrC9c1thz62pF5xYiVndv4GjnOOTxJp198
kHhi9n3OXB71pnkePDP73zIGBqV4+cIzw68aM6pmqYd4YvZrzF3snwc6wjOz
1/CqbKs3eIgDe2b2jmO6JUROngbPjPctBzrUx8yGZ8Z95/7B6QEBck/MPkHj
/Oi69ovhmdm/X9Gnw667S+CZcb+sJijNdJncE+P9kJT7t8Ii5H1i9BcsG/2u
YKX0idH3tz+p3WO19Inx+6VqbuxuEw3PzD7C6qWdSdVaeGb2pWeK/xi8dh08
M/rmZ486WGyQPjH6J3bMcLuzUfrE6JuEdfJZsVn6xOgnzLi60GSr9InRN7IL
XVESI31i9PcbmW0O3S59YvZ6MRp1Ljq/wDPj/zPpg9P0Z+KZ2Qdqv0jwurAT
nhn94vJm382x0idmn7WhyH2+Txw8M/oTslNCrHdJnxj9dkkdI7R2S58Y/fwD
fqsrxTOjH7398obkPdInRt9xjf726F+lT4z+30tCdnvslT4x+lfmlhwYsE/6
xOj/5NHveIt4ZvTtnFclle2XPjH6f9o+SD8RL31i9LMsbC5FHpA+MfrLe8fk
uR6UPjH6Q3VfFfc9JH1i9BtbHUo/iWdGP71hX8X1w9InZp+R1RBZ75YAz8y+
495as49Z4pnZe4c/v9tkcgSeGf0ZD9c0x4hnRn9YudXfTeKZ0e95q0rT96j0
idFvLNyo9V/xzOjfyx2iPfSY9InRP5/1rMth8czox6Zt19M+Ln1i9EPPjOwR
Jp4Z/anHXhs8Es+M/uADuw2dT0ifGH293WON08Qzo1+/rd7E8KT0idG/teGA
2XrxzOinrJ5oUS+eGf1tEU1WPyRKnxj9RUuOWReIZ0Z/8oLvh1qdkj4x+pZz
W2x/Fc+MfifvM/aap6VPjH6t+0zHheKZ0b/u2m58uXhm9E85pTk7nJE+Mfqb
HGa5nBbPjP48285TuidJnxh9J+usaVHimdE3s/CfUSOeGX0t025eU89Knxj9
F4a5PjnimdG/1mORb/9k6ROjf0ynl/8O8czor21fGPineGb0/VpDF81NkT4x
+mM+G4fcFM+Mfp+GG2HDz0mfGH2N2sjwI+KZ2acEL4m7opUKz8ze60nd/Fw7
8czs201Z4JgXLJ4Z/auv9AuOK31i9AfOrbtWqfSJ0T/0pKBQN036xOjreO8v
HieeGf2oByElEeKZ0a9zd76RrPSJ0fcuM7pVrfSJ0b/h2njbIF36xOjbl5SU
TRbPjH6S05G70eKZ2XsaFoSXZ4pnRn+rg1vFW6VPjH5zTr/KPuelT4z+Atsv
VR7imdGvyih7uEU8M/oTrU89zlX6xOhnJ6962qj0idEfYOFRPSBD+sTo7z1p
+WKWeGb0O5q2eRUnnhn9iMMPaoqVPjH6NYbn3rQofWL0Z+5d/9bmgvSJ0S/q
4V03Tzwz+sN22tQfEM+M/kkd7YYypU+Mvv6WJx/aZ0qfGP317TMbR4pnRv/T
2pimEPHM6Pu3+n0+ofSJ0b+3ckRzldInRn/8565/db0ofWL0M5a+ahkvnhl9
04bLrZHimdGPWxyneU7pE6PftnZ+2xdKnxj90ABHrV5Z0idGv7pav4ObeGb0
p82u6/izeGb0834v6JSl9InRt/bc36VO6ROjf+ReiK5JtvSJ0deb6qw3Uzwz
+mtuGnWLEc+M/vuJjd3zlD4x+rMLS3o2KX1i9G+PPWJgeUn6xOg75Ib3miOe
Gf2UkW6Gu8Uzo/9NVj+jEqVPjP72IV++aVX6xOi3pJb1GZIjfWL0F1udMpkv
nhn9R6dX9Tsknhn9yWYeZneVPjH6l49amne8LH1i9L81bmMxSjwz+vHxDyxD
xTOj3/mrc1aJSp8Y/ZW71g96qPSJ0a/V87b+1xXpE6Pvtc3mOyfxzOiXaGsP
XSmeGf0RG54MS1X6xOifbpNp+1LpE6Pfa3WM3ddXpU+M/qYvfvZTxDOj/zl8
xOh14pnRD2zs6pit9InRrwh5NeYPpU+MvnPd5XGmudInZt/m4vy4CZ7imdE3
ezXfeZt4ZvT3+DlOzFf6xOi3f6Lv8j+lT8y+4lLycjP93+CZ2Z/98NY3cbB4
ZvbRFhau5i7imdnP9Au0Pe0vnpn9t/tPmlqsEc/MXvPOC92k/eKZsV/btNny
grKfGPvH+L48e1vZT4z9kYdLrWqV/cTYn/YoJ6Vdnuwnxv43homDjMUzY39f
r9jUEeKZsd9zb5S1u3hm7P/lfmB6kHhm7C/u4f7dZvHM2K8x3SHjmLKfGPtt
d1oMvarsJ8b+kNs9Mx8o+4mxP1FHc/hHZT8x++QnLu8u6uTDM2O/wZYKW3Px
zNg/pTg/e6x4ZvZWG9un2PmIZ8b+3PH7csLFM2N/09p19rHimbF/YF7wlbPK
fmLsD2j1Gl2k7CfG/kOjnHKfKfuJ2VveX2nt+Jd4ZuzXvdQ7T79A9hNj/4TP
HcZai2dmnxQ17GO+i3hm7L+w9PG4APHM2F+Xfv3aGvHM2N+/IWNCvHhm7PcZ
lFB4QdlPjP27Fm91LlX2E2P/jaTlxbXKfmLsb1frO1Hrmuwnxn57c9cSY/HM
2L80wNbFTjwz9p89bnrDXTwz9j+v1nUNFs+M/YZ9m29uFs+M/dNnv3Q7ruwn
xv6tB0tvX1X2E2N/we8531cq+4mx/0uvxLKPyn5i7LfxjJ2m+x/ZT4z9C/ZE
3TUXz4z9R+8Fuo8Tz4z9Vd3cy33EM2N/t6kOMyLEM2P/pB0WFbHimbE/+mZP
z2RlPzH2Z3fWrCxS9hNjf8PEdz9UK/uJsX/Apoqqv5T9xNjvW5j/b4NC2U+M
/fvapTy0Fs+M/aVj9/lMFs+M/R2j1z0OEM+M/Y65wbOjxTNjf0SL19N48czY
nzrSyTdT2U+M/a8jratLlf3E2G+c1XvuW2U/MfbPbOrwQqtI9hNj/44hH3/s
I54Z+4tCH7+0E8+M/a2p1wM8xDNj//D6jJpg8czYH2SVELhFPDP2n1y49c1x
ZT8x9j8+vXxBrrKfGPv1X/u+rVT2E2O/m5nrokZlPzH2b/jRtk63WPYTY/+V
o6ZBA8QzY/+np7r148QzY7+VcXPwLPHM2O/v8/J9hHhm7D8YX7okTjwz9pdX
5nxIVvYTY3+XrxLDipX9xNg/fkZsY7Wynxj7f9oVtaxF2U+M/Rl3ApsMrst+
Yux/p+cebiOemX2PkWndR6aF5bJnZp/e/Z8v5J6Z/f8BaiAVVQ==
                    
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
Pw==
                    "]]}]}, {}, {}, {}, {}}}, 
                    VertexColors -> CompressedData["
1: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
                    
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.004807692307692308, 6.655265637020084}, {
                    0.19711538461538464`, 7.344734362979915}]}}], 
                Annotation[#, {{6.655265637020084, 
                 7.344734362979915}, {-0.004807692307692308, 
                 0.19711538461538464`}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQPUnFE4gW2Yscc7hUWiTtMGsmCKy073Q29fHcIO3w
S2JO/8GfK+wtF8y3+DdbxuFm59wbnXNP2N/66HLBpk3aoVpknfvDqiP2Ujft
JXmcpB12yLW+Dtyxzz4kWuTCzHxpBw75mg8H2dfb/1I58Uo/W9qBAQx22Ate
WrI1+6aMQygYbLV/0eJf1bhC2iFFkTvyhNM0+9rZRbcWXZeC8rfZb5ooVdlY
I+MAce8h+xer23d6y8pAzWNgeGH6PYG5HmbeUXsx8e0ls09IQeVX2Ds9vdov
OAlm/wb73yWTpjmnyTjME3qi6TjvkP1ZsTr91xulHBJ3LhecVr3KPjR16wzO
f1IOGusX7mn7tMqeK+R2pP0rGQcR643C1hs32y+7Ke4Yl4uw39fxVIlWtgzc
/DtRfBll36Th8n9+5VgF3ZaC828VHGd8dV7KQeZ4IRDtsU/4+Nr6bz/CvLev
7FrNlWQd3MRjSy66Lref+7Q9ZOU1aaj/ltp3ntU9tfgyIvz0tqdvfwD0vzEY
HLb/NsXf6tBrKYdr7cd+XYjYbx9g8YXnBiPCPU6yFRfZN8k4xDlX8j41PWL/
e9bupamesg7Wt/b4F57cYL+zLPNRENC86dNAYJt9QfgXVoc+aQepJY5AtMr+
kb2SyvsHCP88Tpky6/FxGYcM/YV7W74dsvc9vr6i0lHWQeFHo/yPxn77mZrm
P/g2STuEC0zW7ji51Z5109pjoqwy0PSzxP7DsSMXw6Jh/C3224ztzwlfQKRH
rrNP6rY+kIaG/2H7N3ZJB/wrYOG1w77tNZOX/i9paHhtt9+8b5+cdhNM/WJ7
bh3ze9mNCP8/fa5V5/cBEd4s8SbzbNhl4fyau5J1zkYw9Qfsz/QWzbE0l3UA
AB23NMQ=
                 "]]}}]}},
           
           ImageSizeCache->{{15.585786437626904`, 
            53.43475552041505}, {-38.684734999681964`, -21.585786437626904`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.19230769230769232`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.10677083333333333`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.0625`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.0364010989010989`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.19230769230769232`}, {
             Style["75%", Bold], 0.10677083333333333`}, {
             Style["median", Bold], 0.0625}, {
             Style["25%", Bold], 0.0364010989010989}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.125, 7.655265637020084}, {0.125, 
                8.344734362979915}, {0.04041666666666667, 
                8.344734362979915}, {0.04041666666666667, 
                7.655265637020084}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.0975609756097561, 8.344734362979915}, {
                  0.0975609756097561, 7.655265637020085}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0.04041666666666667, 8.}, {0., 8.}}, {{0.125, 
                  8.}, {0.45454545454545453`, 8.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 8.172367181489959}, {0., 
                  7.827632818510042}}, {{0.45454545454545453`, 
                  8.172367181489959}, {0.45454545454545453`, 
                  7.827632818510042}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1: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
aAkcDW9Y9O8/8PFo+P8AGCkIZg==
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
                    
                    "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["

1: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
                    
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.011363636363636364`, 7.655265637020084}, {
                    0.4659090909090909, 8.344734362979915}]}}], 
                Annotation[#, {{7.655265637020084, 
                 8.344734362979915}, {-0.011363636363636364`, 
                 0.4659090909090909}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQPUnFE4g22aeGTypZo6ngwAAGB+wn5HXnffdQcPgl
Maf/4M8d9snrfhZe/S3nIGK9Udh642b7bk6ekqnaCg475FpfB+7YZz+dabvc
rg9yDtUi69wfVi2xVzszPS91k7wDh3zNh4Ps8+3Py3S++O0DM/+EfY3P2zPG
P+QdQsFgq/3yTFnuU0D7uSNPOIlt2mA/LWDWbi0GeYcURZDIMvs3qumPBToU
HK61H/t1IWK9/WHv3VJ/n8lBzWNgWPPg6k6HQJh5S+2/5ZV7TG+B2XfE/o15
qvKWVfJQ/h57Vndlg01VCg7zhJ5oOs47ZG9aYqNZkabgkLhzueC06l32hnNY
837EKjjEOVfyPjU9Yq/1Mz+czRKo/kbn3BudZ+25wkIvhT1E2O93i7tqLRMi
/J6LKS14rioPl09IPh77SAHBj5OwPqlaqADnq13gC07pVHAQjy256Cp+1/7H
Ft/pyswI+ej02Sf0BWH6D9gbbot58ThJ3sGy77FF3+MT9gmpkT5yp+QcjMFg
s71ul1E8EzB8O0DBJb/LXumSgdj2ZgVo/C229zN+3KpmLe/A8l3wjnvBfnv/
/Q2tp57KO0S4z/6uqbfT3tKx5tCJJfIOcmCwzj54UyX/OhYFh0sKvEB0yL5o
n0G47HQFB0tW/eUPnm6x7/LtKTadr+CQob9wb8u3Rfb8j/uU3tfKO8jsnCi9
c+Ju+w02/Huu6ig4hAtM1u44edT+kfjDzj9AeUh6mWKvVzr1TaYfIj2951ug
FNik4CAIBhvtTzmfN+etgoX/XvuTrROr28IQ4VEQel0wIlEeGn5n7bsEnd7/
Atp3E6R87gl7ST/F9sncCg4yxwuBaI7902lC1Tb35B1mzQSBnfZOEexrXRco
OMDyw4zVz8MqKhHhb5Jwc9F3YHgCAKdVL2c=
                 "]]}}]}},
           
           ImageSizeCache->{{14.585786437626894`, 
            98.95863504997644}, {-58.41421356237312, -41.58578643762689}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.45454545454545453`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], "0.125`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.0975609756097561`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.04041666666666667`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.45454545454545453`}, {
             Style["75%", Bold], 0.125}, {
             Style["median", Bold], 0.0975609756097561}, {
             Style["25%", Bold], 0.04041666666666667}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.16346153846153846`, 8.655265637020085}, {
                0.16346153846153846`, 9.344734362979915}, {0.0736280487804878,
                 9.344734362979915}, {0.0736280487804878, 
                8.655265637020085}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.1111111111111111, 9.344734362979915}, {
                  0.1111111111111111, 8.655265637020085}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0.0736280487804878, 9.}, {0., 9.}}, {{
                  0.16346153846153846`, 9.}, {0.5, 9.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 9.172367181489957}, {0., 
                  8.827632818510043}}, {{0.5, 9.172367181489957}, {0.5, 
                  8.827632818510043}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1: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
Rf7viz+/ioY7//+Lfx4N/w9uG8mp
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
                    
                    "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["

1: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
xLWysGf4BeGGWW8X9z6P+7/fz+T/zf8At07o+Q==
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.0125, 8.655265637020085}, {0.5125, 
                    9.344734362979915}]}}], 
                Annotation[#, {{8.655265637020085, 
                 9.344734362979915}, {-0.0125, 0.5125}}, "BoundingBox"]& ], 
               Antialiasing -> True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEX7F00vmomzlFyMAaDzfb5LT5WhZZKDruFtmoH
7t5kv+726Vr32UoONzvn3uice8I+4YDdC5n7ig7VIuvcH1YtsVcI3ejdsUnR
YdZMEDhp/9TxdFBLjKIDh3zNh4Ps6+3/6Fw4s2CuogPEvgP2U7endDc/VnRY
vQoELtlvP6jcc3azosPel775VZd32/9NVnbiilBySFHkjjzhtM1+4cnD2l1J
Sg4Pn4rsmdN03F7qq0qnmwRC3nntujXHZio5hILBVXvdVh2ugKVKUPu22Ku/
ibt66xzM/hX2j6ZP+qTFoeQwT+iJpuO8Q/aWOzs/tkUqOUyrlkrcufygfUoR
Y/WyJiUHjfUL97R92mX/TvhL0iJdJQcR643C1hsv2/M+ct66KQBm/gP7u/We
V0z3w8zfYL/oMEdItyBM/Wb7du6JtYkeCPf9ffVvWU+dooPM8UIgOmMf05mg
32AKM4+BIVqFmy1dR8nBTTy25KLrcvvtTI1LfZsVofq32q8TYtY++w/GP2p/
7GFBR/lCWPwdtheYzZNa7K3kcK392K8LEeftc7Xlm3p+KzqAXCNsfdB+afMM
I94fig4F8gdrWb4ftG+eoTaxjE/Joal0S+X8R4fsOXzqzPXOKzrIgcE6e4XN
mz65FSnB7dv+1feKVSzM/P32GRvlHtdFK0H9s8feXa3m2no5JQeJqoXiVQuX
20/j1rV6JKDkEC4wWbvj5FZ7HaE716cvVXR4E7hDrvX1Qfvrnb+evLJRcgDx
Anessz/Qe/3mx0lKDoJgcNA+uiN7ohgwvUHC87C9b1Xvl29VsPDaY7+V8eg+
77eK8PCSOeAvLHpZER7+S4I6Vvk2KMLDd6NUt2EZML1D0utOe8cOBqGU3YoO
k1Q8gWiTvdw+ryeXe2DmH7A/N2fxY1V5JQcAEXxFOg==
                 "]]}}]}},
           
           ImageSizeCache->{{14.585786437626908`, 
            106.84944083510037`}, {-77.4142135623731, -60.58578643762691}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], "0.5`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.16346153846153846`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.1111111111111111`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.0736280487804878`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.5}, {
             Style["75%", Bold], 0.16346153846153846`}, {
             Style["median", Bold], 0.1111111111111111}, {
             Style["25%", Bold], 0.0736280487804878}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.19375, 9.655265637020085}, {0.19375, 
                10.344734362979915`}, {0.08333333333333333, 
                10.344734362979915`}, {0.08333333333333333, 
                9.655265637020085}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.11538461538461539`, 10.344734362979915`}, {
                  0.11538461538461539`, 9.655265637020085}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0.08333333333333333, 10.}, {0., 10.}}, {{0.19375, 
                  10.}, {0.375, 10.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 10.172367181489957`}, {0., 
                  9.827632818510043}}, {{0.375, 10.172367181489957`}, {0.375, 
                  9.827632818510043}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1: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
B/774fVo+L+tfLYA
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
7WKb+B5tn9etYgee9RwSB8Vhatvo207GsgfEfnK72WeP+JF1r6frDLuo78Pb
j3ayO9jTsr+Ii+IStb30nRXnxM/ilDgpfuIMBznvMXFUHEfb2Y+IE3gn0YfJ
7eMsB+g9TvaCOM85TrPPGc5whnOcwj/Nmc7Rc9ote4I9T5E5z+zL3N+v4ol4
LJ6KKyJdXBW/iWviOj0XeTZX6EtHX2LeDbK/059O/1VWm/enuCVuiz9EBvom
fRnkrjPvBr7V/xb/iBfoDGZc5jx2rjvMvkvtFns+EA/FI67vo++QvUftIc/i
HpkH9N8m+4zn9Jd4zprJdSZnvMfM+8x8zDM+ws/8GPop8565zXvBPb5kViba
3n/7jNhn4BV1+x8m9nek/W1pfyd6S2cRWb1c117oV2Q9qZmXDe1FNo/IK3xF
duo5RE7WXCK38CGblUx2cLJ5yORFO32+eH7oXORKilIiSPhTz2f3JYJFGZFf
FBAFuQ5E+5MNoFaA750AMvnZ149sAHmrFeX7qZgoLkpwloLMKAxFyJYkUwrt
9AXhBaOLkQvh7GXJBHNPNUWMqCXCRUURIcqJUFGe67Lo0swJoWZeBa5tDaNW
lr5KzKvMta1V2CsCL4x9w6lZpqqoxlrdy/UevuRdi8SrQW8F+qu49UVRjxbx
Ik7U8XL11qBei3uvjY7mecTixaGj3Z5Rbeqx1G22vc72/wn1z397V2efBPZM
9HK92xaw97suXj3RgDWZfCL1eHoT0E72X5E2IPw=
                    
                    "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["

1: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
wP3f72z6/+Z/AO0tQFM=
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.009375000000000001, 9.655265637020085}, {
                    0.384375, 10.344734362979915`}]}}], 
                Annotation[#, {{9.655265637020085, 
                 10.344734362979915`}, {-0.009375000000000001, 0.384375}}, 
                 "BoundingBox"]& ], Antialiasing -> True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQfXtbLhDtti9OTtkY7qDiMGsmCJy0t5378mHsA2WH
XxJz+g/+3GG/L3Ov8Q09FQcR643C1hs325ttn/GlU1vFoVpknfvDqi32gmdl
7+x8qgzlH7FnzlppKeCv4lBy0VU8tuSivYzOt+LK1coODGCwwd5r6tdrT/Ng
/AP2yZUxHnG9Kg7ckSecxDZdsO/yE7ombQ7jH7A3md53J7dK2aHj2K8LEfK7
7Lfes9J4tk3ZIUURpGKZ/QGuGMV3M5UdQsFgq/3fag0Bhp0w8/fYuxvNCDix
HWHfiohDM060Kzu8lb62L/Htbvtm+75cSVcVhyscp217N5yxX7Jvdn0ds4qD
xvqFe9o+7bJPEt390lUY4f/O1NKzd9hUoOYxMOzcfEZUdY4K3H91N7nUFbwR
6pfOlWh9MkXZQeZ4IRDtsZ+1qPNBaLgKnH9Vz9vkXZEy3Lx/fK9u+PKqOLiB
Qs91u/3R1/5q5WEqcP8tdr/Ds7gMZt4ce+OeC65C05QdjMFgs/2D+J/2Zhoq
DpNUPIHokP3D+1I72C4rOySplwHRJfudB/0Ys41VHFi+C95xL9hvv8MoMHkS
ML7nP5qkGOF+2v6i7v3Hotdg7rlgPzPijbdXo7LD/U+6QHTe/nYOX1TPYmW4
+ed9OuOjeBD+aa1s3PIPGJ+TpHdOlN550D6DSVSMZ4+yQ4XZK2vpr2ftbRJU
by0GqteM6T/0VeOMvfaH2RszOFQcdsi1vg7ccc5eS/7A1anA+L53FwT22m9c
+a67s1gZGp6H7d8uVWYPPgRz3yH7Kp/EPYcWIMJL6mDazAxg+ph3o3Pujc69
9kVn2r+r6MLct8b+z+zPCiIflR3SwOCY/VK2Ba9vBqo4QPLDafsjRjf2RqvB
4vOGvdxdfvMjZSoOAIFuTgo=
                 "]]}}]}},
           
           ImageSizeCache->{{15.585786437626908`, 
            85.41421356237309}, {-96.68225028135338, -79.58578643762691}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], "0.375`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], "0.19375`"}, {
             
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.11538461538461539`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.08333333333333333`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.375}, {
             Style["75%", Bold], 0.19375}, {
             Style["median", Bold], 0.11538461538461539`}, {
             Style["25%", Bold], 0.08333333333333333}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {GrayLevel[0.5], EdgeForm[GrayLevel[0]], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], {
             EdgeForm[], 
             FaceForm[], 
             GraphicsGroupBox[{Antialiasing -> False, 
               
               PolygonBox[{{0.38085284280936454`, 10.655265637020085`}, {
                0.38085284280936454`, 11.344734362979915`}, {
                0.23307692307692307`, 11.344734362979915`}, {
                0.23307692307692307`, 
                10.655265637020085`}}], {}, {{}, {}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[1], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{0.3076923076923077, 11.344734362979915`}, {
                  0.3076923076923077, 10.655265637020085`}}]}}, {}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 LineBox[{{{0.23307692307692307`, 11.}, {0., 11.}}, {{
                  0.38085284280936454`, 11.}, {0.7777777777777778, 11.}}}]}}, {
                RGBColor[0.55, 0.13, 1], 
                GrayLevel[0.5], {
                 RGBColor[0.55, 0.13, 1], 
                 
                 LineBox[{{{0., 11.172367181489957`}, {0., 
                  10.827632818510043`}}, {{0.7777777777777778, 
                  11.172367181489957`}, {0.7777777777777778, 
                  10.827632818510043`}}}]}}, {}}], 
             GraphicsGroupBox[{
               TagBox[
                GraphicsGroupBox[{{
                   EdgeForm[], 
                   GraphicsComplexBox[CompressedData["
1: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
4SmrqkPi3ehoub/1+hQq9tPRsn/nbdA8d4mOho/ckD0p6zkdDdfr0TrwmuYj
cTT84992ebcG0dGy32+JVv97Ph0NP9Hnhc2j7XQ0fGtpP//KRDpazvddm67W
PKCjZX62zFGt/0FHw7Wea1p/6vlYHC3zdZi9z/fJdDT82sijmU030NHwQ/V1
ja1j6Gj4hkMWltq5dDR82kRfz871dDS8d+PNVEPdJ+JoeLOE9u+NreloeIXd
3H7mS+lo+IUm8e6Dg+loeFhyvcLqPB0NXzV/yCubCjoaPrbNVlNb9VJxNNww
446rXV86Gv516c8Jc2bT0fBinQXPFvrS0fCkayeMlifQ0fCda947rymgo+GL
DIYf9mqgo+HD87eX+xqUiaPhupsK9QPG0tFyvht3nhPkTkfD8x4sitwXTkfL
/uKvKDl4mY6G+/Rv0DlWQ0fLflM5wu6UVjn3G2XD+wXtCj07mI6Gtx52v/CC
Ex0Nf1bbRSs7gI6GXw5fansziY6GR9qcCSwooaPhQxq9q5erVIij4T0Lj2x1
06aj4doJN7qt7UVHw1U312V7/EZHw1/btXXeOIWOhj/ubaHqs4iOlvu7iWPM
lg10NDz10WYr/0A6Wu735NiygBg6Gh4UcNM7MIWOlvt//mu94Fw6Gu5q0T4z
9AkdLfNBm8GO++vpaPioqjmNkWqV4mjZDzO2RBzSpaPlfgqJG3ykNx0t+6Pr
rQfHrOloub+s6j2Oz6Cj4U91OuicXkpHy/32yjI1aRMdDc+6Nm9GSjAdLfff
gT/fpcXS0fD9axJCMs7T0XI/jrtjfuk2HQ1fbfC2ILuCjobP+6TjnvOejoZP
yB+qmaf+jzgaPviYk+KOHh0N777Jf1JhXzoa3m76ibqi0XQ0/Ifx3V0ls+lo
eJ3Ke5MnK+ho+MMHunnlvnQ0PEcxzPVpGB0NP+vvrP48gY6Gx8zZHl+bSUfD
d/c/ZfO6gI6Ge7UsrH5TRUfLfl75YeuHBjoaPv18J6PPrZ+Ko2V/D7K6+tWA
joabuSxyVhlIR8t+P2yHqto4OhreXFsR03wuHS37f+09q1ar6Wh45ZVPZRr+
dDQ8P1zPp10EHQ3PcBuhr3OajoYn2LhkdrxCR8P36u9y1L9PR8P93ic2Gryg
o+Fut4oijL7R0TKfHvk8uFfbKs6nyoaP8+pSYtqdjpb5dcoozz6WdDS8W8+l
Ov0n0dEy334PTLVYQEfDvxUlzxiyno6W+fdk8bthO+ho+AO/LyEjDtLR8Kv2
Bv3GJNPRMn/1HVM49jodDT/YfJn7xId0tMxnZX9pTnlFR8M9U88qpqtWi6Nl
fgssmTSrAx0Nn7rwW52DMR0t890Qw8B5w+houGnb302dp9LRMv/VLM9bvJiO
hje9FOzq6kVHw9/uTVVfuZuOhpeveBTvfpiOht8e9cNmXSodDU/vZPTM8yYd
DY97M9b/j1I6Gh6au9Jo8xs6Gu4bHXLVr+kzcTR8pUea87aOdDTcYdIT1Z1m
dDT8dyPVw7tH0NHwAV+6W++xo6PhXe+NLw9zpaPhGsfdfMK96Wh44+Yw/ag9
dDT8+cz0zOhjdDS8yKzM8Wg6HQ2/otbkS9wdOhqueNwz8kQlHQ0/cGaipeID
HQ0P2LG6JLnFc3E0fL3TPs9UfToa7jwoQyfdnI6GT9aoSM0cQ0fDf6tWs7ts
T0fDjTON319dSUfDdUJtQ29soaPhTZat7XdrLx0t+5d1eGH+cToaXvpzlvu9
LDpa9rPXlZrFhXQ0PO16s8SH1XS07G9Rpraln+lo+J61U15VtKkRR8t+N359
YFVXOhq+vGukac1AOlr2v4aLeS/H0dHw0Xefuv47l46Gm8ept3i3mo6Gd/E2
S/joT0fL/jhj2u+NEXQ0vMHE89m303S07JeqUf6q2XQ0/F7JZaOmxXS07J+J
1VfVa+lo+KltLRe2/k5Hy346t89PWu1ecD9VNnzbgBmH2/ego+FrWnlZ/zyE
joY7/XOwvJMtHQ2fmJ7t08WZjpb9OPi5vqEHHQ0PG/4i9L8/l+Bo+K8lfmYl
fvz/aPj/ANo0jo8=
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.8], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
y8mlkE3kPHPQS8muIrsavRzvP6trmXg=
                    "]]}]}, {}, {}, {}, {}}},
                     VertexColors -> CompressedData["
1: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
QVquAbj/+6kN/9/8FzvB3cg=
                    "]]}, {
                   FaceForm[], 
                   GrayLevel[0.65], 
                   
                   RectangleBox[{-0.019444444444444445`, 
                    10.655265637020085`}, {0.7972222222222223, 
                    11.344734362979915`}]}}], 
                Annotation[#, {{10.655265637020085`, 
                 11.344734362979915`}, {-0.019444444444444445`, 
                 0.7972222222222223}}, "BoundingBox"]& ], Antialiasing -> 
               True, {
                Directive[
                 Opacity[0.5], 
                 PointSize[0.015], 
                 GrayLevel[0]], 
                PointBox[CompressedData["
1:eJxFUn0s1HEYvyGv09aIhmVl3++qVZQklXseSfyRhUtbdLa8VuadVsrLCLPM
Mm+dwxWrG9ZG8pJoigvryO3HcWcnTkfJy06G+as7HJ99vvvueZ7teT7fz/M9
EhoXEKHHYrGcNUd7b2MYiqcf1sMawQqeFjJgLTnx3M0ohsezDefCpsC4+MuJ
vEqCTRaXNJRAavozk+EDFNsP5/z1bx8CUfatXnMuxQV/bUYCVvf7fSefEAzc
wii0V5g8T+shqJtnYG8nqr5Od+oi4KqLlMG2FFMZ/uTq2zEwYDue5r6k2PXH
Ny6V+Q7Z3v4fXtcQdNvnKJxSjYBfkfxKkz7FeW2ZPwlgccfJdGKvf0prvi1n
QBfLYO2Ba/TTXLodZyrBT3i126mDYD8n6zLpZ0Bfb4ItdKX4NfGGw8n1ERAL
3EsUwRRDPB+bq1x6wWeTX0BLKFaP51eN5w8CFRuovRbIrn7nkbaQhmLdPCWw
Lx4a/rhO0FJrV1MPGL8JR3m9rs5icTMq320k7fnT7f1y0VGP4jVrbrLEqw/Q
WtkJmQQ1gSYzDeGNoVa5R/f8KjOLV7glUbTrS9BQDHY2oWZDSbr9DYCHQ3NG
SxjBWcvOyqxyBupH0ywGJDo9DHjIYoVKKcGoM1WiZCsG/Gzy7xomEqSejYXn
lxmwEaxGi6MI9vZowUDBSoNRx3GKP1dOafgDFhWx6T6RBOGcNO/b5hSoHcPL
5K/o7ntwVGB0k0ewLKiuNKhOBTVr0wYtHIreaVG1n5slMM9aLU6YI2g6Vhvv
bjoGKzWDv+y96e7/k7YrS/nHKC4vaTEJKeX/hKoIuqu/N6DStsF3Z58sCZxV
d9XPZlHcss96EA6qBj55uVCUaddVNQ73bgtKLSIpuhXOXCic+Q1io0AOV0TQ
eQsMdLxXKF48ItgWM9EaMyGFHN5Gd2mqrn8/DFP5/lqN/v8nzV8y
                 "]]}}]}},
           
           ImageSizeCache->{{13.585786437626894`, 
            155.4142135623731}, {-116.41421356237312`, -99.5857864376269}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.7777777777777778`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.38085284280936454`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.3076923076923077`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.23307692307692307`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.7777777777777778}, {
             Style["75%", Bold], 0.38085284280936454`}, {
             Style["median", Bold], 0.3076923076923077}, {
             Style["25%", Bold], 0.23307692307692307`}, {
             Style["min", Bold], 0.}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], 
         "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}},
  AspectRatio->1.4562305898749055`,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.03888888888888889, 0.12079220072209262`},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6552656370200842, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      11.344734362979915`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6552656370200842, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      11.344734362979915`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}, {{{0., 
       FormBox["0.`", TraditionalForm]}, {0.2, 
       FormBox["0.2`", TraditionalForm]}, {0.4, 
       FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
       FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
       FormBox["0.8`", TraditionalForm]}, {1., 
       FormBox["1.`", TraditionalForm]}}, None}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->170,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, {{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.6552656370200842, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     11.344734362979915`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}]], "Output",
 CellChangeTimes->{3.823094623657137*^9},
 CellLabel->
  "Out[1365]=",ExpressionUUID->"858ab667-c0d2-4b2e-b0b6-f4fb02ab14ec"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1074, 655},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 288, 7, 68, "Input",ExpressionUUID->"fc5f1a20-b802-4d40-80e7-5d2fdff004f9",
 InitializationCell->True],
Cell[849, 29, 10923, 288, 782, "Input",ExpressionUUID->"e2a0241e-d726-4a6a-8359-97cd9cf7fa91",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[11797, 321, 182, 4, 69, "Chapter",ExpressionUUID->"6baefeaf-e8ac-410c-a8ea-5694da8c7294"],
Cell[11982, 327, 945, 22, 94, "Input",ExpressionUUID->"9c47ad32-dc0b-4d95-a559-95acc48e852c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12964, 354, 279, 4, 69, "Chapter",ExpressionUUID->"2def25d3-e572-42f0-942e-55eb51f77d91"],
Cell[13246, 360, 218, 4, 35, "Text",ExpressionUUID->"43c0e326-474b-4e84-a379-b6159a4649d8"],
Cell[13467, 366, 23882, 666, 1480, "Input",ExpressionUUID->"bc27caa4-1e50-46e2-850a-20195b7764be"],
Cell[37352, 1034, 151, 3, 35, "Text",ExpressionUUID->"8da20c90-90de-41d0-a779-cd4137ebc194"],
Cell[CellGroupData[{
Cell[37528, 1041, 10825, 281, 472, "Input",ExpressionUUID->"1cf85238-49f3-44cd-9cc9-85ad9287bc1e"],
Cell[48356, 1324, 66277, 1146, 198, "Output",ExpressionUUID->"327fcbb6-a6e2-4e5f-af17-cfbcda2f8d71"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114682, 2476, 238, 4, 69, "Chapter",ExpressionUUID->"270a849c-7221-4b31-95b8-c0a0444664b5"],
Cell[114923, 2482, 2306, 65, 157, "Input",ExpressionUUID->"e8931fe8-e8eb-47cd-9ffa-99a738857f3d"],
Cell[CellGroupData[{
Cell[117254, 2551, 9751, 241, 199, "Input",ExpressionUUID->"7f5f7f9c-3604-4af6-919e-b697f14d5e42"],
Cell[127008, 2794, 1888869, 33851, 423, "Output",ExpressionUUID->"84655cb7-1fdc-4b1b-b728-5e38296b9ae1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2015926, 36651, 199, 3, 69, "Chapter",ExpressionUUID->"86fb9bbd-b5a2-45d9-a3aa-459aeb90da59"],
Cell[CellGroupData[{
Cell[2016150, 36658, 18601, 443, 724, "Input",ExpressionUUID->"b7b5b380-d73b-4d45-b058-aa2a03edb37d"],
Cell[2034754, 37103, 233757, 4707, 270, "Output",ExpressionUUID->"858ab667-c0d2-4b2e-b0b6-f4fb02ab14ec"]
}, Open  ]]
}, Open  ]]
}
]
*)

